1677688067
waR3U4bTeM%3A1ca1eee8fe872d870e98c763b82afe44-a18c23401c96517d25d0bac4e20c724e
s:169876:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImExOGMyMzQwMWM5NjUxN2QyNWQwYmFjNGUyMGM3MjRlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTE6InByb2Nlc3MucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MTE6InByb2Nlc3MucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMjY1MTU6Ijw/cGhwCmluY2x1ZGUgJ2NvbmZpZy5waHAnOwoKLyoqKioqKioqKioqKioqKioqKioqIFNNSUxFWSBFRElUT1IgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAic21pbGV5ZWRpdG9yIikKewoJLy8gU2VuZCBKU09OCgkkYXJyYXkgPSBhcnJheSgnZGF0YScgPT4gc21pbGV5RWRpdG9yKCkpOwoJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwp9CgovKioqKioqKioqKioqKioqKioqKiogRURJVCBDT01NRU5UICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgaXNzZXQoJF9QT1NUWydjb21tZW50aWQnXSkgJiYgaXNzZXQoJF9QT1NUWydjb21tZW50J10pICYmICRfR0VUWydkbyddID09ICJlZGl0Y29tbWVudCIpCnsKCS8vIERhdGEgdG8gc2VuZCBiYWNrCgkkZGF0YSA9ICIiOwoKCS8vIFF1ZXJ5IGRhdGFiYXNlIGZvciBjb21tZW50CgkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBjb21tZW50cyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb21tZW50aWQnXSkuIiciOwoJCglpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCXsKCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQl7CgkJCS8vIENoZWNrIGNvbW1lbnQgbWF0Y2hlcyBJRCBvZiB0cm9vcGVyCgkJCWlmKCRfU0VTU0lPTlsnaWQnXSA9PSAkZGItPnRyb29wZXJpZCkKCQkJewoJCQkJLy8gVXBkYXRlIGNvbW1lbnQKCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGNvbW1lbnRzIFNFVCBjb21tZW50ID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnQnXSkuIicgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29tbWVudGlkJ10pLiInIEFORCB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkuIiciKTsKCgkJCQkvLyBFZGl0IGNvbW1lbnQKCQkJCWVkaXRQb3N0KGdldENvbW1lbnRQb3N0SUQoY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnRpZCddKSksIGNsZWFuSW5wdXQoJF9QT1NUWydjb21tZW50J10pKTsKCgkJCQkvLyBTZXQgdXAgcmV0dXJuIGRhdGEKCQkJCSRkYXRhID0gbmwyYnIoaXNJbXBvcnRhbnQoJGRiLT5pbXBvcnRhbnQsIHNob3dCQmNvZGVzKGNsZWFuSW5wdXQoJF9QT1NUWydjb21tZW50J10pKSkpOwoJCQl9CgkJfQoJfQoKCS8vIFNlbmQgSlNPTgoJJGFycmF5ID0gYXJyYXkoJ2RhdGEnID0+ICRkYXRhKTsKCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKfQoKLyoqKioqKioqKioqKioqKioqKioqIEFERCBNQVNURVIgUk9TVEVSICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgaXNzZXQoJF9QT1NUWyd1c2VySUQnXSkgJiYgaXNzZXQoJF9QT1NUWydzcXVhZCddKSAmJiAkX0dFVFsnZG8nXSA9PSAiYWRkbWFzdGVycm9zdGVyIiAmJiBpc0FkbWluKCkpCnsKCS8vIFNldCB1cCBxdWVyeSBhZGQKCSRxdWVyeUFkZCA9ICIiOwoJJHF1ZXJ5QWRkMiA9ICIiOwoJCgkvLyBXaGljaCBjbHViIHRvIGdldAoJaWYoJF9QT1NUWydzcXVhZCddIDw9IGNvdW50KCRzcXVhZEFycmF5KSkKCXsKCQkkcXVlcnlBZGQgPSAicDUwMSI7Cgl9CgkKCS8vIFNldCB1cCBjb3VudAoJJGNsdWJDb3VudCA9IGNvdW50KCRzcXVhZEFycmF5KSArIDE7CgkKCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJewoJCS8vIE1hdGNoCgkJaWYoJF9QT1NUWydzcXVhZCddID09ICRjbHViQ291bnQpCgkJewoJCQkvLyBBZGQgdG8gcXVlcnkKCQkJJHF1ZXJ5QWRkID0gIiIuJGNsdWJfdmFsdWVbJ2RiJ10uIiI7CgkJfQoJCQoJCS8vIEluY3JlbWVudAoJCSRjbHViQ291bnQrKzsKCX0KCQoJLy8gQ2hlY2sgaWYgNTAxc3Qgc3F1YWQKCWlmKCRfUE9TVFsnc3F1YWQnXSA8PSBjb3VudCgkc3F1YWRBcnJheSkpCgl7CgkJLy8gQWRkIHRoaXMgcXVlcnkgdG8gc2V0IHNxdWFkCgkJJHF1ZXJ5QWRkMiA9ICIsIHNxdWFkID0gIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydzcXVhZCddKTsKCX0KCQoJLy8gUXVlcnkgdHJvb3BlcgoJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgdHJvb3BlcnMgU0VUICIuJHF1ZXJ5QWRkLiIgPSAxIi4kcXVlcnlBZGQyLiIgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEJ10pLiInIik7CgkKCS8vIFNlbmQgSlNPTgoJJGFycmF5ID0gYXJyYXkoJ2RhdGEnID0+ICdUcm9vcGVyIGFkZGVkIScpOwoJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwp9CgovKioqKioqKioqKioqKioqKioqKiogQ0hBTkdFIFBFUk1JU1NJT04gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiBpc3NldCgkX1BPU1RbJ3Ryb29wZXJpZCddKSAmJiBpc3NldCgkX1BPU1RbJ3Blcm1pc3Npb24nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImNoYW5nZXBlcm1pc3Npb24iICYmIGlzQWRtaW4oKSkKewoJJHF1ZXJ5QWRkID0gIiI7CgkKCS8vIFdoaWNoIGNsdWIgdG8gZ2V0CglpZigkX1BPU1RbJ2NsdWInXSA8PSBjb3VudCgkc3F1YWRBcnJheSkpCgl7CgkJJHF1ZXJ5QWRkID0gInA1MDEiOwoJfQoJCgkvLyBTZXQgdXAgY291bnQKCSRjbHViQ291bnQgPSBjb3VudCgkc3F1YWRBcnJheSkgKyAxOwoJCgkvLyBMb29wIHRocm91Z2ggY2x1YnMKCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCXsKCQkvLyBNYXRjaAoJCWlmKCRfUE9TVFsnY2x1YiddID09ICRjbHViQ291bnQpCgkJewoJCQkvLyBBZGQgdG8gcXVlcnkKCQkJJHF1ZXJ5QWRkID0gIiIuJGNsdWJfdmFsdWVbJ2RiJ10uIiI7CgkJfQoJCQoJCS8vIEluY3JlbWVudAoJCSRjbHViQ291bnQrKzsKCX0KCQkJCQoJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgIi4kcXVlcnlBZGQuIiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwZXJtaXNzaW9uJ10pLiInIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJyIpOwp9CgovKioqKioqKioqKioqKioqKioqKiogVFJPT1BFUiBDSEVDSyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKLy8gU2V0IHJlc2VydmUKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJ0cm9vcGVyY2hlY2tyZXNlcnZlIiAmJiBsb2dnZWRJbigpICYmIGlzQWRtaW4oKSkKewoJaWYoZW1wdHkoJF9QT1NUWyd0cm9vcGVyJ10pKQoJewoJCS8vIFNlbmQgSlNPTgoJCSRhcnJheSA9IGFycmF5KCdkYXRhJyA9PiAnTm8gdHJvb3BlcnMgc2VsZWN0ZWQhJyk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQoJZWxzZQoJewoJCSRxdWVyeUFkZCA9ICIiOwoJCQoJCS8vIFdoaWNoIGNsdWIgdG8gZ2V0CgkJaWYoJF9QT1NUWydjbHViJ10gPD0gY291bnQoJHNxdWFkQXJyYXkpKQoJCXsKCQkJJHF1ZXJ5QWRkID0gInA1MDEiOwoJCX0KCgkJLy8gU2V0IHVwIGNvdW50CgkJJGNsdWJDb3VudCA9IGNvdW50KCRzcXVhZEFycmF5KSArIDE7CgkJCgkJLy8gTG9vcCB0aHJvdWdoIGNsdWJzCgkJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJCXsKCQkJLy8gTWF0Y2gKCQkJaWYoJF9QT1NUWydjbHViJ10gPT0gJGNsdWJDb3VudCkKCQkJewoJCQkJLy8gQWRkIHRvIHF1ZXJ5CgkJCQkkcXVlcnlBZGQgPSAiIi4kY2x1Yl92YWx1ZVsnZGInXS4iIjsKCQkJfQoJCQkKCQkJLy8gSW5jcmVtZW50CgkJCSRjbHViQ291bnQrKzsKCQl9CgkKCQlmb3JlYWNoKCRfUE9TVFsndHJvb3BlciddIGFzICR0cm9vcGVyKQoJCXsKCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgdHJvb3BlcnMgU0VUICIuJHF1ZXJ5QWRkLiIgPSAnMicgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCR0cm9vcGVyKS4iJyIpOwoJCX0KCQkKCQkvLyBTZW5kIEpTT04KCQkkYXJyYXkgPSBhcnJheSgnZGF0YScgPT4gJ1N1Y2Nlc3MhJyk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQp9CgovLyBTZXQgcmV0aXJlZAppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gInRyb29wZXJjaGVja3JldGlyZWQiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CglpZihlbXB0eSgkX1BPU1RbJ3Ryb29wZXInXSkpCgl7CgkJLy8gU2VuZCBKU09OCgkJJGFycmF5ID0gYXJyYXkoJ2RhdGEnID0+ICdObyB0cm9vcGVycyBzZWxlY3RlZCEnKTsKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9CgllbHNlCgl7CgkJZm9yZWFjaCgkX1BPU1RbJ3Ryb29wZXInXSBhcyAkdHJvb3BlcikKCQl7CgkJCSRxdWVyeUFkZCA9ICIiOwoJCQkKCQkJLy8gV2hpY2ggY2x1YiB0byBnZXQKCQkJaWYoJF9QT1NUWydjbHViJ10gPD0gY291bnQoJHNxdWFkQXJyYXkpKQoJCQl7CgkJCQkkcXVlcnlBZGQgPSAicDUwMSI7CgkJCX0KCQkJCgkJCS8vIFNldCB1cCBjb3VudAoJCQkkY2x1YkNvdW50ID0gY291bnQoJHNxdWFkQXJyYXkpICsgMTsKCQkJCgkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCXsKCQkJCS8vIE1hdGNoCgkJCQlpZigkX1BPU1RbJ2NsdWInXSA9PSAkY2x1YkNvdW50KQoJCQkJewoJCQkJCS8vIEFkZCB0byBxdWVyeQoJCQkJCSRxdWVyeUFkZCA9ICIiLiRjbHViX3ZhbHVlWydkYiddLiIiOwoJCQkJfQoJCQkJCgkJCQkvLyBJbmNyZW1lbnQKCQkJCSRjbHViQ291bnQrKzsKCQkJfQoJCQkKCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgdHJvb3BlcnMgU0VUICIuJHF1ZXJ5QWRkLiIgPSAnMycgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCR0cm9vcGVyKS4iJyIpOwoJCX0KCQkKCQkvLyBTZW5kIEpTT04KCQkkYXJyYXkgPSBhcnJheSgnZGF0YScgPT4gJ1N1Y2Nlc3MhJyk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQp9CgovKioqKioqKioqKioqKioqKioqKiogUEhPVE9TICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgovLyBEZWxldGUgUGhvdG8KaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJkZWxldGVwaG90byIgJiYgbG9nZ2VkSW4oKSkKewoJLy8gUXVlcnkgZGF0YWJhc2UgZm9yIHBob3RvcwoJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gdXBsb2FkcyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwaG90b2lkJ10pLiInIjsKCQoJLy8gQ291bnQgcGhvdG9zCgkkaSA9IDA7CgkKCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJewoJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCXsKCQkJLy8gSWYgaXMgdHJvb3BlciBvciBpcyBhZG1pbgoJCQlpZigkZGItPnRyb29wZXJpZCA9PSAkX1NFU1NJT05bJ2lkJ10gfHwgaXNBZG1pbigpKQoJCQl7CgkJCQkvLyBEZWxldGUgZmlsZQoJCQkJdW5saW5rKCJpbWFnZXMvdXBsb2Fkcy8iIC4gJGRiLT5maWxlbmFtZSk7CgkJCQkKCQkJCS8vIFF1ZXJ5IGRhdGFiYXNlCgkJCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIHVwbG9hZHMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncGhvdG9pZCddKS4iJyIpOwoJCQkJCgkJCQkvLyBJbmNyZW1lbnQKCQkJCSRpKys7CgkJCX0KCQl9Cgl9CgkKCS8vIElmIGZhaWxlZC4uLgoJaWYoJGkgPT0gMCkKCXsKCQkvLyBTZW5kIEpTT04KCQkkYXJyYXkgPSBhcnJheSgnZGF0YScgPT4gJ0ZhaWxlZCB0byBkZWxldGUgcGhvdG8hJyk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQoJZWxzZQoJewoJCS8vIFNlbmQgSlNPTgoJCSRhcnJheSA9IGFycmF5KCdkYXRhJyA9PiAnRGVsZXRlZCEnKTsKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9Cn0KCi8vIE1ha2UgQWRtaW4gLyBSZWd1bGFyCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAiYWRtaW5waG90byIgJiYgbG9nZ2VkSW4oKSkKewoJLy8gUXVlcnkgZGF0YWJhc2UgZm9yIHBob3RvcwoJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gdXBsb2FkcyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwaG90b2lkJ10pLiInIjsKCQoJLy8gQ291bnQgcGhvdG9zCgkkaSA9IDA7CgkKCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJewoJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCXsKCQkJaWYoJGRiLT5hZG1pbiA9PSAwKQoJCQl7CgkJCQkvLyBRdWVyeSBkYXRhYmFzZQoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgdXBsb2FkcyBTRVQgYWRtaW4gPSAnMScgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncGhvdG9pZCddKS4iJyIpOwoJCQl9CgkJCWVsc2UKCQkJewoJCQkJLy8gUXVlcnkgZGF0YWJhc2UKCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHVwbG9hZHMgU0VUIGFkbWluID0gJzAnIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Bob3RvaWQnXSkuIiciKTsKCQkJfQoJCQkKCQkJLy8gSW5jcmVtZW50CgkJCSRpKys7CgkJfQoJfQoJCgkvLyBJZiBmYWlsZWQuLi4KCWlmKCRpID09IDApCgl7CgkJLy8gU2VuZCBKU09OCgkJJGFycmF5ID0gYXJyYXkoJ2RhdGEnID0+IDApOwoJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCX0KCWVsc2UKCXsKCQkvLyBTZW5kIEpTT04KCQkkYXJyYXkgPSBhcnJheSgnZGF0YScgPT4gMSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQp9CgovKioqKioqKioqKioqKioqKioqKiogTU9ESUZZIFNJR04gVVAgRlJPTSBFVkVOVCBQQUdFICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gIm1vZGlmeXNpZ251cCIgJiYgbG9nZ2VkSW4oKSkKewoJLy8gUHJldmVudCBpZiB0cm9vcCBmdWxsCgkkZ2V0TnVtT2ZUcm9vcGVycyA9ICRjb25uLT5xdWVyeSgiU0VMRUNUIGlkIEZST00gZXZlbnRfc2lnbl91cCBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkuIicgQU5EIHN0YXR1cyAhPSAnNCcgQU5EIHN0YXR1cyAhPSAnMSciKTsKCgkvLyBTZXQgdXAgYWRkIHRvIHF1ZXJ5CgkkYWRkVG9RdWVyeSA9ICIiOwoKCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJewoJCS8vIEFkZAoJCSRhZGRUb1F1ZXJ5IC49ICIgKyBTVU0oIi4kY2x1Yl92YWx1ZVsnZGJMaW1pdCddLiIpIjsKCX0KCQoJLy8gSGFjayBDaGVjawoJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gZXZlbnRfc2lnbl91cCBXSEVSRSAodHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLiInIE9SIGFkZGVkYnkgPSAnIi5jbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkuIicpIEFORCB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkuIiciOwoJCgkvLyBVc2VkIHRvIHNlZSBpZiByZWNvcmQgZXhpc3RzCgkkaSA9IDA7CgkKCS8vIFVzZWQgdG8gZGV0ZXJtaW5lIGlmIGEgZnJpZW5kCgkkaXNGcmllbmQgPSBmYWxzZTsKCQoJLy8gT3V0cHV0CglpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCXsKCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQl7CgkJCS8vIEluY3JlbWVudAoJCQkkaSsrOwoJCQkKCQkJLy8gQ2hlY2sgdG8gc2VlIGlmIGEgZnJpZW5kCgkJCWlmKCRkYi0+YWRkZWRieSA9PSAkX1NFU1NJT05bJ2lkJ10pCgkJCXsKCQkJCSRpc0ZyaWVuZCA9IHRydWU7CgkJCX0KCQl9Cgl9CgoJLy8gU2V0IHVwIGxpbWl0cwoJJGxpbWl0NTAxc3QgPSAiIjsKCgkvLyBTZXQgdXAgbGltaXQgdG90YWxzCgkkbGltaXQ1MDFzdFRvdGFsID0gZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSksIDApOwoKCS8vIFNldCB1cCBjbHViIGNvdW50CgkkY2x1YkNvdW50ID0gMTsKCgkvLyBMb29wIHRocm91Z2ggY2x1YnMKCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCXsKCQkvLyBTZXQgdXAgbGltaXRzCgkJJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfSA9ICIiOwoKCQkvLyBTZXQgdXAgbGltaXQgdG90YWxzCgkJJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddIC4gIlRvdGFsIn0gPSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSwgJGNsdWJDb3VudCk7CgoJCS8vIEluY3JlbWVudCBjbHViIGNvdW50CgkJJGNsdWJDb3VudCsrOwoJfQoKCS8vIFNldCB0b3RhbAoJJGxpbWl0VG90YWwgPSAwOwoKCS8vIElzIHRoaXMgYSB0b3RhbCB0cm9vcGVyIGV2ZW50PwoJJHRvdGFsVHJvb3BlckV2ZW50ID0gZmFsc2U7CgoJLy8gUXVlcnkgdG8gZ2V0IGxpbWl0cwoJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gZXZlbnRzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkuIiciOwoKCS8vIE91dHB1dAoJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgl7CgkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJewoJCQkvLyBBZGQgdG90YWwKCQkJJGxpbWl0VG90YWwgKz0gJGRiLT5saW1pdDUwMXN0OwoKCQkJLy8gU2V0IDUwMQoJCQkkbGltaXQ1MDFzdCA9ICRkYi0+bGltaXQ1MDFzdDsKCgkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCXsKCQkJCS8vIFNldCB2YXJpYWJsZXMKCQkJCSR7JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX0gPSAkZGItPnskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfTsKCgkJCQkvLyBBZGQgdmFyaWFibGVzCgkJCQkkbGltaXRUb3RhbCArPSAkZGItPnskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfTsKCQkJfQoKCQkJLy8gQ2hlY2sgZm9yIHRvdGFsIGxpbWl0IHNldCwgaWYgaXQgaXMsIHJlcGxhY2UgbGltaXQgd2l0aCBpdAoJCQlpZigkZGItPmxpbWl0VG90YWxUcm9vcGVycyA+IDUwMCB8fCAkZGItPmxpbWl0VG90YWxUcm9vcGVycyA8IDUwMCkKCQkJewoJCQkJJGxpbWl0VG90YWwgPSAkZGItPmxpbWl0VG90YWxUcm9vcGVyczsKCQkJCSR0b3RhbFRyb29wZXJFdmVudCA9IHRydWU7CgkJCX0KCQl9Cgl9CgkKCS8vIEtpbGwgaGFjawoJaWYoJGkgPT0gMCkKCXsKCQlkaWUoIkNhbiBub3QgZG8gdGhpcy4iKTsKCX0KCgkvLyBTZXQgc3RhdHVzIGZyb20gcG9zdAoJJHN0YXR1cyA9IGNsZWFuSW5wdXQoJF9QT1NUWydzdGF0dXMnXSk7CgoJLy8gU2V0IHRyb29wIGZ1bGwgLSBub3QgdXNlZCBhdCB0aGUgbW9tZW50LCBidXQgd2lsbCBrZWVwIGl0IGhlcmUgZm9yIG5vdwoJJHRyb29wRnVsbCA9IGZhbHNlOwoKCS8vIENoZWNrIGZvciB0b3RhbCBsaW1pdCBzZXQsIGlmIGl0IGlzLCBjaGVjayBpZiB0cm9vcCBpcyBmdWxsIGJhc2VkIG9uIHRvdGFsCglpZigkdG90YWxUcm9vcGVyRXZlbnQpCgl7CgkJLyogVE9UQUwgVFJPT1BFUlMgKi8KCgkJaWYoJGxpbWl0VG90YWwgLSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSwgImFsbCIpIDw9IDAgJiYgJHN0YXR1cyAhPSA0ICYmIGluRXZlbnQoY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKSwgY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkpWydpblRyb29wJ10gIT0gMSkKCQl7CgkJCS8vIFRyb29wIGlzIGZ1bGwsIHNldCB0byBzdGFuZCBieQoJCQkkc3RhdHVzID0gMTsKCgkJCS8vIFNldCB0cm9vcCBmdWxsCgkJCSR0cm9vcEZ1bGwgPSB0cnVlOwoJCX0KCX0KCWVsc2UKCXsKCQkvKiBDSEVDSyBJRiBTUVVBRFMgLyBDTFVCIEFSRSBGVUxMICovCgoJCS8vIDUwMQoJCWlmKChnZXRDb3N0dW1lQ2x1YihjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKSkgPT0gMCAmJiAoJGxpbWl0NTAxc3QgLSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSwgMCkpIDw9IDApICYmICRzdGF0dXMgIT0gNCAmJiBpbkV2ZW50KGNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyaWQnXSksIGNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGlkJ10pKVsnaW5Ucm9vcCddICE9IDEpCgkJewoJCQkvLyBUcm9vcCBpcyBmdWxsLCBzZXQgdG8gc3RhbmQgYnkKCQkJJHN0YXR1cyA9IDE7CgoJCQkvLyBTZXQgdHJvb3AgZnVsbAoJCQkkdHJvb3BGdWxsID0gdHJ1ZTsKCQl9CgoJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQl7CgkJCS8vIExvb3AgdGhyb3VnaCBjb3N0dW1lcwoJCQlmb3JlYWNoKCRjbHViX3ZhbHVlWydjb3N0dW1lcyddIGFzICRjb3N0dW1lKQoJCQl7CgkJCQkvLyBNYWtlIHN1cmUgbm90IGEgZHVhbCBjb3N0dW1lCgkJCQlpZigkY29zdHVtZSAhPSAkZHVhbENvc3R1bWUpCgkJCQl7CgkJCQkJLy8gQ2hlY2sgY2x1YgoJCQkJCWlmKChnZXRDb3N0dW1lQ2x1YihjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKSkgPT0gJGNvc3R1bWUgJiYgKCR7JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX0gLSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSwgJGNvc3R1bWUpKSA8PSAwKSAmJiAkc3RhdHVzICE9IDQgJiYgaW5FdmVudChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BlcmlkJ10pLCBjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSlbJ2luVHJvb3AnXSAhPSAxKQoJCQkJCXsKCQkJCQkJLy8gVHJvb3AgaXMgZnVsbCwgc2V0IHRvIHN0YW5kIGJ5CgkJCQkJCSRzdGF0dXMgPSAxOwoKCQkJCQkJLy8gU2V0IHRyb29wIGZ1bGwKCQkJCQkJJHRyb29wRnVsbCA9IHRydWU7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJfQoKCS8vIFVwZGF0ZSBTUUwKCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50X3NpZ25fdXAgU0VUIGNvc3R1bWUgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKS4iJywgY29zdHVtZV9iYWNrdXAgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZV9iYWNrdXAnXSkuIicsIHN0YXR1cyA9ICciLiRzdGF0dXMuIicgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGlkJ10pLiInIEFORCBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzaWduaWQnXSkuIiciKTsKCQoJLy8gVXBkYXRlIG5vdGlmaWNhdGlvbnMKCS8vIEdvaW5nCglpZigkc3RhdHVzID09IDApCgl7CgkJLy8gU2VuZCB0byBkYXRhYmFzZSB0byBzZW5kIG91dCBub3RpZmljdGlvbnMgbGF0ZXIKCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIG5vdGlmaWNhdGlvbl9jaGVjayAodHJvb3BpZCwgdHJvb3BlcmlkLCB0cm9vcGVyc3RhdHVzKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGlkJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BlcmlkJ10pLiInLCAnMScpIik7Cgl9CgkvLyBDYW5jZWwKCWVsc2UgaWYoJHN0YXR1cyA9PSA0KQoJewoJCS8vIFNlbmQgdG8gZGF0YWJhc2UgdG8gc2VuZCBvdXQgbm90aWZpY3Rpb25zIGxhdGVyCgkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBub3RpZmljYXRpb25fY2hlY2sgKHRyb29waWQsIHRyb29wZXJpZCwgdHJvb3BlcnN0YXR1cykgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJywgJzInKSIpOwoJfQoKCS8vIElmIGNhbmNlbAoJaWYoJHN0YXR1cyA9PSA0ICYmICFpc0V2ZW50RnVsbChjbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKSwgY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWUnXSkpKQoJewoJCS8vIENoZWNrIGlmIHNvbWVvbmUgaXMgb24gdGhlIHdhaXQgbGlzdCwgYW5kIHNldCB0byBnb2luZwoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50X3NpZ25fdXAgU0VUIHN0YXR1cyA9ICcwJyBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkuIicgQU5EIHN0YXR1cyA9ICcxJyBBTkQgIi5nZXRDb3N0dW1lQ2x1YihjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKSkuIiA9IChTRUxFQ1QgY2x1YiBGUk9NIGNvc3R1bWVzIFdIRVJFIGlkID0gZXZlbnRfc2lnbl91cC5jb3N0dW1lKSBPUkRFUiBCWSBzaWdudXB0aW1lIERFU0MgTElNSVQgMSIpOwoJfQoKCS8vIFVwZGF0ZSB0cm9vcGVycyByZW1haW5pbmcKCSRkYXRhID0gJwoJPHVsPgoJCTxsaT5UaGlzIGV2ZW50IGlzIGxpbWl0ZWQgdG8gJy4kbGltaXRUb3RhbC4nIHRyb29wZXJzLiAnOwoKCQkvLyBDaGVjayBmb3IgdG90YWwgbGltaXQgc2V0LCBpZiBpdCBpcywgYWRkIHJlbWFpbmluZyB0cm9vcGVycwoJCWlmKCR0b3RhbFRyb29wZXJFdmVudCkKCQl7CgkJCSRkYXRhIC49ICcKCQkJJyAuIHRyb29wZXJzUmVtYWluaW5nKCRsaW1pdFRvdGFsLCBldmVudENsdWJDb3VudCgkZGItPmlkLCAiYWxsIikpIC4gJzwvbGk+JzsKCQl9CgkJZWxzZQoJCXsKCQkJJGRhdGEgLj0gJwoJCQk8L2xpPgoKCQkJPGxpPlRoaXMgZXZlbnQgaXMgbGltaXRlZCB0byAnLiRsaW1pdDUwMXN0LicgNTAxc3QgdHJvb3BlcnMuICcudHJvb3BlcnNSZW1haW5pbmcoJGxpbWl0NTAxc3QsIGV2ZW50Q2x1YkNvdW50KGNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGlkJ10pLCAwKSkuJyA8L2xpPic7CgoKCQkJLy8gU2V0IHVwIGNsdWIgY291bnQKCQkJJGNsdWJDb3VudCA9IDE7CgoJCQkvLyBMb29wIHRocm91Z2ggY2x1YnMKCQkJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJCQl7CgkJCQkkZGF0YSAuPSAnCgkJCQk8bGk+VGhpcyBldmVudCBpcyBsaW1pdGVkIHRvICcuJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfS4nICcuICRjbHViX3ZhbHVlWyduYW1lJ10gLicgdHJvb3BlcnMuICcudHJvb3BlcnNSZW1haW5pbmcoJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfSwgZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSksICRjbHViQ291bnQpKS4nPC9saT4nOwoKCQkJCS8vIEluY3JlbWVudCBjbHViIGNvdW50CgkJCQkkY2x1YkNvdW50Kys7CgkJCX0KCQl9CgoJJGRhdGEgLj0gJwoJPC91bD4nOwoKCS8vIFNlbmQgSlNPTgoJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICd0cnVlJywgJ3N0YXR1cycgPT4gJHN0YXR1cywgJ3Ryb29wRnVsbCcgPT4gJHRyb29wRnVsbCwgJ2xpbWl0NTAxc3QnID0+ICRsaW1pdDUwMXN0LCAnbGltaXQ1MDFzdFRvdGFsJyA9PiAkbGltaXQ1MDFzdFRvdGFsLCAndHJvb3BlcnNSZW1haW5pbmcnID0+ICRkYXRhKTsKCgkvLyBMb29wIHRocm91Z2ggY2x1YnMKCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCXsKCQkkYXJyYXlbJGNsdWJfdmFsdWVbJ2RiTGltaXQnXV0gPSAkeyRjbHViX3ZhbHVlWydkYkxpbWl0J119OwoJCSRhcnJheVskY2x1Yl92YWx1ZVsnZGJMaW1pdCddIC4gIlRvdGFsIl0gPSAkeyRjbHViX3ZhbHVlWydkYkxpbWl0J10gLiAiVG90YWwifTsKCX0KCgllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqIENvbW1lbnRzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKLy8gRW50ZXIgY29tbWVudCBpbnRvIGRhdGFiYXNlCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAicG9zdGNvbW1lbnQiICYmIGlzc2V0KCRfUE9TVFsnc3VibWl0Q29tbWVudCddKSAmJiBsb2dnZWRJbigpKQp7CglpZihzdHJsZW4odHJpbSgkX1BPU1RbJ2NvbW1lbnQnXSkpID4gMCAmJiAoJF9QT1NUWydpbXBvcnRhbnQnXSA9PSAwIHx8ICRfUE9TVFsnaW1wb3J0YW50J10gPT0gMSkpCgl7CgkJLy8gUXVlcnkgLSBjaGVjayBpZiBhIGNvbW1lbnQgaGFzIGJlZW4gcmVjZW50bHkgcG9zdGVkIGJ5IHRoaXMgdHJvb3BlcgoJCSRjb21tZW50Q2hlY2sgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCBpZCBGUk9NIGNvbW1lbnRzIFdIRVJFIGNvbW1lbnQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29tbWVudCddKS4iJyBBTkQgcG9zdGVkID4gTk9XKCkgLSBJTlRFUlZBTCA1IE1JTlVURSIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoKCQkvLyBDaGVjayBjb21tZW50IGNoZWNrCgkJaWYoJGNvbW1lbnRDaGVjay0+bnVtX3Jvd3MgPT0gMCkKCQl7CgkJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIGNvbW1lbnRzICh0cm9vcGlkLCB0cm9vcGVyaWQsIGNvbW1lbnQsIGltcG9ydGFudCkgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29tbWVudCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2ltcG9ydGFudCddKS4iJykiKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCgkJCS8vIEdldCBsYXN0IElEIG9mIGNvbW1lbnQKCQkJJGxhc3RfaWQgPSAkY29ubi0+aW5zZXJ0X2lkOwoKCQkJLy8gR2V0IHRocmVhZCBJRAoJCQkkdGhyZWFkX2lkID0gZ2V0RXZlbnRUaHJlYWRJRChjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKSk7CgoJCQkvLyBDaGVjayBpZiB0aGVyZSBpcyBhIGZvcnVtIHRocmVhZAoJCQlpZigkdGhyZWFkX2lkID4gMCkKCQkJewoJCQkJLy8gUG9zdCB0byBmb3J1bQoJCQkJJHBvc3QgPSBjcmVhdGVQb3N0KCR0aHJlYWRfaWQsIGNsZWFuSW5wdXQoJF9QT1NUWydjb21tZW50J10pKTsKCgkJCQkvLyBVcGRhdGUgY29tbWVudAoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgY29tbWVudHMgU0VUIHBvc3RfaWQgPSAnIi4kcG9zdFsncG9zdCddWydwb3N0X2lkJ10uIicgV0hFUkUgaWQgPSAnIi4kbGFzdF9pZC4iJyIpOwoJCQl9CgkJfQoKCQkvLyBTZXQgdXAgcXVlcnkgc3RyaW5nCgkJJHRyb29wcyA9ICIiOwoJCQoJCS8vIE1ha2Ugc3VyZSB0aGlzIGlzIGEgbGlua2VkIGV2ZW50CgkJaWYoaXNzZXQoJGxpbmspKQoJCXsKCQkJLy8gUXVlcnkgZGF0YWJhc2UgZm9yIHNoaWZ0cyB0byBkaXNwbGF5IGFsbCBjb21tZW50cyBmb3IgbGlua2VkIGV2ZW50cwoJCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBldmVudHMgV0hFUkUgbGluayA9ICciLiRsaW5rLiInIjsKCQkJCgkJCS8vIFNldCB1cCBjb3VudCBzbyB3ZSBkb24ndCBzdGFydCB3aXRoIGFuIG9wZXJhdG9yCgkJCSRqID0gMDsKCQkJCgkJCS8vIFF1ZXJ5IGxvb3AKCQkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgkJCXsKCQkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQkJewoJCQkJCS8vIElmIG5vdCBmaXJzdCByZXN1bHQKCQkJCQlpZigkaiAhPSAwKQoJCQkJCXsKCQkJCQkJJHRyb29wcyAuPSAiT1IgIjsKCQkJCQl9CgkJCQkJCgkJCQkJLy8gQWRkIHRvIHF1ZXJ5CgkJCQkJJHRyb29wcyAuPSAidHJvb3BpZCA9ICciLiRkYi0+aWQuIicgIjsKCQkJCQkKCQkJCQkvLyBJbmNyZW1lbnQgagoJCQkJCSRqKys7CgkJCQl9CgkJCX0KCgkJCS8vIEFkZCBhIGxhc3QgT1IgYXQgZW5kIGlmIGxpbmtlZCBkYXRhCgkJCWlmKCRqID4gMCkKCQkJewoJCQkJJHRyb29wcyAuPSAiT1IgIjsKCQkJfQoJCX0KCQkKCQkvLyBDaGVjayB3aGljaCB0eXBlIG9mIGxpbmsKCQlpZighaXNzZXQoJGxpbmspIHx8IGlzc2V0KCRsaW5rKSAmJiAkbGluayA8PSAwKQoJCXsKCQkJJGxpbmsgPSBjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKTsKCQl9CgoJCS8vIExvYWQgY29tbWVudHMgZm9yIHJldHVybiBkYXRhCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gY29tbWVudHMgV0hFUkUgIi4kdHJvb3BzLiJ0cm9vcGlkID0gJyIuJGxpbmsuIicgT1JERVIgQlkgcG9zdGVkIERFU0MiOwoKCQkvLyBDb3VudCBjb21tZW50cwoJCSRpID0gMDsKCgkJLy8gUmV0dXJuIGRhdGEKCQkkZGF0YSA9ICIiOwoJCQoJCS8vIFNldCBuYW1lIGNvbW1lbnQgdmFyIC0gdXNlZCBmb3IgZS1tYWlscwoJCSRuYW1lID0gIiI7CgkJCgkJLy8gU2V0IGNvbW1lbnQgdmFyIC0gdXNlZCBmb3IgZS1tYWlscwoJCSRjb21tZW50ID0gIiI7CgoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCSRkYXRhIC49ICcKCQkJCTxkaXYgc3R5bGU9Im92ZXJmbG93LXg6IGF1dG87IiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+CgkJCQk8dGFibGUgYm9yZGVyPSIxIiBuYW1lPSJjb21tZW50XycuJGRiLT5pZC4nIiBpZD0iY29tbWVudF8nLiRkYi0+aWQuJyI+JzsKCQkJCQoJCQkJLy8gU2V0IHVwIGFkbWluIHZhcmlhYmxlCgkJCQkkYWRtaW4gPSAnJzsKCQkJCQoJCQkJLy8gU2V0IGNvbW1lbnQgdmFyaWFibGVzCgkJCQkkbmFtZSA9IGdldE5hbWUoJGRiLT50cm9vcGVyaWQpOwoJCQkJJGNvbW1lbnQgPSAkZGItPmNvbW1lbnQ7CgkJCQkKCQkJCS8vIElmIGlzIGFkbWluLCBzZXQgdXAgYWRtaW4gb3B0aW9ucwoJCQkJaWYoaXNBZG1pbigpKQoJCQkJewoJCQkJCSRhZG1pbiA9ICc8c3BhbiBzdHlsZT0ibWFyZ2luLXJpZ2h0OiAxNXB4OyI+PGEgaHJlZj0iIy8iIGlkPSJkZWxldGVDb21tZW50XycuJGRiLT5pZC4nIiBuYW1lPSInLiRkYi0+aWQuJyI+PGltZyBzcmM9ImltYWdlcy90cmFzaC5wbmciIGFsdD0iRGVsZXRlIENvbW1lbnQiIC8+PC9hPjwvc3Bhbj4nOwoJCQkJfQoJCQkJCgkJCQkvLyBJZiBpcyB0cm9vcGVyLCBzZXQgdXAgZWRpdCBvcHRpb24KCQkJCWlmKCRkYi0+dHJvb3BlcmlkID09ICRfU0VTU0lPTlsnaWQnXSkKCQkJCXsKCQkJCQkkYWRtaW4gLj0gJzxzcGFuIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDE1cHg7Ij48YSBocmVmPSIjLyIgaWQ9ImVkaXRDb21tZW50XycuJGRiLT5pZC4nIiBuYW1lPSInLiRkYi0+aWQuJyI+PGltZyBzcmM9ImltYWdlcy9lZGl0LnBuZyIgYWx0PSJFZGl0IENvbW1lbnQiIC8+PC9hPjwvc3Bhbj4nOwoJCQkJfQoKCQkJCS8vIENvbnZlcnQgZGF0ZS90aW1lCgkJCQkkbmV3ZGF0ZSA9IGZvcm1hdFRpbWUoJGRiLT5wb3N0ZWQsICJGIGosIFksIGc6aSBhIik7CgoJCQkJJGRhdGEgLj0gJwoJCQkJPHRyPgoJCQkJCTx0ZD48c3BhbiBzdHlsZT0iZmxvYXQ6IGxlZnQ7Ij4nLiRhZG1pbi4nPGEgaHJlZj0iIy8iIGlkPSJxdW90ZUNvbW1lbnRfJy4kZGItPmlkLiciIG5hbWU9IicuJGRiLT5pZC4nIiB0cm9vcGVybmFtZT0iJy5nZXROYW1lKCRkYi0+dHJvb3BlcmlkKS4nIiB0a2lkPSInLmdldFRLTnVtYmVyKCRkYi0+dHJvb3BlcmlkLCB0cnVlKS4nIiB0cm9vcGVyaWQ9IicuJGRiLT50cm9vcGVyaWQuJyI+PGltZyBzcmM9ImltYWdlcy9xdW90ZS5wbmciIGFsdD0iUXVvdGUgQ29tbWVudCI+PC9hPjwvc3Bhbj4gPGEgaHJlZj0iaW5kZXgucGhwP3Byb2ZpbGU9Jy4kZGItPnRyb29wZXJpZC4nIj4nLiRuYW1lLicgLSAnLnJlYWRUS051bWJlcihnZXRUS051bWJlcigkZGItPnRyb29wZXJpZCksIGdldFRyb29wZXJTcXVhZCgkZGItPnRyb29wZXJpZCkpLic8L2E+PGJyIC8+Jy4kbmV3ZGF0ZS4nPC90ZD4KCQkJCTwvdHI+CgkJCQkKCQkJCTx0cj4KCQkJCQk8dGQgbmFtZT0iaW5zaWRlQ29tbWVudCI+Jy5ubDJicihpc0ltcG9ydGFudCgkZGItPmltcG9ydGFudCwgc2hvd0JCY29kZXMoJGNvbW1lbnQpKSkuJzwvdGQ+CgkJCQk8L3RyPgoKCQkJCTwvdGFibGU+CgkJCQk8L2Rpdj4KCgkJCQk8YnIgLz4nOwoKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCQkKCQkvLyBDaGVjayBjb21tZW50IGNoZWNrCgkJaWYoJGNvbW1lbnRDaGVjay0+bnVtX3Jvd3MgPT0gMCkKCQl7CgkJCS8vIFNlbmQgdG8gZGF0YWJhc2UgdG8gc2VuZCBvdXQgbm90aWZpY3Rpb25zIGxhdGVyCgkJCSRjb25uLT5xdWVyeSgiSU5TRVJUIElOVE8gbm90aWZpY2F0aW9uX2NoZWNrICh0cm9vcGlkLCBjb21tZW50aWQpIFZBTFVFUyAoJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIicsICciLiRsYXN0X2lkLiInKSIpOwoJCX0KCgkJaWYoJGkgPT0gMCkKCQl7CgkJCSRkYXRhIC49ICcKCQkJPGJyIC8+CgkJCTxiPk5vIGRpc2N1c3Npb24gdG8gZGlzcGxheS48L2I+JzsKCQl9CgoJCSRhcnJheSA9IGFycmF5KCdkYXRhJyA9PiAkZGF0YSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQp9CgoKLyoqKioqKioqKioqKioqKioqKioqKioqKiBDb3N0dW1lcyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8vIENvc3R1bWUgbWFuYWdlbWVudCAtIGFkZCwgZGVsZXRlLCBlZGl0CmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAibWFuYWdlY29zdHVtZXMiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CgkvLyBDb3N0dW1lIHN1Ym1pdHRlZCBmb3IgZGVsZXRpb24uLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0RGVsZXRlQ29zdHVtZSddKSkKCXsKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBkZWxldGVkIGNvc3R1bWUgSUQ6ICIgLiBjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZUlEJ10pIC4gIiIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMiwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gY29zdHVtZXMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZUlEJ10pLiInIikpOwoKCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIGNvc3R1bWVzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVJRCddKS4iJyIpOwoJCQoJCS8vIFVwZGF0ZSBvdGhlciBkYXRhYmFzZXMgdGhhdCBhcmUgYWZmZWN0ZWQKCQkkY29ubi0+cXVlcnkoIlVQREFURSBldmVudF9zaWduX3VwIFNFVCBjb3N0dW1lID0gJzAnIFdIRVJFIGNvc3R1bWUgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZUlEJ10pLiInIik7CgkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRfc2lnbl91cCBTRVQgY29zdHVtZV9iYWNrdXAgPSAnMCcgV0hFUkUgY29zdHVtZV9iYWNrdXAgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZUlEJ10pLiInIik7Cgl9CgkKCS8vIEFkZCBjb3N0dW1lLi4uCglpZihpc3NldCgkX1BPU1RbJ2FkZENvc3R1bWVCdXR0b24nXSkpCgl7CgkJJG1lc3NhZ2UgPSAiQ29zdHVtZSBhZGRlZCI7CgoJCS8vIENoZWNrIGlmIGhhcyB2YWx1ZQoJCWlmKGNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lTmFtZSddKSA9PSAiIikKCQl7CgkJCSRtZXNzYWdlID0gIkNvc3R1bWUgbXVzdCBoYXZlIGEgbmFtZS4iOwoJCX0KCQllbHNlCgkJewoJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBjb3N0dW1lcyAoY29zdHVtZSwgZXJhLCBjbHViKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lTmFtZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVFcmEnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lQ2x1YiddKS4iJykiKTsKCQkJJGxhc3RfaWQgPSAkY29ubi0+aW5zZXJ0X2lkOwoJCQkKCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGFkZGVkIGNvc3R1bWU6ICIgLiBjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZU5hbWUnXSksIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMSwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gY29zdHVtZXMgV0hFUkUgaWQgPSAnIi4kbGFzdF9pZC4iJyIpKTsKCQl9CgkJCgkJJHJldHVybk1lc3NhZ2UgPSAnCgkJPGgzPkVkaXQgQ29zdHVtZTwvaDM+JzsKCgkJLy8gR2V0IGRhdGEKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBjb3N0dW1lcyBPUkRFUiBCWSBjb3N0dW1lIjsKCgkJJGkgPSAwOwoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIEZvcm1hdHRpbmcKCQkJCWlmKCRpID09IDApCgkJCQl7CgkJCQkJJHJldHVybk1lc3NhZ2UgLj0gJwoJCQkJCTxmb3JtIGFjdGlvbj0icHJvY2Vzcy5waHA/ZG89bWFuYWdlY29zdHVtZXMiIG1ldGhvZD0iUE9TVCIgbmFtZT0iY29zdHVtZUVkaXRGb3JtIiBpZD0iY29zdHVtZUVkaXRGb3JtIj4KCgkJCQkJPHNlbGVjdCBuYW1lPSJjb3N0dW1lSURFZGl0IiBpZD0iY29zdHVtZUlERWRpdCI+CgoJCQkJCQk8b3B0aW9uIHZhbHVlPSIwIiBTRUxFQ1RFRD5QbGVhc2Ugc2VsZWN0IGEgY29zdHVtZS4uLjwvb3B0aW9uPic7CgkJCQl9CgoJCQkJJHJldHVybk1lc3NhZ2UgLj0gJwoJCQkJPG9wdGlvbiB2YWx1ZT0iJy4kZGItPmlkLiciIGNvc3R1bWVOYW1lPSInLiRkYi0+Y29zdHVtZS4nIiBjb3N0dW1lSUQ9IicuJGRiLT5pZC4nIiBjb3N0dW1lRXJhPSInLiRkYi0+ZXJhLiciIGNvc3R1bWVDbHViPSInLiRkYi0+Y2x1Yi4nIj4nLiRkYi0+Y29zdHVtZS4nPC9vcHRpb24+JzsKCgkJCQkvLyBJbmNyZW1lbnQKCQkJCSRpKys7CgkJCX0KCQl9CgoJCWlmKCRpID09IDApCgkJewoJCQkkcmV0dXJuTWVzc2FnZSAuPSAnTm8gY29zdHVtZXMgdG8gZGlzcGxheS4nOwoJCX0KCQllbHNlCgkJewoJCQkkcmV0dXJuTWVzc2FnZSAuPSAnCgkJCTwvc2VsZWN0PgoKCQkJPGRpdiBpZD0iZWRpdENvc3R1bWVMaXN0IiBuYW1lPSJlZGl0Q29zdHVtZUxpc3QiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CgoJCQk8Yj5Db3N0dW1lIE5hbWU6PC9iPjwvYnIgLz4KCQkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImNvc3R1bWVOYW1lRWRpdCIgaWQ9ImNvc3R1bWVOYW1lRWRpdCIgLz4KCQkJCgkJCTxiPkNvc3R1bWUgRXJhOjwvYj48L2JyIC8+CgkJCTxzZWxlY3QgbmFtZT0iY29zdHVtZUVyYUVkaXQiIGlkPSJjb3N0dW1lRXJhRWRpdCI+CgkJCQk8b3B0aW9uIHZhbHVlPSIwIj5QcmVxdWVsPC9vcHRpb24+CgkJCQk8b3B0aW9uIHZhbHVlPSIxIiBTRUxFQ1RFRD5PcmlnaW5hbDwvb3B0aW9uPgoJCQkJPG9wdGlvbiB2YWx1ZT0iMiI+U2VxdWVsPC9vcHRpb24+CgkJCQk8b3B0aW9uIHZhbHVlPSIzIj5FeHBhbmRlZDwvb3B0aW9uPgoJCQkJPG9wdGlvbiB2YWx1ZT0iNCI+QWxsPC9vcHRpb24+CgkJCTwvc2VsZWN0PgoJCQkKCQkJPGI+Q29zdHVtZSBDbHViOjwvYj48L2JyIC8+CgkJCTxzZWxlY3QgbmFtZT0iY29zdHVtZUNsdWJFZGl0IiBpZD0iY29zdHVtZUNsdWJFZGl0Ij4KCQkJCTxvcHRpb24gdmFsdWU9IjAiIFNFTEVDVEVEPjUwMXN0IExlZ2lvbjwvb3B0aW9uPgoJCQkJPG9wdGlvbiB2YWx1ZT0iMSI+UmViZWwgTGVnaW9uPC9vcHRpb24+CgkJCQk8b3B0aW9uIHZhbHVlPSIyIj5NYW5kbyBNZXJjczwvb3B0aW9uPgoJCQkJPG9wdGlvbiB2YWx1ZT0iMyI+RHJvaWQgQnVpbGRlcnM8L29wdGlvbj4KCQkJCTxvcHRpb24gdmFsdWU9IjQiPk90aGVyPC9vcHRpb24+CgkJCQk8b3B0aW9uIHZhbHVlPSI1Ij5EdWFsICg1MDFzdCArIFJlYmVsKTwvb3B0aW9uPgoJCQk8L3NlbGVjdD4KCgkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdEVkaXRDb3N0dW1lIiBpZD0ic3VibWl0RWRpdENvc3R1bWUiIHZhbHVlPSJFZGl0IENvc3R1bWUiIC8+CgoJCQk8L2Rpdj4KCQkJPC9mb3JtPic7CgkJfQoJCQoJCSRyZXR1cm5NZXNzYWdlIC49ICcKCQk8YnIgLz4KCQk8aHIgLz4KCQk8YnIgLz4KCQkKCQk8aDM+RGVsZXRlIENvc3R1bWU8L2gzPic7CgoJCS8vIEdldCBkYXRhCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gY29zdHVtZXMgT1JERVIgQlkgY29zdHVtZSI7CgoJCSRpID0gMDsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkvLyBGb3JtYXR0aW5nCgkJCQlpZigkaSA9PSAwKQoJCQkJewoJCQkJCSRyZXR1cm5NZXNzYWdlIC49ICcKCQkJCQk8Zm9ybSBhY3Rpb249InByb2Nlc3MucGhwP2RvPW1hbmFnZWNvc3R1bWVzIiBtZXRob2Q9IlBPU1QiIG5hbWU9ImNvc3R1bWVEZWxldGVGb3JtIiBpZD0iY29zdHVtZURlbGV0ZUZvcm0iPgoKCQkJCQk8c2VsZWN0IG5hbWU9ImNvc3R1bWVJRCIgaWQ9ImNvc3R1bWVJRCI+JzsKCQkJCX0KCgkJCQkkcmV0dXJuTWVzc2FnZSAuPSAnPG9wdGlvbiB2YWx1ZT0iJy4kZGItPmlkLiciPicuJGRiLT5jb3N0dW1lLic8L29wdGlvbj4nOwoKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCgkJaWYoJGkgPT0gMCkKCQl7CgkJCSRyZXR1cm5NZXNzYWdlIC49ICdObyBjb3N0dW1lcyB0byBkaXNwbGF5Lic7CgkJfQoJCWVsc2UKCQl7CgkJCSRyZXR1cm5NZXNzYWdlIC49ICcKCQkJPC9zZWxlY3Q+CgoJCQk8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXREZWxldGVDb3N0dW1lIiBpZD0ic3VibWl0RGVsZXRlQ29zdHVtZSIgdmFsdWU9IkRlbGV0ZSBDb3N0dW1lIiAvPgoJCQk8L2Zvcm0+JzsKCQl9CgkJCgkJJGFycmF5ID0gYXJyYXkoYXJyYXkoJ21lc3NhZ2UnID0+ICRtZXNzYWdlLCAnaWQnID0+ICRsYXN0X2lkLCAncmVzdWx0JyA9PiAkcmV0dXJuTWVzc2FnZSkpOwoJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCX0KCQoJLy8gRWRpdCBjb3N0dW1lCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEVkaXRDb3N0dW1lJ10pKQoJewoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGNvc3R1bWVzIFNFVCBjb3N0dW1lID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVOYW1lRWRpdCddKS4iJywgZXJhID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVFcmFFZGl0J10pLiInLCBjbHViID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVDbHViRWRpdCddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lSURFZGl0J10pLiInIik7CgoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGVkaXRlZCBjb3N0dW1lIElEIFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVJREVkaXQnXSkgLiAiXSB0byAiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWVOYW1lRWRpdCddKSwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAzLCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSBjb3N0dW1lcyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lSURFZGl0J10pLiInIikpOwoJfQp9CgovKioqKioqKioqKioqKioqKioqKioqKioqIEVWRU5UIE5PVElGSUNBVElPTlMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoKLy8gRXZlbnQgbm90aWZpY2F0aW9ucyBidXR0b24gcHJlc3NlZAppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImV2ZW50c3Vic2NyaWJlIiAmJiBpc3NldCgkX1BPU1RbJ2V2ZW50c3Vic2NyaWJlJ10pICYmIGxvZ2dlZEluKCkpCnsKCS8vIFNldCB1cCB2YXJpYWJsZQoJJG1lc3NhZ2UgPSAiIjsKCgkvLyBRdWVyeSB0byBzZWUgaWYgdHJvb3BlciBpcyBzdWJzY3JpYmVkIGFscmVhZHkKCSRpc1N1YnNjcmliZWQgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCAqIEZST00gZXZlbnRfbm90aWZpY2F0aW9ucyBXSEVSRSB0cm9vcGVyaWQgPSAnIi4kX1NFU1NJT05bJ2lkJ10uIicgQU5EIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuIiciKTsKCgkvLyBDaGVjayBpZiBzdWJzY3JpYmVkCglpZigkaXNTdWJzY3JpYmVkLT5udW1fcm93cyA+IDApCgl7CgkJLy8gQWxyZWFkeSBzdWJzY3JpYmVkLCBkZWxldGUgaW5mb3JtYXRpb24KCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIGV2ZW50X25vdGlmaWNhdGlvbnMgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLiInIEFORCB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pLiInIik7CgoJCS8vIE1lc3NhZ2UKCQkkbWVzc2FnZSA9ICJZb3UgYXJlIG5vdyB1bnN1YnNjcmliZWQgZnJvbSB0aGlzIGV2ZW50LiI7Cgl9CgllbHNlCgl7CgkJLy8gU3Vic2NyaWJlCgkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBldmVudF9ub3RpZmljYXRpb25zICh0cm9vcGVyaWQsIHRyb29waWQpIFZBTFVFUyAoJyIuY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuIicpIik7CgoJCS8vIE1lc3NhZ2UKCQkkbWVzc2FnZSA9ICJZb3UgYXJlIG5vdyBzdWJzY3JpYmVkIHRvIHRoaXMgZXZlbnQgYW5kIHdpbGwgcmVjZWl2ZSBlLW1haWwgbm90aWZpY2F0aW9ucy4iOwoJfQoKCS8vIFNlbmQgSlNPTgoJJGFycmF5ID0gYXJyYXkoJ21lc3NhZ2UnID0+ICRtZXNzYWdlKTsKCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKiBUSVRMRVMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovLyBUaXRsZXMgdG8gdHJvb3BlcnMKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJhc3NpZ250aXRsZXMiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CgkvLyBHZXQgdGl0bGUgZGV0YWlscwoJaWYoaXNzZXQoJF9QT1NUWydnZXR0aXRsZSddKSkKCXsKCQkvLyBTZXQgdXAgcmV0dXJuIHZhcmlhYmxlCgkJJGhhc1RpdGxlID0gMDsKCgkJLy8gR2V0IGRhdGEKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSB0aXRsZV90cm9vcGVycyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BlcmlkJ10pLiInIEFORCB0aXRsZWlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlaWQnXSkuIiciOwoJCQoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIFNldAoJCQkJJGhhc1RpdGxlID0gMTsKCQkJfQoJCX0KCQkKCQkvLyBPdXRwdXQKCQkkYXJyYXkgPSBhcnJheSgnaGFzVGl0bGUnID0+ICRoYXNUaXRsZSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQoJCgkvLyBUaXRsZSBzdWJtaXR0ZWQgZm9yIGRlbGV0aW9uLi4uCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdERlbGV0ZVRpdGxlJ10pKQoJewoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGRlbGV0ZWQgdGl0bGUgSUQ6ICIgLiBjbGVhbklucHV0KCRfUE9TVFsndGl0bGVJRCddKSwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAyMSwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gdGl0bGVzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSUQnXSkuIiciKSk7CgoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gdGl0bGVzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSUQnXSkuIiciKTsKCgkJLy8gRGVsZXRlIGZyb20gdGhlIG90aGVyIGRhdGFiYXNlCgkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSB0aXRsZV90cm9vcGVycyBXSEVSRSB0aXRsZWlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSUQnXSkuIiciKTsKCX0KCgkvLyBBZGQgdGl0bGUuLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0QWRkVGl0bGUnXSkpCgl7CgkJJG1lc3NhZ2UgPSAiVGl0bGUgYWRkZWQhIjsKCgkJLy8gU2V0IHVwIGluIGFkdmFuY2UgdG8gcHJldmVudCBlcnJvcgoJCSRsYXN0X2lkID0gMDsKCgkJLy8gQ2hlY2sgaWYgaGFzIHZhbHVlCgkJaWYoY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlTmFtZSddKSA9PSAiIikKCQl7CgkJCSRtZXNzYWdlID0gIlRpdGxlIG11c3QgaGF2ZSBhIG5hbWUuIjsKCQl9CgkJZWxzZQoJCXsKCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCSRjb25uLT5xdWVyeSgiSU5TRVJUIElOVE8gdGl0bGVzICh0aXRsZSwgaWNvbiwgZm9ydW1faWQpIFZBTFVFUyAoJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlTmFtZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSW1hZ2UnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUZvcnVtSUQnXSkuIicpIik7CgoJCQkkbGFzdF9pZCA9ICRjb25uLT5pbnNlcnRfaWQ7CgkJCQoJCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJCXNlbmROb3RpZmljYXRpb24oZ2V0TmFtZSgkX1NFU1NJT05bJ2lkJ10pIC4gIiBoYXMgYWRkZWQgdGl0bGU6ICIgLiBjbGVhbklucHV0KCRfUE9TVFsndGl0bGVOYW1lJ10pLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDIwLCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSB0aXRsZXMgV0hFUkUgaWQgPSAnIi4kbGFzdF9pZC4iJyIpKTsKCQl9CgkJCgkJJHJldHVybk1lc3NhZ2UgPSAnPGJyIC8+PGhyIC8+PGJyIC8+PGgzPkVkaXQgVGl0bGU8L2gzPic7CgoJCS8vIEdldCBkYXRhCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gdGl0bGVzIE9SREVSIEJZIHRpdGxlIjsKCgkJJGkgPSAwOwoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIEZvcm1hdHRpbmcKCQkJCWlmKCRpID09IDApCgkJCQl7CgkJCQkJJHJldHVybk1lc3NhZ2UgLj0gJwoJCQkJCTxmb3JtIGFjdGlvbj0icHJvY2Vzcy5waHA/ZG89YXNzaWdudGl0bGVzIiBtZXRob2Q9IlBPU1QiIG5hbWU9InRpdGxlRWRpdCIgaWQ9InRpdGxlRWRpdCI+CgoJCQkJCTxzZWxlY3QgbmFtZT0idGl0bGVJREVkaXQiIGlkPSJ0aXRsZUlERWRpdCI+CgoJCQkJCQk8b3B0aW9uIHZhbHVlPSIwIiBTRUxFQ1RFRD5QbGVhc2Ugc2VsZWN0IGEgdGl0bGUuLi48L29wdGlvbj4nOwoJCQkJfQoKCQkJCSRyZXR1cm5NZXNzYWdlIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyIgdGl0bGU9IicuJGRiLT50aXRsZS4nIiB0aXRsZUlEPSInLiRkYi0+aWQuJyIgdGl0bGVJbWFnZT0iJy4kZGItPmljb24uJyI+Jy4kZGItPnRpdGxlLic8L29wdGlvbj4nOwoKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCgkJaWYoJGkgPT0gMCkKCQl7CgkJCSRyZXR1cm5NZXNzYWdlIC49ICdObyB0aXRsZXMgdG8gZGlzcGxheS4nOwoJCX0KCQllbHNlCgkJewoJCQkkcmV0dXJuTWVzc2FnZSAuPSAnCgkJCTwvc2VsZWN0PgoKCQkJPGRpdiBpZD0iZWRpdFRpdGxlTGlzdCIgbmFtZT0iZWRpdFRpdGxlTGlzdCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KCgkJCTxwPgoJCQkJPGI+VGl0bGU6PC9iPgoJCQkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImVkaXRUaXRsZSIgaWQ9ImVkaXRUaXRsZSIgLz4KCQkJPC9wPgoKCQkJPHA+CgkJCQk8Yj5UaXRsZSBJbWFnZTo8L2I+CgkJCQk8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZWRpdFRpdGxlSW1hZ2UiIGlkPSJlZGl0VGl0bGVJbWFnZSIgLz4KCQkJPC9wPgoKCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0RWRpdFRpdGxlIiBpZD0ic3VibWl0RWRpdFRpdGxlIiB2YWx1ZT0iRWRpdCBUaXRsZSIgLz4KCgkJCTwvZGl2PgoJCQk8L2Zvcm0+JzsKCQl9CgoJCSRyZXR1cm5NZXNzYWdlIC49ICc8YnIgLz48aHIgLz48YnIgLz48aDM+RGVsZXRlIFRpdGxlPC9oMz4nOwoKCQkvLyBHZXQgZGF0YQoJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIHRpdGxlcyBPUkRFUiBCWSB0aXRsZSI7CgoJCSRpID0gMDsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkvLyBGb3JtYXR0aW5nCgkJCQlpZigkaSA9PSAwKQoJCQkJewoJCQkJCSRyZXR1cm5NZXNzYWdlIC49ICcKCQkJCQk8Zm9ybSBhY3Rpb249InByb2Nlc3MucGhwP2RvPWFzc2lnbnRpdGxlcyIgbWV0aG9kPSJQT1NUIiBuYW1lPSJ0aXRsZVVzZXJEZWxldGUiIGlkPSJ0aXRsZVVzZXJEZWxldGUiPgoKCQkJCQk8c2VsZWN0IG5hbWU9InRpdGxlSUQiIGlkPSJ0aXRsZUlEIj4nOwoJCQkJfQoKCQkJCSRyZXR1cm5NZXNzYWdlIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyI+Jy4kZGItPnRpdGxlLic8L29wdGlvbj4nOwoKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCgkJaWYoJGkgPT0gMCkKCQl7CgkJCSRyZXR1cm5NZXNzYWdlIC49ICdObyB0aXRsZXMgdG8gZGlzcGxheS4nOwoJCX0KCQllbHNlCgkJewoJCQkkcmV0dXJuTWVzc2FnZSAuPSAnCgkJCTwvc2VsZWN0PgoKCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0RGVsZXRlVGl0bGUiIGlkPSJzdWJtaXREZWxldGVUaXRsZSIgdmFsdWU9IkRlbGV0ZSBUaXRsZSIgLz4KCQkJPC9mb3JtPic7CgkJfQoJCQoJCSRyZXR1cm5NZXNzYWdlMiA9ICcnOwoJCQoJCS8vIEdldCBkYXRhCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gdHJvb3BlcnMgV0hFUkUgYXBwcm92ZWQgPSAxIE9SREVSIEJZIG5hbWUiOwoKCQkvLyBBbW91bnQgb2YgdXNlcnMKCQkkaSA9IDA7CgkJJGdldElkID0gMDsKCgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJLy8gRm9ybWF0dGluZwoJCQkJaWYoJGkgPT0gMCkKCQkJCXsKCQkJCQkkZ2V0SWQgPSAkZGItPmlkOwoKCQkJCQkkcmV0dXJuTWVzc2FnZTIgLj0gJwoJCQkJCTxmb3JtIGFjdGlvbj0icHJvY2Vzcy5waHA/ZG89YXNzaWdudGl0bGVzIiBtZXRob2Q9IlBPU1QiIG5hbWU9InRpdGxlVXNlciIgaWQ9InRpdGxlVXNlciI+CgoJCQkJCTxzZWxlY3QgbmFtZT0idXNlcklEVGl0bGUiIGlkPSJ1c2VySURUaXRsZSI+JzsKCQkJCX0KCgkJCQkJJHJldHVybk1lc3NhZ2UyIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyI+Jy4kZGItPm5hbWUuJzwvb3B0aW9uPic7CgoJCQkJLy8gSW5jcmVtZW50CgkJCQkkaSsrOwoJCQl9CgkJfQoKCQkvLyBJZiBubyBldmVudHMKCQlpZigkaSA9PSAwKQoJCXsKCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnVGhlcmUgYXJlIG5vIHRyb29wZXJzIHRvIGRpc3BsYXkuJzsKCQl9CgkJZWxzZQoJCXsKCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnCgkJCTwvc2VsZWN0PgoKCQkJPGJyIC8+PGJyIC8+JzsKCgkJCS8vIEdldCBkYXRhCgkJCSRxdWVyeTIgPSAiU0VMRUNUICogRlJPTSB0aXRsZXMgT1JERVIgQlkgdGl0bGUiOwoKCQkJLy8gQW1vdW50IG9mIHRpdGxlcwoJCQkkaiA9IDA7CgoJCQlpZiAoJHJlc3VsdDIgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeTIpKQoJCQl7CgkJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0MikpCgkJCQl7CgkJCQkJLy8gRm9ybWF0dGluZwoJCQkJCWlmKCRqID09IDApCgkJCQkJewoJCQkJCQkkZ2V0SWQyID0gJGRiLT5pZDsKCQkJCQkJJHJldHVybk1lc3NhZ2UyIC49ICc8c2VsZWN0IGlkPSJ0aXRsZUlEQXNzaWduIiBuYW1lPSJ0aXRsZUlEQXNzaWduIj4nOwoJCQkJCX0KCgkJCQkJJHJldHVybk1lc3NhZ2UyIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyI+Jy4kZGItPnRpdGxlLic8L29wdGlvbj4nOwoKCQkJCQkvLyBJbmNyZW1lbnQgJGoKCQkJCQkkaisrOwoJCQkJfQoJCQl9CgoJCQkvLyBJZiB0aXRsZSBleGlzdAoJCQlpZigkaiA+IDApCgkJCXsKCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnCgkJCQk8L3NlbGVjdD4KCgkJCQk8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJ0aXRsZSIgaWQ9InRpdGxlIiB2YWx1ZT0iQXNzaWduIiAnLmhhc1RpdGxlKCRnZXRJZCwgJGdldElkMiwgdHJ1ZSkuJyAvPgoJCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0idGl0bGVSZW1vdmUiIGlkPSJ0aXRsZVJlbW92ZSIgdmFsdWU9IlJlbW92ZSIgJy5oYXNUaXRsZSgkZ2V0SWQsICRnZXRJZDIsIHRydWUsIHRydWUpLicgLz4nOwoJCQl9CgkJCWVsc2UKCQkJewoJCQkJJHJldHVybk1lc3NhZ2UyIC49ICdObyB0aXRsZXMgdG8gZGlzcGxheS4nOwoJCQl9CgkJfQoKCQkkcmV0dXJuTWVzc2FnZTIgLj0gJzwvZm9ybT4nOwoKCQkkYXJyYXkgPSBhcnJheShhcnJheSgnbWVzc2FnZScgPT4gJG1lc3NhZ2UsICdpZCcgPT4gJGxhc3RfaWQsICdyZXN1bHQnID0+ICRyZXR1cm5NZXNzYWdlLCAncmVzdWx0MicgPT4gJHJldHVybk1lc3NhZ2UyKSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQoKCS8vIEFkZCdzIHRpdGxlIHRvIHRyb29wZXIKCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0VGl0bGUnXSkpCgl7CgkJLy8gQ2hlY2sgaG93IG1hbnkgcmV3YXJkcwoJCSRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICJTRUxFQ1QgY291bnQoKikgRlJPTSB0aXRsZV90cm9vcGVycyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEVGl0bGUnXSkuIicgQU5EIHRpdGxlaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndGl0bGVJREFzc2lnbiddKS4iJyIpOwoJCSRudW1fcm93cyA9IG15c3FsaV9mZXRjaF9yb3coJHJlc3VsdClbMF07CgoJCSRtZXNzYWdlID0gIlRoZSB0aXRsZSB3YXMgZ2l2ZW4gc3VjY2Vzc2Z1bGx5ISI7CgoJCS8vIElmIG5vIGR1cGxpY2F0ZXMKCQlpZigkbnVtX3Jvd3MgPT0gMCkKCQl7CgkJCS8vIENoZWNrIHRpdGxlIGV4aXN0cyBxdWVyeQoJCQkkY2hlY2tFeGlzdCA9ICRjb25uLT5xdWVyeSgiU0VMRUNUICogRlJPTSB0aXRsZXMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndGl0bGVJREFzc2lnbiddKS4iJyIpOwoKCQkJLy8gQ2hlY2sgaWYgdGl0bGUgZXhpc3RzCgkJCWlmKCRjaGVja0V4aXN0LT5udW1fcm93cyA+IDApCgkJCXsKCQkJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyB0aXRsZV90cm9vcGVycyAodHJvb3BlcmlkLCB0aXRsZWlkKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySURUaXRsZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSURBc3NpZ24nXSkuIicpIik7CgkJCQoJCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBnaXZlbiB0aXRsZSBJRCBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUlEQXNzaWduJ10pIC4gIl0gdG8gIiAuIGdldE5hbWUoY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRFRpdGxlJ10pKSwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAyMiwganNvbl9lbmNvZGUoYXJyYXkoInRyb29wZXJpZCIgPT4gY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRFRpdGxlJ10pLCAidGl0bGVpZCIgPT4gY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSURBc3NpZ24nXSkpKSk7CgkJCX0KCQkJZWxzZQoJCQl7CgkJCQkkbWVzc2FnZSA9ICJUaGlzIHRpdGxlIGRvZXMgbm90IGV4aXN0ISI7CgkJCX0KCQl9CgkJZWxzZQoJCXsKCQkJJG1lc3NhZ2UgPSAiVHJvb3BlciBhbHJlYWR5IGhhcyB0aGlzIHRpdGxlISI7CgkJfQoKCQkkYXJyYXkgPSBhcnJheShhcnJheSgnbWVzc2FnZScgPT4gJG1lc3NhZ2UpKTsKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9CgkKCS8vIFJlbW92ZSdzIHRpdGxlIGZyb20gdHJvb3BlcgoJaWYoaXNzZXQoJF9QT1NUWydyZW1vdmVUaXRsZSddKSkKCXsKCQkvLyBDaGVjayBob3cgbWFueSByZXdhcmRzCgkJJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgIlNFTEVDVCBjb3VudCgqKSBGUk9NIHRpdGxlX3Ryb29wZXJzIFdIRVJFIHRyb29wZXJpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySURUaXRsZSddKS4iJyBBTkQgdGl0bGVpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUlEQXNzaWduJ10pLiInIik7CgkJJG51bV9yb3dzID0gbXlzcWxpX2ZldGNoX3JvdygkcmVzdWx0KVswXTsKCgkJJG1lc3NhZ2UgPSAiVGhlIHRpdGxlIHdhcyByZW1vdmVkIHN1Y2Nlc3NmdWxseSEiOwoKCQkvLyBJZiBubyBkdXBsaWNhdGVzCgkJaWYoJG51bV9yb3dzID4gMCkKCQl7CgkJCS8vIFJlbW92ZQoJCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIHRpdGxlX3Ryb29wZXJzIFdIRVJFIHRyb29wZXJpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySURUaXRsZSddKS4iJyBBTkQgdGl0bGVpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUlEQXNzaWduJ10pLiInIik7CgkJCQoJCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJCXNlbmROb3RpZmljYXRpb24oZ2V0TmFtZSgkX1NFU1NJT05bJ2lkJ10pIC4gIiBoYXMgcmVtb3ZlZCB0aXRsZSBJRCBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUlEQXNzaWduJ10pIC4gIl0gZnJvbSAiIC4gZ2V0TmFtZShjbGVhbklucHV0KCRfUE9TVFsndXNlcklEVGl0bGUnXSkpLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDI0LCBqc29uX2VuY29kZShhcnJheSgidHJvb3BlcmlkIiA9PiBjbGVhbklucHV0KCRfUE9TVFsndXNlcklEVGl0bGUnXSksICJ0aXRsZWlkIiA9PiBjbGVhbklucHV0KCRfUE9TVFsndGl0bGVJREFzc2lnbiddKSkpKTsKCQl9CgkJZWxzZQoJCXsKCQkJJG1lc3NhZ2UgPSAiVHJvb3BlciBkb2VzIG5vdCBoYXZlIHRoaXMgdGl0bGUhIjsKCQl9CgoJCSRhcnJheSA9IGFycmF5KGFycmF5KCdtZXNzYWdlJyA9PiAkbWVzc2FnZSkpOwoJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCX0KCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEVkaXRUaXRsZSddKSkKCXsKCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkkY29ubi0+cXVlcnkoIlVQREFURSB0aXRsZXMgU0VUIHRpdGxlID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2VkaXRUaXRsZVRpdGxlJ10pLiInLCBpY29uID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2VkaXRUaXRsZUltYWdlJ10pLiInLCBmb3J1bV9pZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlZGl0VGl0bGVGb3J1bUlEJ10pLiInIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RpdGxlSURFZGl0J10pLiInIik7CgoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGVkaXRlZCB0aXRsZSBJRCBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWyd0aXRsZUlERWRpdCddKSAuICJdIHRvICIgLiBjbGVhbklucHV0KCRfUE9TVFsnZWRpdFRpdGxlJ10pLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDIzLCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSB0aXRsZXMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndGl0bGVJREVkaXQnXSkuIiciKSk7Cgl9Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKiogQVdBUkRTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLy8gQXdhcmRzIHRvIHRyb29wZXJzCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAiYXNzaWduYXdhcmRzIiAmJiBsb2dnZWRJbigpICYmIGlzQWRtaW4oKSkKewoJLy8gR2V0IGF3YXJkIGRldGFpbHMKCWlmKGlzc2V0KCRfUE9TVFsnZ2V0YXdhcmQnXSkpCgl7CgkJLy8gU2V0IHVwIHJldHVybiB2YXJpYWJsZQoJCSRoYXNBd2FyZCA9IDA7CgoJCS8vIEdldCBkYXRhCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gYXdhcmRfdHJvb3BlcnMgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJyBBTkQgYXdhcmRpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZGlkJ10pLiInIjsKCQkKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkvLyBTZXQKCQkJCSRoYXNBd2FyZCA9IDE7CgkJCX0KCQl9CgkJCgkJLy8gT3V0cHV0CgkJJGFycmF5ID0gYXJyYXkoJ2hhc0F3YXJkJyA9PiAkaGFzQXdhcmQpOwoJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCX0KCQoJLy8gQXdhcmQgc3VibWl0dGVkIGZvciBkZWxldGlvbi4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXREZWxldGVBd2FyZCddKSkKCXsKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBkZWxldGVkIGF3YXJkIElEOiAiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSUQnXSksIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgNCwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gYXdhcmRzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSUQnXSkuIiciKSk7CgoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gYXdhcmRzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSUQnXSkuIiciKTsKCgkJLy8gRGVsZXRlIGZyb20gdGhlIG90aGVyIGRhdGFiYXNlCgkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSBhd2FyZF90cm9vcGVycyBXSEVSRSBhd2FyZGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSUQnXSkuIiciKTsKCX0KCgkvLyBBZGQgYXdhcmQuLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0QWRkQXdhcmQnXSkpCgl7CgkJJG1lc3NhZ2UgPSAiQXdhcmQgYWRkZWQiOwoKCQkvLyBTZXQgdXAgaW4gYWR2YW5jZSB0byBwcmV2ZW50IGVycm9yCgkJJGxhc3RfaWQgPSAwOwoKCQkvLyBDaGVjayBpZiBoYXMgdmFsdWUKCQlpZihjbGVhbklucHV0KCRfUE9TVFsnYXdhcmROYW1lJ10pID09ICIiKQoJCXsKCQkJJG1lc3NhZ2UgPSAiQXdhcmQgbXVzdCBoYXZlIGEgbmFtZS4iOwoJCX0KCQllbHNlCgkJewoJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBhd2FyZHMgKHRpdGxlLCBpY29uKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZE5hbWUnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZEltYWdlJ10pLiInKSIpOwoJCQkkbGFzdF9pZCA9ICRjb25uLT5pbnNlcnRfaWQ7CgkJCQoJCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJCXNlbmROb3RpZmljYXRpb24oZ2V0TmFtZSgkX1NFU1NJT05bJ2lkJ10pIC4gIiBoYXMgYWRkZWQgYXdhcmQ6ICIgLiBjbGVhbklucHV0KCRfUE9TVFsnYXdhcmROYW1lJ10pLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDUsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIGF3YXJkcyBXSEVSRSBpZCA9ICciLiRsYXN0X2lkLiInIikpOwoJCX0KCQkKCQkkcmV0dXJuTWVzc2FnZSA9ICc8YnIgLz48aHIgLz48YnIgLz48aDM+RWRpdCBBd2FyZDwvaDM+JzsKCgkJLy8gR2V0IGRhdGEKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBhd2FyZHMgT1JERVIgQlkgdGl0bGUiOwoKCQkkaSA9IDA7CgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJLy8gRm9ybWF0dGluZwoJCQkJaWYoJGkgPT0gMCkKCQkJCXsKCQkJCQkkcmV0dXJuTWVzc2FnZSAuPSAnCgkJCQkJPGZvcm0gYWN0aW9uPSJwcm9jZXNzLnBocD9kbz1hc3NpZ25hd2FyZHMiIG1ldGhvZD0iUE9TVCIgbmFtZT0iYXdhcmRFZGl0IiBpZD0iYXdhcmRFZGl0Ij4KCgkJCQkJPHNlbGVjdCBuYW1lPSJhd2FyZElERWRpdCIgaWQ9ImF3YXJkSURFZGl0Ij4KCgkJCQkJCTxvcHRpb24gdmFsdWU9IjAiIFNFTEVDVEVEPlBsZWFzZSBzZWxlY3QgYW4gYXdhcmQuLi48L29wdGlvbj4nOwoJCQkJfQoKCQkJCSRyZXR1cm5NZXNzYWdlIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyIgYXdhcmRUaXRsZT0iJy4kZGItPnRpdGxlLiciIGF3YXJkSUQ9IicuJGRiLT5pZC4nIiBhd2FyZEltYWdlPSInLiRkYi0+aWNvbi4nIj4nLiRkYi0+dGl0bGUuJzwvb3B0aW9uPic7CgoJCQkJLy8gSW5jcmVtZW50CgkJCQkkaSsrOwoJCQl9CgkJfQoKCQlpZigkaSA9PSAwKQoJCXsKCQkJJHJldHVybk1lc3NhZ2UgLj0gJ05vIGF3YXJkcyB0byBkaXNwbGF5Lic7CgkJfQoJCWVsc2UKCQl7CgkJCSRyZXR1cm5NZXNzYWdlIC49ICcKCQkJPC9zZWxlY3Q+CgoJCQk8ZGl2IGlkPSJlZGl0QXdhcmRMaXN0IiBuYW1lPSJlZGl0QXdhcmRMaXN0IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgoKCQkJPGI+QXdhcmQgVGl0bGU6PC9iPjxiciAvPgoJCQk8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZWRpdEF3YXJkVGl0bGUiIGlkPSJlZGl0QXdhcmRUaXRsZSIgLz4KCgkJCTxiciAvPjxiPkF3YXJkIEltYWdlOjwvYj48YnIgLz4KCQkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImVkaXRBd2FyZEltYWdlIiBpZD0iZWRpdEF3YXJkSW1hZ2UiIC8+CgoJCQk8YnIgLz4KCgkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdEVkaXRBd2FyZCIgaWQ9InN1Ym1pdEVkaXRBd2FyZCIgdmFsdWU9IkVkaXQgQXdhcmQiIC8+CgoJCQk8L2Rpdj4KCQkJPC9mb3JtPic7CgkJfQoKCQkkcmV0dXJuTWVzc2FnZSAuPSAnPGJyIC8+PGhyIC8+PGJyIC8+PGgzPkRlbGV0ZSBBd2FyZDwvaDM+JzsKCgkJLy8gR2V0IGRhdGEKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBhd2FyZHMgT1JERVIgQlkgdGl0bGUiOwoKCQkkaSA9IDA7CgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJLy8gRm9ybWF0dGluZwoJCQkJaWYoJGkgPT0gMCkKCQkJCXsKCQkJCQkkcmV0dXJuTWVzc2FnZSAuPSAnCgkJCQkJPGZvcm0gYWN0aW9uPSJwcm9jZXNzLnBocD9kbz1hc3NpZ25hd2FyZHMiIG1ldGhvZD0iUE9TVCIgbmFtZT0iYXdhcmRVc2VyRGVsZXRlIiBpZD0iYXdhcmRVc2VyRGVsZXRlIj4KCgkJCQkJPHNlbGVjdCBuYW1lPSJhd2FyZElEIiBpZD0iYXdhcmRJRCI+JzsKCQkJCX0KCgkJCQkkcmV0dXJuTWVzc2FnZSAuPSAnPG9wdGlvbiB2YWx1ZT0iJy4kZGItPmlkLiciPicuJGRiLT50aXRsZS4nPC9vcHRpb24+JzsKCgkJCQkvLyBJbmNyZW1lbnQKCQkJCSRpKys7CgkJCX0KCQl9CgoJCWlmKCRpID09IDApCgkJewoJCQkkcmV0dXJuTWVzc2FnZSAuPSAnTm8gYXdhcmRzIHRvIGRpc3BsYXkuJzsKCQl9CgkJZWxzZQoJCXsKCQkJJHJldHVybk1lc3NhZ2UgLj0gJwoJCQk8L3NlbGVjdD4KCgkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InN1Ym1pdERlbGV0ZUF3YXJkIiBpZD0ic3VibWl0RGVsZXRlQXdhcmQiIHZhbHVlPSJEZWxldGUgQXdhcmQiIC8+CgkJCTwvZm9ybT4nOwoJCX0KCQkKCQkkcmV0dXJuTWVzc2FnZTIgPSAnJzsKCQkKCQkvLyBHZXQgZGF0YQoJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIHRyb29wZXJzIFdIRVJFIGFwcHJvdmVkID0gMSBPUkRFUiBCWSBuYW1lIjsKCgkJLy8gQW1vdW50IG9mIHVzZXJzCgkJJGkgPSAwOwoJCSRnZXRJZCA9IDA7CgoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIEZvcm1hdHRpbmcKCQkJCWlmKCRpID09IDApCgkJCQl7CgkJCQkJJGdldElkID0gJGRiLT5pZDsKCgkJCQkJJHJldHVybk1lc3NhZ2UyIC49ICcKCQkJCQk8Zm9ybSBhY3Rpb249InByb2Nlc3MucGhwP2RvPWFzc2lnbmF3YXJkcyIgbWV0aG9kPSJQT1NUIiBuYW1lPSJhd2FyZFVzZXIiIGlkPSJhd2FyZFVzZXIiPgoKCQkJCQk8c2VsZWN0IG5hbWU9InVzZXJJREF3YXJkIiBpZD0idXNlcklEQXdhcmQiPic7CgkJCQl9CgoJCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnPG9wdGlvbiB2YWx1ZT0iJy4kZGItPmlkLiciPicuJGRiLT5uYW1lLic8L29wdGlvbj4nOwoKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCgkJLy8gSWYgbm8gZXZlbnRzCgkJaWYoJGkgPT0gMCkKCQl7CgkJCQkkcmV0dXJuTWVzc2FnZTIgLj0gJ1RoZXJlIGFyZSBubyB0cm9vcGVycyB0byBkaXNwbGF5Lic7CgkJfQoJCWVsc2UKCQl7CgkJCQkkcmV0dXJuTWVzc2FnZTIgLj0gJwoJCQk8L3NlbGVjdD4KCgkJCTxiciAvPjxiciAvPic7CgoJCQkvLyBHZXQgZGF0YQoJCQkkcXVlcnkyID0gIlNFTEVDVCAqIEZST00gYXdhcmRzIE9SREVSIEJZIHRpdGxlIjsKCgkJCS8vIEFtb3VudCBvZiBhd2FyZHMKCQkJJGogPSAwOwoKCQkJaWYgKCRyZXN1bHQyID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkyKSkKCQkJewoJCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdDIpKQoJCQkJewoJCQkJCS8vIEZvcm1hdHRpbmcKCQkJCQlpZigkaiA9PSAwKQoJCQkJCXsKCQkJCQkJJGdldElkMiA9ICRkYi0+aWQ7CgkJCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnPHNlbGVjdCBpZD0iYXdhcmRJREFzc2lnbiIgbmFtZT0iYXdhcmRJREFzc2lnbiI+JzsKCQkJCQl9CgkJCQkJCgkJCQkJJHJldHVybk1lc3NhZ2UyIC49ICc8b3B0aW9uIHZhbHVlPSInLiRkYi0+aWQuJyI+Jy4kZGItPnRpdGxlLic8L29wdGlvbj4nOwoKCQkJCQkvLyBJbmNyZW1lbnQgJGoKCQkJCQkkaisrOwoJCQkJfQoJCQl9CgoJCQkvLyBJZiBhd2FyZHMgZXhpc3QKCQkJaWYoJGogPiAwKQoJCQl7CgkJCQkkcmV0dXJuTWVzc2FnZTIgLj0gJwoJCQkJPC9zZWxlY3Q+CgoJCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iYXdhcmQiIGlkPSJhd2FyZCIgdmFsdWU9IkFzc2lnbiIgJy5oYXNBd2FyZCgkZ2V0SWQsICRnZXRJZDIsIHRydWUpLicgLz4KCQkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9ImF3YXJkUmVtb3ZlIiBpZD0iYXdhcmRSZW1vdmUiIHZhbHVlPSJSZW1vdmUiICcuaGFzQXdhcmQoJGdldElkLCAkZ2V0SWQyLCB0cnVlLCB0cnVlKS4nIC8+JzsKCQkJfQoJCQllbHNlCgkJCXsKCQkJCSRyZXR1cm5NZXNzYWdlMiAuPSAnTm8gYXdhcmRzIHRvIGRpc3BsYXkuJzsKCQkJfQoJCX0KCgkJJHJldHVybk1lc3NhZ2UyIC49ICc8L2Zvcm0+JzsKCgkJJGFycmF5ID0gYXJyYXkoYXJyYXkoJ21lc3NhZ2UnID0+ICRtZXNzYWdlLCAnaWQnID0+ICRsYXN0X2lkLCAncmVzdWx0JyA9PiAkcmV0dXJuTWVzc2FnZSwgJ3Jlc3VsdDInID0+ICRyZXR1cm5NZXNzYWdlMikpOwoJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCX0KCgkvLyBHaXZlIGF3YXJkIHRvIHRyb29wZXIKCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0QXdhcmQnXSkpCgl7CgkJLy8gQ2hlY2sgaG93IG1hbnkgcmV3YXJkcwoJCSRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICJTRUxFQ1QgY291bnQoKikgRlJPTSBhd2FyZF90cm9vcGVycyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEQXdhcmQnXSkuIicgQU5EIGF3YXJkaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREFzc2lnbiddKS4iJyIpOwoJCSRudW1fcm93cyA9IG15c3FsaV9mZXRjaF9yb3coJHJlc3VsdClbMF07CgoJCSRtZXNzYWdlID0gIlRoZSBhd2FyZCB3YXMgYXdhcmRlZCBzdWNjZXNzZnVsbHkhIjsKCgkJLy8gSWYgbm8gZHVwbGljYXRlcwoJCWlmKCRudW1fcm93cyA9PSAwKQoJCXsKCQkJLy8gQ2hlY2sgdGl0bGUgZXhpc3RzIHF1ZXJ5CgkJCSRjaGVja0V4aXN0ID0gJGNvbm4tPnF1ZXJ5KCJTRUxFQ1QgKiBGUk9NIGF3YXJkcyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZElEQXNzaWduJ10pLiInIik7CgoJCQkvLyBDaGVjayBpZiB0aXRsZSBleGlzdHMKCQkJaWYoJGNoZWNrRXhpc3QtPm51bV9yb3dzID4gMCkKCQkJewoJCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIGF3YXJkX3Ryb29wZXJzICh0cm9vcGVyaWQsIGF3YXJkaWQpIFZBTFVFUyAoJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJREF3YXJkJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREFzc2lnbiddKS4iJykiKTsKCQkJCQoJCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBhd2FyZGVkIElEIFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSURBc3NpZ24nXSkgLiAiXSB0byAiIC4gZ2V0TmFtZShjbGVhbklucHV0KCRfUE9TVFsndXNlcklEQXdhcmQnXSkpLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDYsIGpzb25fZW5jb2RlKGFycmF5KCJ0cm9vcGVyaWQiID0+IGNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySURBd2FyZCddKSwgImF3YXJkaWQiID0+IGNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZElEQXNzaWduJ10pKSkpOwoJCQl9CgkJCWVsc2UKCQkJewoJCQkJJG1lc3NhZ2UgPSAiVGhpcyBhd2FyZCBkb2VzIG5vdCBleGlzdCEiOwoJCQl9CgkJfQoJCWVsc2UKCQl7CgkJCSRtZXNzYWdlID0gIlRyb29wZXIgYWxyZWFkeSBoYXMgdGhpcyBhd2FyZCEiOwoJCX0KCgkJJGFycmF5ID0gYXJyYXkoYXJyYXkoJ21lc3NhZ2UnID0+ICRtZXNzYWdlKSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQoJCgkvLyBSZW1vdmUncyBhd2FyZCBmcm9tIHRyb29wZXIKCWlmKGlzc2V0KCRfUE9TVFsncmVtb3ZlQXdhcmQnXSkpCgl7CgkJLy8gQ2hlY2sgaG93IG1hbnkgcmV3YXJkcwoJCSRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICJTRUxFQ1QgY291bnQoKikgRlJPTSBhd2FyZF90cm9vcGVycyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEQXdhcmQnXSkuIicgQU5EIGF3YXJkaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREFzc2lnbiddKS4iJyIpOwoJCSRudW1fcm93cyA9IG15c3FsaV9mZXRjaF9yb3coJHJlc3VsdClbMF07CgoJCSRtZXNzYWdlID0gIlRoZSBhd2FyZCB3YXMgcmVtb3ZlZCBzdWNjZXNzZnVsbHkhIjsKCgkJLy8gSWYgbm8gZHVwbGljYXRlcwoJCWlmKCRudW1fcm93cyA+IDApCgkJewoJCQkvLyBSZW1vdmUKCQkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSBhd2FyZF90cm9vcGVycyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEQXdhcmQnXSkuIicgQU5EIGF3YXJkaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREFzc2lnbiddKS4iJyIpOwoJCQkKCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIHJlbW92ZWQgYXdhcmQgSUQgWyIgLiBjbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREFzc2lnbiddKSAuICJdIGZyb20gIiAuIGdldE5hbWUoY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJREF3YXJkJ10pKSwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAyNSwganNvbl9lbmNvZGUoYXJyYXkoInRyb29wZXJpZCIgPT4gY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJREF3YXJkJ10pLCAiYXdhcmRpZCIgPT4gY2xlYW5JbnB1dCgkX1BPU1RbJ2F3YXJkSURBc3NpZ24nXSkpKSk7CgkJfQoJCWVsc2UKCQl7CgkJCSRtZXNzYWdlID0gIlRyb29wZXIgZG9lcyBub3QgaGF2ZSB0aGlzIGF3YXJkISI7CgkJfQoKCQkkYXJyYXkgPSBhcnJheShhcnJheSgnbWVzc2FnZScgPT4gJG1lc3NhZ2UpKTsKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9CgoJLy8gRWRpdCBhbiBhd2FyZAoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRFZGl0QXdhcmQnXSkpCgl7CgkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgYXdhcmRzIFNFVCB0aXRsZSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlZGl0QXdhcmRUaXRsZSddKS4iJywgaWNvbiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlZGl0QXdhcmRJbWFnZSddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZElERWRpdCddKS4iJyIpOwoKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBlZGl0ZWQgYXdhcmQgSUQgWyIgLiBjbGVhbklucHV0KCRfUE9TVFsnYXdhcmRJREVkaXQnXSkgLiAiXSB0byAiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2VkaXRBd2FyZFRpdGxlJ10pLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDcsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIGF3YXJkcyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydhd2FyZElERWRpdCddKS4iJyIpKTsKCX0KfQoKLy8gR2V0IHRyb29wZXIgZGF0YQppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImdldHVzZXIiICYmIGxvZ2dlZEluKCkpCnsKCWlmKGlzc2V0KCRfUE9TVFsnZ2V0dXNlciddKSkKCXsKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSB0cm9vcGVycyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydpZCddKS4iJyI7CgoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpIG9yIGRpZSgkY29ubi0+ZXJyb3IpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIFNldCB1cCBsaW5rCgkJCQkkbGluayA9ICcnOwoKCQkJCS8vIENyZWF0ZSBsaW5rCgkJCQlpZihnZXQ1MDFJbmZvKCRkYi0+dGtpZCwgJGRiLT5zcXVhZClbJ2xpbmsnXSAhPSAiIikKCQkJCXsKCQkJCQkkbGluayA9IGdldDUwMUluZm8oJGRiLT50a2lkLCAkZGItPnNxdWFkKVsnbGluayddOwoJCQkJfQoJCQkJZWxzZSBpZigkZGItPnNxdWFkIDw9IGNvdW50KCRzcXVhZEFycmF5KSkKCQkJCXsKCQkJCQkkbGluayA9ICdodHRwczovL3d3dy41MDFzdC5jb20vbWVtYmVyQVBJL3YzL2xlZ2lvbklkLycgLiAkZGItPnRraWQ7CgkJCQl9CgkJCQkKCQkJCS8vIEFycmF5IHZhcmlhYmxlcwoJCQkJJGFycmF5ID0gYXJyYXkoJ25hbWUnID0+ICRkYi0+bmFtZSwgJ2VtYWlsJyA9PiAkZGItPmVtYWlsLCAnZm9ydW0nID0+ICRkYi0+Zm9ydW1faWQsICdwaG9uZScgPT4gJGRiLT5waG9uZSwgJ3NxdWFkJyA9PiBnZXRTcXVhZE5hbWUoJGRiLT5zcXVhZCksICd0a2lkJyA9PiByZWFkVEtOdW1iZXIoJGRiLT50a2lkLCAkZGItPnNxdWFkKSwgJ2xpbmsnID0+ICRsaW5rKTsKCgkJCQkvLyBMb29wIHRocm91Z2ggY2x1YnMKCQkJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQkJCXsKCQkJCQkvLyBJZiBEQjMgZGVmaW5lZAoJCQkJCWlmKCRjbHViX3ZhbHVlWydkYjNOYW1lJ10gIT0gIiIpCgkJCQkJewoJCQkJCQkkYXJyYXlbJGNsdWJfdmFsdWVbJ2RiMyddXSA9ICRkYi0+eyRjbHViX3ZhbHVlWydkYjMnXX07IAoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KCgllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cn0KCi8vIEFwcHJvdmUgdHJvb3BlcnMKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJhcHByb3ZldHJvb3BlcnMiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CgkvLyBVc2VyIHN1Ym1pdHRlZCBmb3IgZGVsZXRpb24uLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0RGVueVVzZXInXSkpCgl7CgkJLy8gUXVlcnkgZm9yIHVzZXIgaW5mbwoJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIHRyb29wZXJzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRDInXSkuIiciOwoKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSBvciBkaWUoJGNvbm4tPmVycm9yKSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkvLyBTZW5kIGUtbWFpbAoJCQkJdHJ5CgkJCQl7CgkJCQkJc2VuZEVtYWlsKCRkYi0+ZW1haWwsICRkYi0+bmFtZSwgIiIuZ2Fycmlzb24uIiBUcm9vcCBUcmFja2VyOiBBY2NvdW50IERlbmllZCIsICJZb3VyIGFjY291bnQgaGFzIGJlZW4gZGVuaWVkLiBQbGVhc2UgY29uZmlybSB0aGF0IGFsbCB5b3VyIGluZm9ybWF0aW9uIGlzIGNvcnJlY3QgYW5kIHRyeSBhZ2Fpbi4gSWYgeW91IGNvbnRpbnVlIHRvIGhhdmUgaXNzdWVzLCBwbGVhc2UgcmVhY2ggb3V0IG9uIHRoZSBib2FyZHMuIik7CgkJCQl9CgkJCQljYXRjaChFeGNlcHRpb24gJGUpCgkJCQl7CgkJCQkJLy8gTm90aGluZwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBkZW5pZWQgdXNlciBJRCBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySUQyJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDgsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIHRyb29wZXJzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRDInXSkuIiciKSk7CgkJCgkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlIC0gdHJvb3BlcnMKCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIHRyb29wZXJzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRDInXSkuIiciKTsKCX0KCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEFwcHJvdmVVc2VyJ10pKQoJewoJCS8vIFF1ZXJ5IGZvciB1c2VyIGluZm8KCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSB0cm9vcGVycyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySUQyJ10pLiInIjsKCgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkgb3IgZGllKCRjb25uLT5lcnJvcikpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJdHJ5CgkJCQl7CgkJCQkJLy8gU2VuZCBlLW1haWwKCQkJCQlzZW5kRW1haWwoJGRiLT5lbWFpbCwgJGRiLT5uYW1lLCAiIi5nYXJyaXNvbi4iIFRyb29wIFRyYWNrZXI6IEFjY291bnQgQXBwcm92ZWQiLCAiWW91ciBhY2NvdW50IGhhcyBiZWVuIGFwcHJvdmVkISIpOwoJCQkJfQoJCQkJY2F0Y2goRXhjZXB0aW9uICRlKQoJCQkJewoJCQkJCS8vIE5vdGhpbmcKCQkJCX0KCQkJfQoJCX0KCQkKCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgYXBwcm92ZWQgPSAxIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRDInXSkuIiciKTsKCQkKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBhcHByb3ZlZCB1c2VyIElEIFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRDInXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgOSwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gdHJvb3BlcnMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEMiddKS4iJyIpKTsKCX0KfQoKLy8gTWFuYWdlIHRyb29wZXJzCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAibWFuYWdldHJvb3BlcnMiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CgkvLyBVc2VyIHN1Ym1pdHRlZCBmb3IgZGVsZXRpb24uLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0RGVsZXRlVXNlciddKSkKCXsKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBkZWxldGVkIHVzZXIgSUQgWyIgLiBjbGVhbklucHV0KCRfUE9TVFsndXNlcklEJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDEwLCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSB0cm9vcGVycyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySUQnXSkuIiciKSk7CgoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gdHJvb3BlcnMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEJ10pLiInIik7CgkJCgkJLy8gVXBkYXRlIG90aGVyIGRhdGFiYXNlcyB0aGF0IHdpbGwgYmUgYWZmZWN0ZWQKCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIGV2ZW50X3NpZ25fdXAgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRCddKS4iJyIpOwoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gYXdhcmRfdHJvb3BlcnMgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRCddKS4iJyIpOwoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gY29tbWVudHMgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRCddKS4iJyIpOwoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gZXZlbnRfbm90aWZpY2F0aW9ucyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEJ10pLiInIik7CgkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSBub3RpZmljYXRpb25fY2hlY2sgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRCddKS4iJyIpOwoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gdGl0bGVfdHJvb3BlcnMgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJRCddKS4iJyIpOwoJfQoKCS8vIFVzZXIgc3VibWl0dGVkIGZvciBlZGl0Li4uCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEVkaXRVc2VyJ10pKQoJewoJCS8vIExvYWQgdXNlciBpbmZvCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gdHJvb3BlcnMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklEJ10pLiInIjsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkkYXJyYXkgPSBhcnJheSgnaWQnID0+ICRkYi0+aWQsICduYW1lJyA9PiAkZGItPm5hbWUsICdwaG9uZScgPT4gJGRiLT5waG9uZSwgJ3NxdWFkJyA9PiAkZGItPnNxdWFkLCAncGVybWlzc2lvbnMnID0+ICRkYi0+cGVybWlzc2lvbnMsICdwNTAxJyA9PiAkZGItPnA1MDEsICd0a2lkJyA9PiAkZGItPnRraWQsICdmb3J1bWlkJyA9PiAkZGItPmZvcnVtX2lkLCAnc3VwcG9ydGVyJyA9PiAkZGItPnN1cHBvcnRlciwgJ3NwVHJvb3BlcicgPT4gJGRiLT5zcFRyb29wZXIsICdzcENvc3R1bWUnID0+ICRkYi0+c3BDb3N0dW1lLCAnc3BBd2FyZCcgPT4gJGRiLT5zcEF3YXJkKTsKCgkJCQkvLyBMb29wIHRocm91Z2ggY2x1YnMKCQkJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQkJCXsKCQkJCQkvLyBQdXNoIHRvIGFycmF5CgkJCQkJJGFycmF5WyRjbHViX3ZhbHVlWydkYiddXSA9ICRkYi0+eyRjbHViX3ZhbHVlWydkYiddfTsKCgkJCQkJLy8gSWYgREIzIGRlZmluZWQKCQkJCQlpZigkY2x1Yl92YWx1ZVsnZGIzTmFtZSddICE9ICIiKQoJCQkJCXsKCQkJCQkJJGFycmF5WyRjbHViX3ZhbHVlWydkYjMnXV0gPSAkZGItPnskY2x1Yl92YWx1ZVsnZGIzJ119OyAKCQkJCQl9CgkJCQl9CgoJCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCQl9CgkJfQoJfQoKCS8vIFVzZXIgZWRpdCBzdWJtaXR0ZWQKCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0VXNlckVkaXQnXSkpCgl7CgkJLy8gQ2hlY2sgd2UgaGF2ZSBhbGwgdGhlIGRhdGEgd2UgbmVlZCBzZXJ2ZXIgc2lkZS4gSlF1ZXJ5IHNob3VsZCBkbyB0aGlzLCBidXQgdGhpcyBpcyBhIGJhY2t1cAoJCWlmKGNsZWFuSW5wdXQoJF9QT1NUWyd1c2VyJ10pICE9ICIiICYmIGNsZWFuSW5wdXQoJF9QT1NUWydzcXVhZCddKSAhPSAiIiAmJiBjbGVhbklucHV0KCRfUE9TVFsndGtpZCddKSAhPSAiIiAmJiBjbGVhbklucHV0KCRfUE9TVFsnZm9ydW1pZCddKSAhPSAiIikKCQl7CgkJCS8vIFNldCB1cCBtZXNzYWdlCgkJCSRtZXNzYWdlID0gIlRyb29wZXIgaGFzIGJlZW4gdXBkYXRlZCEiOwoJCQkKCQkJLy8gKipDVVNUT00qKgoJCQkvLyBDaGVjayBpZiBSZWJlbCBoYXMgYSBSZWJlbCBGb3J1bSB0byBjaGFuZ2Ugc3RhdHVzCgkJCWlmKGNsZWFuSW5wdXQoJF9QT1NUWydwUmViZWwnXSkgIT0gMCAmJiBjbGVhbklucHV0KCRfUE9TVFsncmViZWxmb3J1bSddKSA9PSAiIikKCQkJewoJCQkJLy8gUmVzZXQgUmViZWwgZHVlIHRvIGl0IG5vdCBiZWluZyBhYmxlIHRvIHB1dCB2YWx1ZSBpbiBzcHJlYWRzaGVldAoJCQkJJF9QT1NUWydwUmViZWwnXSA9IDA7CgkJCQkKCQkJCS8vIEFkZCB0byBtZXNzYWdlCgkJCQkkbWVzc2FnZSA9ICJSZWJlbCBMZWdpb24gbWVtYmVyIHN0YXR1cyBjYW4gbm90IGJlIGNoYW5nZWQsIHVubGVzcyBhIFJlYmVsIExlZ2lvbiBGb3J1bSB1c2VybmFtZSBpcyBzZXQuIjsKCQkJfQoJCQkKCQkJLy8gU2V0IHVwIFRLSUQKCQkJJHRraWQgPSBjbGVhbklucHV0KCRfUE9TVFsndGtpZCddKTsKCgkJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyB1cGRhdGVkIHVzZXIgSUQgWyIgLiBjbGVhbklucHV0KCRfUE9TVFsndXNlcklERSddKSAuICJdIiwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAxMSwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gdHJvb3BlcnMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndXNlcklERSddKS4iJyIpKTsKCgkJCS8vIFNldCB1cCBhZGQgdG8gcXVlcnkKCQkJJGFkZFRvUXVlcnkgPSAiIjsKCgkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCXsKCQkJCS8vIEFkZAoJCQkJJGFkZFRvUXVlcnkgLj0gIiIuJGNsdWJfdmFsdWVbJ2RiJ10uIiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYiddXSkuIicsICI7CgoJCQkJLy8gSWYgREIzIGRlZmluZWQKCQkJCWlmKCRjbHViX3ZhbHVlWydkYjNOYW1lJ10gIT0gIiIpCgkJCQl7CgkJCQkJJGFkZFRvUXVlcnkgLj0gIiIuJGNsdWJfdmFsdWVbJ2RiMyddLiIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFskY2x1Yl92YWx1ZVsnZGIzJ11dKS4iJywgIjsKCQkJCX0KCQkJfQoJCQkKCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHRyb29wZXJzIFNFVCBuYW1lID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXInXSkuIicsIHBob25lID0gJyIuY2xlYW5JbnB1dChjbGVhbklucHV0KCRfUE9TVFsncGhvbmUnXSkpLiInLCBzcXVhZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzcXVhZCddKS4iJywgcDUwMSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwNTAxJ10pLiInLCAiLiRhZGRUb1F1ZXJ5LiIgdGtpZCA9ICciLiR0a2lkLiInLCBmb3J1bV9pZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydmb3J1bWlkJ10pLiInLCBzdXBwb3J0ZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3VwcG9ydGVyJ10pLiInIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJREUnXSkuIiciKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCgkJCS8vIElmIHN1cGVyIHVzZXIsIHVwZGF0ZSBzcGVjaWFsIHBlcm1pc3Npb25zCgkJCWlmKGhhc1Blcm1pc3Npb24oMSkpCgkJCXsKCQkJCS8vIEdpdmUgZGVmYXVsdCB2YWx1ZSBpZiBudWxsCgkJCQlpZighaXNzZXQoJF9QT1NUWydzcFRyb29wZXInXSkpIHsgJF9QT1NUWydzcFRyb29wZXInXSA9IDA7IH0gZWxzZSB7ICRfUE9TVFsnc3BUcm9vcGVyJ10gPSAxOyB9CgkJCQlpZighaXNzZXQoJF9QT1NUWydzcENvc3R1bWUnXSkpIHsgJF9QT1NUWydzcENvc3R1bWUnXSA9IDA7IH0gZWxzZSB7ICRfUE9TVFsnc3BDb3N0dW1lJ10gPSAxOyB9CgkJCQlpZighaXNzZXQoJF9QT1NUWydzcEF3YXJkJ10pKSB7ICRfUE9TVFsnc3BBd2FyZCddID0gMDsgfSBlbHNlIHsgJF9QT1NUWydzcEF3YXJkJ10gPSAxOyB9CgoJCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCQkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgc3BUcm9vcGVyID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NwVHJvb3BlciddKS4iJywgc3BDb3N0dW1lID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NwQ29zdHVtZSddKS4iJywgc3BBd2FyZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzcEF3YXJkJ10pLiInLCBwZXJtaXNzaW9ucyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwZXJtaXNzaW9ucyddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd1c2VySURFJ10pLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgkJCX0KCgkJCSRhcnJheSA9IGFycmF5KCdzdWNjZXNzJyA9PiAndHJ1ZScsICduZXduYW1lJyA9PiBjbGVhbklucHV0KCRfUE9TVFsndXNlciddKSAuICIgLSAiIC4gcmVhZFRLTnVtYmVyKCR0a2lkLCBnZXRUcm9vcGVyU3F1YWQoY2xlYW5JbnB1dCgkX1BPU1RbJ3VzZXJJREUnXSkpKSwgJ2RhdGEnID0+ICRtZXNzYWdlKTsKCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCX0KCQllbHNlCgkJewoJCQkkYXJyYXkgPSBhcnJheSgnc3VjY2VzcycgPT4gJ2ZhaWxlZCcsICdkYXRhJyA9PiAnJyk7CgkJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCQl9Cgl9Cn0KCi8vIENoYW5nZSBwaG9uZQppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImNoYW5nZXBob25lIiAmJiBsb2dnZWRJbigpKQp7CglpZihpc3NldCgkX1BPU1RbJ3Bob25lQnV0dG9uJ10pKQoJewoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHRyb29wZXJzIFNFVCBwaG9uZSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwaG9uZSddKS4iJyBXSEVSRSBpZCA9ICciLiRfU0VTU0lPTlsnaWQnXS4iJyIpOwoJCWVjaG8gJ1Bob25lIG51bWJlciB1cGRhdGVkIHN1Y2Vzc2Z1bGx5ISc7Cgl9Cn0KCi8vIENoYW5nZSBuYW1lCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAiY2hhbmdlbmFtZSIgJiYgbG9nZ2VkSW4oKSkKewoJaWYoaXNzZXQoJF9QT1NUWyduYW1lQnV0dG9uJ10pKQoJewoJCSRmYWlsZWQgPSBmYWxzZTsKCgkJaWYoY2xlYW5JbnB1dCgkX1BPU1RbJ25hbWUnXSkgPT0gIiIpCgkJewoJCQkkZmFpbGVkID0gdHJ1ZTsKCQkJZWNobyAnUGxlYXNlIGVudGVyIGEgbmFtZS4nOwoJCX0KCgkJaWYoISRmYWlsZWQpCgkJewoJCQkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgbmFtZSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyduYW1lJ10pLiInIFdIRVJFIGlkID0gJyIuJF9TRVNTSU9OWydpZCddLiInIik7CgkJCWVjaG8gJ05hbWUgdXBkYXRlZCBzdWNlc3NmdWxseSEnOwoJCX0KCX0KfQoKLy8gVW5zdWJzY3JpYmUgLyBTdWJzY3JpYmUKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJ1bnN1YnNjcmliZSIgJiYgbG9nZ2VkSW4oKSkKewoJaWYoaXNzZXQoJF9QT1NUWyd1bnN1YnNjcmliZUJ1dHRvbiddKSkKCXsKCQkkcXVlcnkgPSAiU0VMRUNUIHN1YnNjcmliZSBGUk9NIHRyb29wZXJzIFdIRVJFIGlkID0gJyIuJF9TRVNTSU9OWydpZCddLiInIjsKCgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkgb3IgZGllKCRjb25uLT5lcnJvcikpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJaWYoJGRiLT5zdWJzY3JpYmUgPT0gMSkKCQkJCXsKCQkJCQkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgc3Vic2NyaWJlID0gMCBXSEVSRSBpZCA9ICciLiRfU0VTU0lPTlsnaWQnXS4iJyIpOwoJCQkJCWVjaG8gJ1lvdSBhcmUgbm93IHVuc3Vic2NyaWJlZCBmcm9tIGUtbWFpbHMgYW5kIHdpbGwgbm8gbG9uZ2VyIHJlY2VpdmUgbm90aWZpY2F0aW9ucy4nOwoJCQkJfQoJCQkJZWxzZQoJCQkJewoJCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHRyb29wZXJzIFNFVCBzdWJzY3JpYmUgPSAxIFdIRVJFIGlkID0gJyIuJF9TRVNTSU9OWydpZCddLiInIik7CgkJCQkJZWNobyAnWW91IGFyZSBub3cgc3Vic2NyaWJlZCB0byBlLW1haWwgbm90aWZpY2F0aW9ucy4nOwoJCQkJfQoJCQl9CgkJfQoJfQp9CgovLyBFLW1haWwgc2V0dGluZ3MKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJlbWFpbHNldHRpbmdzIiAmJiBsb2dnZWRJbigpKQp7CgkvLyBDaGVjayBmb3IgcG9zdCByZXF1ZXN0CglpZihpc3NldCgkX1BPU1RbJ3NldGVtYWlsc2V0dGluZ3MnXSkpCgl7CgkJLy8gQ2hlY2sgd2hpY2ggc2V0dGluZyB3ZSBhcmUgY2hhbmdpbmcKCQkkY29ubi0+cXVlcnkoIlVQREFURSB0cm9vcGVycyBTRVQgIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydzZXR0aW5nJ10pIC4gIiA9IENBU0UgIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydzZXR0aW5nJ10pIC4gIiBXSEVOIDEgVEhFTiAwIFdIRU4gMCBUSEVOIDEgRU5EIFdIRVJFIGlkID0gJyIuJF9TRVNTSU9OWydpZCddLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7Cgl9Cn0KCi8vIFJlcXVlc3QgYWNjZXNzCmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAicmVxdWVzdGFjY2VzcyIpCnsKCWlmKCRfUE9TVFsnc3VibWl0UmVxdWVzdCddKQoJewoJCS8vIENoZWNrIHdlIGhhdmUgYWxsIHRoZSBkYXRhIHdlIG5lZWQgc2VydmVyIHNpZGUuIEpRdWVyeSBzaG91bGQgZG8gdGhpcywgYnV0IHRoaXMgaXMgYSBiYWNrdXAKCQlpZigkX1BPU1RbJ3RraWQnXSAhPSAiIiAmJiAkX1BPU1RbJ25hbWUnXSAhPSAiIiAmJiAkX1BPU1RbJ2ZvcnVtX2lkJ10gIT0gIiIgJiYgJF9QT1NUWydwYXNzd29yZCddICE9ICIiICYmICRfUE9TVFsnc3F1YWQnXSA+PSAwKQoJCXsKCQkJJGZhaWxlZCA9IGZhbHNlOwoKCQkJZWNobyAnPHVsPic7CgkJCQoJCQkvLyBDaGVjayB0byBzZWUgaWYgYSBmb3J1bSB1c2VybmFtZSBleGlzdHMKCQkJJGZvcnVtX25hbWVfZXhpc3RzID0gZ2V0VXNlckZvcnVtKGNsZWFuSW5wdXQoJF9QT1NUWydmb3J1bWlkJ10pKTsKCQkJCgkJCS8vIENoZWNrIGZvcnVtIG5hbWUKCQkJaWYoaXNzZXQoJGZvcnVtX25hbWVfZXhpc3RzWydleGFjdCddKSkKCQkJewoJCQkJJGZhaWxlZCA9IHRydWU7CgkJCQllY2hvICc8bGk+QW4gYWNjb3VudCB3YXMgbm90IGZvdW5kIG9uIHRoZSBGTCA1MDFzdCBCb2FyZHMuIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZsNTAxc3QuY29tL2JvYXJkcy8iPlJlZ2lzdGVyIGhlcmU8L2E+LjwvbGk+JzsKCQkJfQoKCQkJLy8gSWYgbmFtZSBlbXB0eQoJCQlpZihjbGVhbklucHV0KCRfUE9TVFsnbmFtZSddKSA9PSAiIikKCQkJewoJCQkJJGZhaWxlZCA9IHRydWU7CgkJCQllY2hvICc8bGk+UGxlYXNlIGVudGVyIHlvdXIgbmFtZS48L2xpPic7CgkJCX0KCgkJCS8vIFNldCBUS0lECgkJCSR0a2lkID0gY2xlYW5JbnB1dCgkX1BPU1RbJ3RraWQnXSk7CgkJCQoJCQkvLyBJZiBGb3J1bSBJRCBlbXB0eQoJCQlpZihjbGVhbklucHV0KCRfUE9TVFsnZm9ydW1pZCddKSA9PSAiIikKCQkJewoJCQkJJGZhaWxlZCA9IHRydWU7CgkJCQllY2hvICc8bGk+UGxlYXNlIGVudGVyIHlvdXIgRkwgNTAxc3QgRm9ydW0gVXNlcm5hbWUuPC9saT4nOwoJCQl9CgkJCQoJCQkvLyBJZiBUS0lEIGlzIGdyZWF0aGVyIHRoYW4gMTEgY2hhcmFjdGVycwoJCQlpZihzdHJsZW4oJHRraWQpID4gMTEpCgkJCXsKCQkJCSRmYWlsZWQgPSB0cnVlOwoJCQkJZWNobyAnPGxpPlRLSUQgbXVzdCBiZSBsZXNzIHRoYW4gZWxldmVuICgxMSkgY2hhcmFjdGVycy48L2xpPic7CgkJCX0KCgkJCS8vIElmIFRLSUQgaXMgbm90IG51bWVyaWMKCQkJaWYoIWlzX251bWVyaWMoJHRraWQpKQoJCQl7CgkJCQkkZmFpbGVkID0gdHJ1ZTsKCQkJCWVjaG8gJzxsaT5US0lEIG11c3QgYmUgYW4gaW50ZWdlci48L2xpPic7CgkJCX0KCQkJCgkJCS8vIFNldCBzcXVhZCB2YXJpYWJsZQoJCQkkc3F1YWQgPSBjbGVhbklucHV0KCRfUE9TVFsnc3F1YWQnXSk7CgkJCQoJCQkvLyBDaGVjayBpZiA1MDFzdAoJCQlpZigkc3F1YWQgPD0gY291bnQoJHNxdWFkQXJyYXkpKQoJCQl7CgkJCQkvLyBRdWVyeSBJRCBkYXRhYmFzZQoJCQkJJGlkY2hlY2sgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCBpZCBGUk9NIHRyb29wZXJzIFdIRVJFIHRraWQgPSAnIi4kdGtpZC4iJyBBTkQgc3F1YWQgPD0gIi5jb3VudCgkc3F1YWRBcnJheSkuIiIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQl9CgkJCWVsc2UKCQkJewoJCQkJLy8gSW4gYSBjbHViIC0gcXVlcnkgYnkgY2x1YgoJCQkJJGlkY2hlY2sgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCBpZCBGUk9NIHRyb29wZXJzIFdIRVJFIHRraWQgPSAnIi4kdGtpZC4iJyBBTkQgc3F1YWQgPSAiLiRzcXVhZC4iIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgkJCX0KCQkJCgkJCS8vIFF1ZXJ5IDUwMXN0IGZvcnVtCgkJCSRmb3J1bWNoZWNrID0gJGNvbm4tPnF1ZXJ5KCJTRUxFQ1QgZm9ydW1faWQgRlJPTSB0cm9vcGVycyBXSEVSRSBmb3J1bV9pZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydmb3J1bWlkJ10pLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgkJCQoJCQkvLyBDaGVjayBpZiA1MDFzdCBmb3J1bSBleGlzdHMKCQkJaWYoJGZvcnVtY2hlY2stPm51bV9yb3dzID4gMCkKCQkJewoJCQkJJGZhaWxlZCA9IHRydWU7CgkJCQllY2hvICc8bGk+RkwgR2Fycmlzb24gRm9ydW0gTmFtZSBpcyBhbHJlYWR5IHRha2VuLiBQbGVhc2UgY29udGFjdCB0aGUgJy5nYXJyaXNvbi4nIFdlYm1hc3RlciBmb3IgZnVydGhlciBhc3Npc3RhbmNlLjwvbGk+JzsKCQkJfQoJCQkKCQkJLy8gTG9vcCB0aHJvdWdoIGNsdWJzCgkJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQkJewoJCQkJLy8gSWYgREIzIGRlZmluZWQKCQkJCWlmKCRjbHViX3ZhbHVlWydkYjNOYW1lJ10gIT0gIiIpCgkJCQl7CgkJCQkJLy8gUXVlcnkgQ2x1YiAtIGlmIHNwZWNpZmllZAoJCQkJCWlmKGNsZWFuSW5wdXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYjMnXV0pICE9ICIiKQoJCQkJCXsKCQkJCQkJJGNsdWJpZCA9ICRjb25uLT5xdWVyeSgiU0VMRUNUICIuJGNsdWJfdmFsdWVbJ2RiMyddLiIgRlJPTSB0cm9vcGVycyBXSEVSRSAiLiRjbHViX3ZhbHVlWydkYjMnXS4iID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJGNsdWJfdmFsdWVbJ2RiMyddXSkuIiciKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCQkJCQkJCgkJCQkJCS8vIENoZWNrIGlmIGNsdWIgSUQgZXhpc3RzCgkJCQkJCWlmKCRjbHViaWQtPm51bV9yb3dzID4gMCkKCQkJCQkJewoJCQkJCQkJJGZhaWxlZCA9IHRydWU7CgkJCQkJCQllY2hvICc8bGk+Jy4kY2x1Yl92YWx1ZVsnbmFtZSddLicgSUQgaXMgYWxyZWFkeSB0YWtlbi4gUGxlYXNlIGNvbnRhY3QgdGhlICcuZ2Fycmlzb24uJyBXZWJtYXN0ZXIgZm9yIGZ1cnRoZXIgYXNzaXN0YW5jZS48L2xpPic7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCS8vIENoZWNrIGlmIElEIGV4aXN0cwoJCQlpZigkaWRjaGVjay0+bnVtX3Jvd3MgPiAwKQoJCQl7CgkJCQkkZmFpbGVkID0gdHJ1ZTsKCQkJCWVjaG8gJzxsaT5US0lEIGlzIHRha2VuLiBJZiB5b3UgaGF2ZSB0cm9vcHMgb24gdGhlIG9sZCB0cm9vcCB0cmFja2VyLCA8YSBocmVmPSJpbmRleC5waHA/YWN0aW9uPXNldHVwIj5jbGljayBoZXJlIHRvIHJlcXVlc3QgYWNjZXNzPC9hPi48L2xpPic7CgkJCX0KCgkJCS8vIExvZ2luIHdpdGggZm9ydW0KCQkJJGZvcnVtTG9naW4gPSBsb2dpbldpdGhGb3J1bShjbGVhbklucHV0KCRfUE9TVFsnZm9ydW1pZCddKSwgY2xlYW5JbnB1dCgkX1BPU1RbJ3Bhc3N3b3JkJ10pKTsKCgkJCS8vIFZlcmlmeSBmb3J1bSBhbmQgcGFzc3dvcmQKCQkJaWYoaXNzZXQoJGZvcnVtTG9naW5bJ3N1Y2Nlc3MnXSkgJiYgJGZvcnVtTG9naW5bJ3N1Y2Nlc3MnXSAhPSAxKQoJCQl7CgkJCQkkZmFpbGVkID0gdHJ1ZTsKCQkJCWVjaG8gJzxsaT5JbmNvcnJlY3QgJy5nYXJyaXNvbi4nIEJvYXJkIHVzZXJuYW1lIGFuZCBwYXNzd29yZC48L2xpPic7CgkJCX0KCgkJCWlmKHN0cmxlbihjbGVhbklucHV0KCRfUE9TVFsncGhvbmUnXSkpIDwgMTAgJiYgY2xlYW5JbnB1dCgkX1BPU1RbJ3Bob25lJ10pICE9ICIiKQoJCQl7CgkJCQkkZmFpbGVkID0gdHJ1ZTsKCQkJCWVjaG8gJzxsaT5FbnRlciBhIHZhbGlkIHBob25lIG51bWJlci48L2xpPic7CgkJCX0KCgkJCS8vIElmIGZhaWxlZAoJCQlpZighJGZhaWxlZCkKCQkJewoJCQkJLy8gU2V0IHVwIHBlcm1pc3Npb24gdmFycwoJCQkJJHA1MDEgPSAwOwoKCQkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQkJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJCQkJewoJCQkJCS8vIEFkZCBwZXJtaXNzaW9uIHZhcnMKCQkJCQkkeyRjbHViX3ZhbHVlWydkYiddfSA9IDA7CgkJCQl9CgkJCQkKCQkJCS8vIFNldCBwZXJtaXNzaW9ucwoJCQkJLy8gNTAxCgkJCQlpZihjbGVhbklucHV0KCRfUE9TVFsnc3F1YWQnXSkgPD0gY291bnQoJHNxdWFkQXJyYXkpKQoJCQkJewoJCQkJCSRwNTAxID0gMTsKCQkJCX0KCgkJCQkvLyBBZGQgdG8gcXVlcnkgc2V0IHVwCgkJCQkkYWRkVG9RdWVyeTEgPSAiIjsKCQkJCSRhZGRUb1F1ZXJ5MiA9ICIiOwoJCQkJJGFkZFRvUXVlcnkzID0gIiI7CgkJCQkkYWRkVG9RdWVyeTQgPSAiIjsKCgkJCQkvLyBMb29wIHRocm91Z2ggY2x1YnMKCQkJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQkJCXsKCQkJCQkvLyBJZiBoYXMgdmFsdWUKCQkJCQlpZihpc3NldCgkX1BPU1RbJGNsdWJfdmFsdWVbJ2RiMyddXSkgJiYgKGNsZWFuSW5wdXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYjMnXV0pICE9ICIiIHx8IGNsZWFuSW5wdXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYjMnXV0pID4gMCkpCgkJCQkJewoJCQkJCQkvLyBDaGFuZ2UgdmFsdWUKCQkJCQkJJHskY2x1Yl92YWx1ZVsnZGInXX0gPSAxOwoJCQkJCX0KCQkJCQllbHNlCgkJCQkJewoJCQkJCQkvLyBJZiBjb250YWlucyBJRAoJCQkJCQlpZiAoaXNzZXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYjMnXV0pICYmIHN0cnBvcygkY2x1Yl92YWx1ZVsnZGIzJ10sICJpZCIpICE9PSBmYWxzZSkKCQkJCQkJewoJCQkJCQkJLy8gU2V0IGFzIGludAoJCQkJCQkJJF9QT1NUWyRjbHViX3ZhbHVlWydkYjMnXV0gPSAwOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBJZiBkYXRhYmFzZSAzIHNldAoJCQkJCWlmKCRjbHViX3ZhbHVlWydkYjMnXSAhPSAiIikKCQkJCQl7CgkJCQkJCS8vIEFkZCB0byBxdWVyeQoJCQkJCQkkYWRkVG9RdWVyeTEgLj0gIiIuJGNsdWJfdmFsdWVbJ2RiMyddLiIsICI7CgkJCQkJCSRhZGRUb1F1ZXJ5MiAuPSAiJyIuY2xlYW5JbnB1dCgkX1BPU1RbJGNsdWJfdmFsdWVbJ2RiMyddXSkuIicsICI7CgkJCQkJCSRhZGRUb1F1ZXJ5MyAuPSAiIi4kY2x1Yl92YWx1ZVsnZGInXS4iLCAiOwoJCQkJCQkkYWRkVG9RdWVyeTQgLj0gIiciLiR7JGNsdWJfdmFsdWVbJ2RiJ119LiInLCAiOwoJCQkJCX0KCQkJCX0KCQkJCQoJCQkJLy8gSW5zZXJ0CgkJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIHRyb29wZXJzIChuYW1lLCB0a2lkLCBlbWFpbCwgZm9ydW1faWQsICIuJGFkZFRvUXVlcnkxLiJwNTAxLCIuJGFkZFRvUXVlcnkzLiJwaG9uZSwgc3F1YWQsIHBhc3N3b3JkKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWyduYW1lJ10pLiInLCAnIi5mbG9hdHZhbCgkdGtpZCkuIicsICciLiRmb3J1bUxvZ2luWyd1c2VyJ11bJ2VtYWlsJ10uIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydmb3J1bWlkJ10pLiInLCIuJGFkZFRvUXVlcnkyLiInIi4kcDUwMS4iJywiLiRhZGRUb1F1ZXJ5NC4iJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Bob25lJ10pLiInLCAnIi4kc3F1YWQuIicsICciLnBhc3N3b3JkX2hhc2goY2xlYW5JbnB1dCgkX1BPU1RbJ3Bhc3N3b3JkJ10pLCBQQVNTV09SRF9ERUZBVUxUKS4iJykiKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCQkJCQoJCQkJLy8gTGFzdCBJRAoJCQkJJGxhc3RfaWQgPSAkY29ubi0+aW5zZXJ0X2lkOwoJCQkJCgkJCQllY2hvICc8bGk+UmVxdWVzdCBzdWJtaXR0ZWQhIFlvdSB3aWxsIHJlY2VpdmUgYW4gZS1tYWlsIHdoZW4geW91ciByZXF1ZXN0IGlzIGFwcHJvdmVkIG9yIGRlbmllZC48L2xpPic7CgkJCX0KCgkJCWVjaG8gJzwvdWw+JzsKCQl9Cgl9Cn0KCi8vIEdldCBMb2NhdGlvbiBCdXR0b24KaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJnZXRsb2NhdGlvbiIgJiYgbG9nZ2VkSW4oKSAmJiBpc0FkbWluKCkpCnsKCWlmKGlzc2V0KCRfUE9TVFsnbG9jYXRpb24nXSkgJiYgJF9QT1NUWydsb2NhdGlvbiddICE9ICIiKQoJewoJCSRhcnJheSA9IGFycmF5KCdzcXVhZCcgPT4gZ2V0U3F1YWQoJF9QT1NUWydsb2NhdGlvbiddKSk7CgkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJfQp9CgovLyBFdmVudCBQYWdlIC0gQ2hhbmdlIFN0YXR1cwppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImNoYW5nZXN0YXR1cyIgJiYgbG9nZ2VkSW4oKSAmJiBpc0FkbWluKCkpCnsKCS8vIFNldCB1cCByZXR1cm4gZGF0YQoJJG1lc3NhZ2UgPSAiIjsKCSRtZXNzYWdlMiA9ICIiOwoKCS8vIExvYWQgZXZlbnQgc2lnbiB1cCBpbiByb3N0ZXIKCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIGV2ZW50X3NpZ25fdXAgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudGlkJ10pLiInIEFORCBpZCA9ICIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NpZ25pZCddKS4iIjsKCglpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCXsKCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQl7CgkJCS8vIElmIHNldCB0byBnb2luZwoJCQlpZigkZGItPnN0YXR1cyA9PSAwKQoJCQl7CgkJCQkvLyBTZXQgdG8gbm90IHBpY2tlZAoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRfc2lnbl91cCBTRVQgc3RhdHVzID0gJzYnIFdIRVJFIHRyb29wZXJpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyaWQnXSkuIicgQU5EIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRpZCddKS4iJyBBTkQgaWQgPSAiLmNsZWFuSW5wdXQoJF9QT1NUWydzaWduaWQnXSkuIiIpOwoKCQkJCS8vIFNldCByZXR1cm4gZGF0YQoJCQkJJG1lc3NhZ2UgPSAnCgkJCQlOb3QgUGlja2VkCgkJCQk8YnIgLz4KCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIiBidXR0b25pZD0iMSI+QXBwcm92ZTwvYT4nOwoJCQl9CgkJCS8vIElmIHNldCB0byBwZW5kaW5nCgkJCWlmKCRkYi0+c3RhdHVzID09IDUpCgkJCXsKCQkJCS8vIFNldCB1cCB2YXJpYWJsZXMKCQkJCSRzdGF0dXMgPSAwOwoJCQkJJHRleHQgPSAiUmVqZWN0IjsKCQkJCSRidXR0b25pZCA9IDA7CgoJCQkJLy8gR2V0IGJ1dHRvbiB0eXBlCgkJCQlpZigkX1BPU1RbJ2J1dHRvbmlkJ10gPT0gMCkKCQkJCXsKCQkJCQkvLyBOb3QgcGlja2VkCgkJCQkJJHN0YXR1cyA9IDY7CgkJCQkJJHRleHQgPSAiQXBwcm92ZSI7CgkJCQkJJGJ1dHRvbmlkID0gMTsKCQkJCX0KCQkJCWVsc2UKCQkJCXsKCQkJCQkvLyBHb2luZwoJCQkJCSRzdGF0dXMgPSAwOwoJCQkJCSR0ZXh0ID0gIlJlamVjdCI7CgkJCQkJJGJ1dHRvbmlkID0gMDsKCQkJCX0KCgkJCQkvLyBTZXQgdG8gbm90IHBpY2tlZAoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRfc2lnbl91cCBTRVQgc3RhdHVzID0gJyIuJHN0YXR1cy4iJyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BlcmlkJ10pLiInIEFORCB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50aWQnXSkuIicgQU5EIGlkID0gIi5jbGVhbklucHV0KCRfUE9TVFsnc2lnbmlkJ10pLiIiKTsKCgkJCQkvLyBTZXQgcmV0dXJuIGRhdGEKCQkJCSRtZXNzYWdlID0gJwoJCQkJJy5nZXRTdGF0dXMoJHN0YXR1cykuJwoJCQkJPGJyIC8+CgkJCQk8YSBocmVmPSIjLyIgY2xhc3M9ImJ1dHRvbiIgbmFtZT0iY2hhbmdlc3RhdHVzIiB0cm9vcGVyaWQ9IicuJGRiLT50cm9vcGVyaWQuJyIgc2lnbmlkPSInLiRkYi0+aWQuJyIgYnV0dG9uaWQ9IicuJGJ1dHRvbmlkLiciPicuJHRleHQuJzwvYT4nOwoJCQl9CgkJCS8vIElmIHNldCB0byBub3QgcGlja2VkCgkJCWVsc2UgaWYoJGRiLT5zdGF0dXMgPT0gNikKCQkJewoJCQkJLy8gU2V0IHRvIGdvaW5nCgkJCQkkY29ubi0+cXVlcnkoIlVQREFURSBldmVudF9zaWduX3VwIFNFVCBzdGF0dXMgPSAnMCcgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJpZCddKS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudGlkJ10pLiInIEFORCBpZCA9ICIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NpZ25pZCddKS4iIik7CgoJCQkJLy8gU2V0IHJldHVybiBkYXRhCgkJCQkkbWVzc2FnZSA9ICcKCQkJCUdvaW5nCgkJCQk8YnIgLz4KCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIiBidXR0b25pZD0iMCI+UmVqZWN0PC9hPic7CgkJCX0KCgkJCS8vIElmIGlzIGFkbWluCgkJCWlmKGlzQWRtaW4oKSkKCQkJewoJCQkJLy8gTG9hZCB0cm9vcGVyIGNvdW50cwoJCQkJJG1lc3NhZ2UyIC49ICcKCQkJCTxoMz5BZG1pbiBUcm9vcGVyIENvdW50czwvaDM+CgoJCQkJPHVsIHN0eWxlPSJkaXNwbGF5OmlubGluZS10YWJsZTsiPgoJCQkJCTxsaT41MDFzdCB0cm9vcGVyczogJy5ldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRpZCddKSwgMCkuJyA8L2xpPgoJCQkJCTxsaT5SZWJlbCBMZWdpb246ICcuZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50aWQnXSksIDEpLicgPC9saT4KCQkJCQk8bGk+TWFuZG8gTWVyY3M6ICcuZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50aWQnXSksIDIpLicgPC9saT4KCQkJCQk8bGk+RHJvaWQgQnVpbGRlcnM6ICcuZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50aWQnXSksIDMpLicgPC9saT4KCQkJCQk8bGk+T3RoZXIgdHJvb3BlcnM6ICcuZXZlbnRDbHViQ291bnQoY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50aWQnXSksIDQpLicgPC9saT4KCQkJCTwvdWw+JzsKCQkJfQoJCX0KCX0KCgkkYXJyYXkgPSBhcnJheSgnbWVzc2FnZScgPT4gJG1lc3NhZ2UsICdtZXNzYWdlMicgPT4gJG1lc3NhZ2UyKTsKCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKfQoKLy8gRWRpdCBTZXR0aW5ncwppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImNoYW5nZXNldHRpbmdzIiAmJiBsb2dnZWRJbigpICYmIGlzQWRtaW4oKSkKewoJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gc2V0dGluZ3MgTElNSVQgMSI7CgkKCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJewoJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCXsKCQkJLy8gQ2xvc2Ugc2l0ZSBidXR0b24gcHJlc3NlZAoJCQlpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdENsb3NlU2l0ZSddKSkKCQkJewoJCQkJLy8gSWYgc2l0ZSBjbG9zZWQsIHNob3cgYnV0dG9uCgkJCQlpZigkZGItPnNpdGVjbG9zZWQgPT0gMCkKCQkJCXsKCQkJCQkvLyBDbG9zZSB3ZWJzaXRlIGJ1dHRvbgoJCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHNldHRpbmdzIFNFVCBzaXRlY2xvc2VkID0gJzEnIik7CgkJCQl9CgkJCQllbHNlCgkJCQl7CgkJCQkJLy8gT3BlbiB3ZWJzaXRlIGJ1dHRvbgoJCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHNldHRpbmdzIFNFVCBzaXRlY2xvc2VkID0gJzAnIik7CgkJCQl9CgkJCX0KCQkJCgkJCS8vIENsb3NlIHNpdGUgYnV0dG9uIHByZXNzZWQKCQkJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRDbG9zZVNpZ25VcHMnXSkpCgkJCXsKCQkJCS8vIElmIHNpZ24gdXAgY2xvc2VkLCBzaG93IGJ1dHRvbgoJCQkJaWYoJGRiLT5zaWdudXBjbG9zZWQgPT0gMCkKCQkJCXsKCQkJCQkvLyBDbG9zZSBzaWduIHVwIGJ1dHRvbgoJCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIHNldHRpbmdzIFNFVCBzaWdudXBjbG9zZWQgPSAnMSciKTsKCQkJCX0KCQkJCWVsc2UKCQkJCXsKCQkJCQkvLyBPcGVuIHNpZ24gdXAgYnV0dG9uCgkJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgc2V0dGluZ3MgU0VUIHNpZ251cGNsb3NlZCA9ICcwJyIpOwoJCQkJfQoJCQl9CgkJCQoJCQkvLyBHZXQgc3VwcG9ydCBnb2FsIGJ1dHRvbiBwcmVzc2VkIGFuZCBuZWVkIGRhdGEKCQkJaWYoaXNzZXQoJF9QT1NUWydnZXRTdXBwb3J0R29hbCddKSkKCQkJewoJCQkJJGFycmF5ID0gYXJyYXkoJ2RhdGEnID0+ICRkYi0+c3VwcG9ydGdvYWwpOwoJCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCQl9CgkJCQoJCQkvLyBTYXZlIHN1cHBvcnQgZ29hbAoJCQlpZihpc3NldCgkX1BPU1RbJ3NhdmVTdXBwb3J0R29hbCddKSkKCQkJewoJCQkJLy8gQ2hlY2sgdmFsdWUKCQkJCWlmKCRfUE9TVFsnc3VwcG9ydGdvYWwnXSAhPSAiIiAmJiBpc19udW1lcmljKCRfUE9TVFsnc3VwcG9ydGdvYWwnXSkpCgkJCQl7CgkJCQkJLy8gUXVlcnkKCQkJCQkkY29ubi0+cXVlcnkoIlVQREFURSBzZXR0aW5ncyBTRVQgc3VwcG9ydGdvYWwgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3VwcG9ydGdvYWwnXSkuIiciKTsKCQkJCX0KCQkJfQoJCX0KCX0KfQoKLy8gQ3JlYXRlIGV2ZW50CmlmKGlzc2V0KCRfR0VUWydkbyddKSAmJiAkX0dFVFsnZG8nXSA9PSAiY3JlYXRlZXZlbnQiICYmIGxvZ2dlZEluKCkgJiYgaXNBZG1pbigpKQp7CgkvLyBFdmVudCBzdWJtaXR0ZWQuLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0RXZlbnQnXSkpCgl7CgkJLy8gQ2hlY2sgd2UgaGF2ZSBhbGwgdGhlIGRhdGEgd2UgbmVlZCBzZXJ2ZXIgc2lkZS4gSlF1ZXJ5IHNob3VsZCBkbyB0aGlzLCBidXQgdGhpcyBpcyBhIGJhY2t1cAoJCWlmKCRfUE9TVFsnZXZlbnROYW1lJ10gIT0gIiIgJiYgJF9QT1NUWydldmVudFZlbnVlJ10gIT0gIiIgJiYgJF9QT1NUWydsb2NhdGlvbiddICE9ICIiICYmICRfUE9TVFsnZGF0ZVN0YXJ0J10gIT0gIiIgJiYgJF9QT1NUWydkYXRlRW5kJ10gIT0gIiIgJiYgJF9QT1NUWydudW1iZXJPZkF0dGVuZCddICE9ICIiICYmICRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10gIT0gIiIgJiYgJF9QT1NUWydzZWN1cmUnXSAhPSAiIiAmJiAkX1BPU1RbJ2JsYXN0ZXJzJ10gIT0gIiIgJiYgJF9QT1NUWydsaWdodHNhYmVycyddICE9ICIiICYmICRfUE9TVFsncGFya2luZyddICE9ICJudWxsIiAmJiAkX1BPU1RbJ21vYmlsaXR5J10gIT0gIm51bGwiICYmICRfUE9TVFsnbGFiZWwnXSAhPSAibnVsbCIgJiYgJF9QT1NUWydsaW1pdGVkRXZlbnQnXSAhPSAibnVsbCIpCgkJewoJCQkvLyBDbGVhbiBkYXRlIGlucHV0CgkJCSRkYXRlMSA9IGRhdGUoJ1ktbS1kIEg6aTpzJywgc3RydG90aW1lKGNsZWFuSW5wdXQoJF9QT1NUWydkYXRlU3RhcnQnXSkpKTsKCQkJJGRhdGUyID0gZGF0ZSgnWS1tLWQgSDppOnMnLCBzdHJ0b3RpbWUoY2xlYW5JbnB1dCgkX1BPU1RbJ2RhdGVFbmQnXSkpKTsKCgoJCQkvLyBTZXQgdXAgYWRkIHRvIHF1ZXJ5CgkJCSRhZGRUb1F1ZXJ5MSA9ICIiOwoJCQkkYWRkVG9RdWVyeTIgPSAiIjsKCgkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCXsKCQkJCS8vIEFkZAoJCQkJJGFkZFRvUXVlcnkxIC49ICIiLiRjbHViX3ZhbHVlWydkYkxpbWl0J10uIiwgIjsKCQkJCSRhZGRUb1F1ZXJ5MiAuPSAiJyIuY2xlYW5JbnB1dCgkX1BPU1RbJGNsdWJfdmFsdWVbJ2RiTGltaXQnXV0pLiInLCAiOwoJCQl9CgkJCQoJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBldmVudHMgKG5hbWUsIHZlbnVlLCBkYXRlU3RhcnQsIGRhdGVFbmQsIHdlYnNpdGUsIG51bWJlck9mQXR0ZW5kLCByZXF1ZXN0ZWROdW1iZXIsIHJlcXVlc3RlZENoYXJhY3Rlciwgc2VjdXJlQ2hhbmdpbmcsIGJsYXN0ZXJzLCBsaWdodHNhYmVycywgcGFya2luZywgbW9iaWxpdHksIGFtZW5pdGllcywgcmVmZXJyZWQsIGNvbW1lbnRzLCBsb2NhdGlvbiwgbGFiZWwsIGxpbWl0ZWRFdmVudCwgbGltaXRUbywgbGltaXQ1MDFzdCwgbGltaXRUb3RhbFRyb29wZXJzLCAiLiRhZGRUb1F1ZXJ5MS4ic3F1YWQpIFZBTFVFUyAoJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50TmFtZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50VmVudWUnXSkuIicsICciLmNsZWFuSW5wdXQoJGRhdGUxKS4iJywgJyIuY2xlYW5JbnB1dCgkZGF0ZTIpLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnd2Vic2l0ZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ251bWJlck9mQXR0ZW5kJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkQ2hhcmFjdGVyJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnc2VjdXJlJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnYmxhc3RlcnMnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaWdodHNhYmVycyddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3BhcmtpbmcnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydtb2JpbGl0eSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2FtZW5pdGllcyddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3JlZmVycmVkJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29tbWVudHMnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsb2NhdGlvbiddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xhYmVsJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGltaXRlZEV2ZW50J10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXJhJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGltaXQ1MDFzdCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0VG90YWxUcm9vcGVycyddKS4iJywgIi4kYWRkVG9RdWVyeTIuIiciLmNsZWFuSW5wdXQoJF9QT1NUWydzcXVhZG0nXSkuIicpIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgkJCQoJCQkvLyBFdmVudCBJRCAtIExhc3QgaW5zZXJ0IGZyb20gZGF0YWJhc2UKCQkJJGV2ZW50SWQgPSAkY29ubi0+aW5zZXJ0X2lkOwoKCQkJLy8gT25seSBub3RpZnkgaWYgZXZlbnQgaXMgaW4gdGhlIGZ1dHVyZQoJCQlpZihzdHJ0b3RpbWUoJGRhdGUxKSA+IHN0cnRvdGltZSgibm93IikpCgkJCXsKCQkJCS8vIFNlbmQgdG8gZGF0YWJhc2UgdG8gc2VuZCBvdXQgbm90aWZpY3Rpb25zIGxhdGVyCgkJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIG5vdGlmaWNhdGlvbl9jaGVjayAodHJvb3BpZCkgVkFMVUVTICgkZXZlbnRJZCkiKTsKCgoJCQkJLy8gTWFrZSB0aHJlYWQgYm9keQoJCQkJJHRocmVhZF9ib2R5ID0gJwoJCQkJW2JdRXZlbnQgTmFtZTpbL2JdICcuJF9QT1NUWydldmVudE5hbWUnXS4nCgkJCQlbYl1WZW51ZTpbL2JdICcuJF9QT1NUWydldmVudFZlbnVlJ10uJwoJCQkJW2JdVmVudWUgYWRkcmVzczpbL2JdICcuJF9QT1NUWydsb2NhdGlvbiddLicKCQkJCVtiXUV2ZW50IFN0YXJ0OlsvYl0gJy5kYXRlKCJtL2QveSBoOmkgQSIsIHN0cnRvdGltZSgkZGF0ZTEpKS4nCgkJCQlbYl1FdmVudCBFbmQ6Wy9iXSAnLmRhdGUoIm0vZC95IGg6aSBBIiwgc3RydG90aW1lKCRkYXRlMikpLicKCQkJCVtiXUV2ZW50IFdlYnNpdGU6Wy9iXSAnLiRfUE9TVFsnd2Vic2l0ZSddLicKCQkJCVtiXUV4cGVjdGVkIG51bWJlciBvZiBhdHRlbmRlZXM6Wy9iXSAnLiRfUE9TVFsnbnVtYmVyT2ZBdHRlbmQnXS4nCgkJCQlbYl1SZXF1ZXN0ZWQgbnVtYmVyIG9mIGNoYXJhY3RlcnM6Wy9iXSAnLiRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10uJwoJCQkJW2JdUmVxdWVzdGVkIGNoYXJhY3RlciB0eXBlczpbL2JdICcuJF9QT1NUWydyZXF1ZXN0ZWRDaGFyYWN0ZXInXS4nCgkJCQlbYl1TZWN1cmUgY2hhbmdpbmcvc3RhZ2luZyBhcmVhOlsvYl0gJy55ZXNObygkX1BPU1RbJ3NlY3VyZSddKS4nCgkJCQlbYl1DYW4gdHJvb3BlcnMgY2FycnkgYmxhc3RlcnM6Wy9iXSAnLnllc05vKCRfUE9TVFsnYmxhc3RlcnMnXSkuJwoJCQkJW2JdQ2FuIHRyb29wZXJzIGNhcnJ5L2JyaW5nIHByb3BzIGxpa2UgbGlnaHRzYWJlcnMgYW5kIHN0YWZmczpbL2JdICcueWVzTm8oJF9QT1NUWydsaWdodHNhYmVycyddKS4nCgkJCQlbYl1JcyBwYXJraW5nIGF2YWlsYWJsZTpbL2JdICcueWVzTm8oJF9QT1NUWydwYXJraW5nJ10pLicKCQkJCVtiXUlzIHZlbnVlIGFjY2Vzc2libGUgdG8gdGhvc2Ugd2l0aCBsaW1pdGVkIG1vYmlsaXR5OlsvYl0gJy55ZXNObygkX1BPU1RbJ21vYmlsaXR5J10pLicKCQkJCVtiXUFtZW5pdGllcyBhdmFpbGFibGUgYXQgdmVudWU6Wy9iXSAnLmlmRW1wdHkoJF9QT1NUWydhbWVuaXRpZXMnXSwgIk5vIGFtZW5pdGllcyBmb3IgdGhpcyBldmVudC4iKS4nCgkJCQlbYl1Db21tZW50czpbL2JdICcuaWZFbXB0eSgkX1BPU1RbJ2NvbW1lbnRzJ10sICJObyBjb21tZW50cyBmb3IgdGhpcyBldmVudC4iKS4nCgkJCQlbYl1SZWZlcnJlZCBieTpbL2JdICcuaWZFbXB0eSgkX1BPU1RbJ3JlZmVycmVkJ10sICJOb3QgYXZhaWxhYmxlIikuJwoKCQkJCVtiXVt1XVNpZ24gVXAgLyBFdmVudCBSb3N0ZXI6Wy91XVsvYl0KCgkJCQlbdXJsXWh0dHBzOi8vZmw1MDFzdC5jb20vdHJvb3AtdHJhY2tlci9pbmRleC5waHA/ZXZlbnQ9JyAuICRldmVudElkIC4gJ1svdXJsXSc7CgoJCQkJLy8gT25seSBjcmVhdGUgdGhyZWFkIGlmIHdlIGNhbiBhbmQgYWRtaW4gYWxsb3dzCgkJCQlpZigkX1BPU1RbJ3Bvc3RUb0JvYXJkcyddID09IDEgJiYgJF9QT1NUWydzcXVhZG0nXSAhPSAwKQoJCQkJewoJCQkJCS8vIENyZWF0ZSB0aHJlYWQgb24gZm9ydW0KCQkJCQkkdGhyZWFkID0gY3JlYXRlVGhyZWFkKCRzcXVhZEFycmF5W2ludHZhbCgkX1BPU1RbJ3NxdWFkbSddIC0gMSldWydldmVudEZvcnVtJ10sIGRhdGUoIm0vZC95Iiwgc3RydG90aW1lKCRkYXRlMSkpIC4gIiAiIC4gJF9QT1NUWydldmVudE5hbWUnXSwgJHRocmVhZF9ib2R5KTsKCgkJCQkJLy8gTG9jayB0aGUgdGhyZWFkCgkJCQkJbG9ja1RocmVhZCgkdGhyZWFkWyd0aHJlYWQnXVsndGhyZWFkX2lkJ10pOwoKCQkJCQkvLyBVcGRhdGUgZXZlbnQgd2l0aCB0aHJlYWQgYW5kIHBvc3QgSURzCgkJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCB0aHJlYWRfaWQgPSAnIi4kdGhyZWFkWyd0aHJlYWQnXVsndGhyZWFkX2lkJ10uIicsIHBvc3RfaWQgPSAnIi4kdGhyZWFkWyd0aHJlYWQnXVsnbGFzdF9wb3N0X2lkJ10uIicgV0hFUkUgaWQgPSAnIi4kZXZlbnRJZC4iJyIpOwoJCQkJfQoJCQl9CgkJCQoJCQkvLyBMb29wIHRocm91Z2ggc2hpZnRzCgkJCWZvcmVhY2goJF9QT1NUIGFzICRrZXkgPT4gJHZhbHVlKQoJCQl7CgkJCQkvLyBDaGVjayBpZiBjb250YWlucyAic2hpZnRwb3N0IgoJCQkJaWYoc3Ryc3RyKCRrZXksICdzaGlmdHBvc3QnKSkKCQkJCXsKCQkJCQkvLyBHZXQgcGFpciB2YWx1ZSBmcm9tIHNoaWZ0cG9zdAoJCQkJCSRwYWlyID0gJHZhbHVlOwoJCQkJCQoJCQkJCS8vIFZlcmlmeSB0aGVyZSBpcyBhIHZhbHVlIGluIGJvdGggZGF0ZXMgYmVmb3JlIGluc2VydGluZyBkYXRhCgkJCQkJaWYoY2xlYW5JbnB1dCgkX1BPU1RbJ2FkZGRhdGVTdGFydCcgLiAkcGFpcl0pICE9ICIiICYmIGNsZWFuSW5wdXQoJF9QT1NUWydhZGRkYXRlRW5kJyAuICRwYWlyXSkgIT0gIiIpCgkJCQkJewoJCQkJCQkvLyBDbGVhbiBkYXRlIGlucHV0CgkJCQkJCSRkYXRlMSA9IGRhdGUoJ1ktbS1kIEg6aTpzJywgc3RydG90aW1lKGNsZWFuSW5wdXQoJF9QT1NUWydhZGRkYXRlU3RhcnQnIC4gJHBhaXJdKSkpOwoJCQkJCQkkZGF0ZTIgPSBkYXRlKCdZLW0tZCBIOmk6cycsIHN0cnRvdGltZShjbGVhbklucHV0KCRfUE9TVFsnYWRkZGF0ZUVuZCcgLiAkcGFpcl0pKSk7CgoJCQkJCQkvLyBTZXQgdXAgYWRkIHRvIHF1ZXJ5CgkJCQkJCSRhZGRUb1F1ZXJ5MSA9ICIiOwoJCQkJCQkkYWRkVG9RdWVyeTIgPSAiIjsKCgkJCQkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQkJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCQkJCXsKCQkJCQkJCS8vIEFkZAoJCQkJCQkJJGFkZFRvUXVlcnkxIC49ICIiLiRjbHViX3ZhbHVlWydkYkxpbWl0J10uIiwgIjsKCQkJCQkJCSRhZGRUb1F1ZXJ5MiAuPSAiJyIuY2xlYW5JbnB1dCgkX1BPU1RbJGNsdWJfdmFsdWVbJ2RiTGltaXQnXV0pLiInLCAiOwoJCQkJCQl9CgkJCQkJCgkJCQkJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCQkJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIGV2ZW50cyAobmFtZSwgdmVudWUsIGRhdGVTdGFydCwgZGF0ZUVuZCwgd2Vic2l0ZSwgbnVtYmVyT2ZBdHRlbmQsIHJlcXVlc3RlZE51bWJlciwgcmVxdWVzdGVkQ2hhcmFjdGVyLCBzZWN1cmVDaGFuZ2luZywgYmxhc3RlcnMsIGxpZ2h0c2FiZXJzLCBwYXJraW5nLCBtb2JpbGl0eSwgYW1lbml0aWVzLCByZWZlcnJlZCwgY29tbWVudHMsIGxvY2F0aW9uLCBsYWJlbCwgbGltaXRlZEV2ZW50LCBsaW1pdFRvLCBsaW1pdDUwMXN0LCBsaW1pdFRvdGFsVHJvb3BlcnMsICIuJGFkZFRvUXVlcnkxLiJzcXVhZCwgbGluaykgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnROYW1lJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRWZW51ZSddKS4iJywgJyIuJGRhdGUxLiInLCAnIi4kZGF0ZTIuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWyd3ZWJzaXRlJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbnVtYmVyT2ZBdHRlbmQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydyZXF1ZXN0ZWROdW1iZXInXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydyZXF1ZXN0ZWRDaGFyYWN0ZXInXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydzZWN1cmUnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydibGFzdGVycyddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpZ2h0c2FiZXJzJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsncGFya2luZyddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ21vYmlsaXR5J10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnYW1lbml0aWVzJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVmZXJyZWQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb21tZW50cyddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xvY2F0aW9uJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGFiZWwnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaW1pdGVkRXZlbnQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydlcmEnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaW1pdDUwMXN0J10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGltaXRUb3RhbFRyb29wZXJzJ10pLiInLCAiLiRhZGRUb1F1ZXJ5Mi4iJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NxdWFkbSddKS4iJywgJyIuJGV2ZW50SWQuIicpIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgoJCQkJCQkvLyBMYXN0IElECgkJCQkJCSRsYXN0X2lkID0gJGNvbm4tPmluc2VydF9pZDsKCgkJCQkJCS8vIE1ha2UgdGhyZWFkIGJvZHkKCQkJCQkJJHRocmVhZF9ib2R5ID0gJwoJCQkJCQlbYl1FdmVudCBOYW1lOlsvYl0gJy4kX1BPU1RbJ2V2ZW50TmFtZSddLicKCQkJCQkJW2JdVmVudWU6Wy9iXSAnLiRfUE9TVFsnZXZlbnRWZW51ZSddLicKCQkJCQkJW2JdVmVudWUgYWRkcmVzczpbL2JdICcuJF9QT1NUWydsb2NhdGlvbiddLicKCQkJCQkJW2JdRXZlbnQgU3RhcnQ6Wy9iXSAnLmRhdGUoIm0vZC95IGg6aSBBIiwgc3RydG90aW1lKCRkYXRlMSkpLicKCQkJCQkJW2JdRXZlbnQgRW5kOlsvYl0gJy5kYXRlKCJtL2QveSBoOmkgQSIsIHN0cnRvdGltZSgkZGF0ZTIpKS4nCgkJCQkJCVtiXUV2ZW50IFdlYnNpdGU6Wy9iXSAnLiRfUE9TVFsnd2Vic2l0ZSddLicKCQkJCQkJW2JdRXhwZWN0ZWQgbnVtYmVyIG9mIGF0dGVuZGVlczpbL2JdICcuJF9QT1NUWydudW1iZXJPZkF0dGVuZCddLicKCQkJCQkJW2JdUmVxdWVzdGVkIG51bWJlciBvZiBjaGFyYWN0ZXJzOlsvYl0gJy4kX1BPU1RbJ3JlcXVlc3RlZE51bWJlciddLicKCQkJCQkJW2JdUmVxdWVzdGVkIGNoYXJhY3RlciB0eXBlczpbL2JdICcuJF9QT1NUWydyZXF1ZXN0ZWRDaGFyYWN0ZXInXS4nCgkJCQkJCVtiXVNlY3VyZSBjaGFuZ2luZy9zdGFnaW5nIGFyZWE6Wy9iXSAnLnllc05vKCRfUE9TVFsnc2VjdXJlJ10pLicKCQkJCQkJW2JdQ2FuIHRyb29wZXJzIGNhcnJ5IGJsYXN0ZXJzOlsvYl0gJy55ZXNObygkX1BPU1RbJ2JsYXN0ZXJzJ10pLicKCQkJCQkJW2JdQ2FuIHRyb29wZXJzIGNhcnJ5L2JyaW5nIHByb3BzIGxpa2UgbGlnaHRzYWJlcnMgYW5kIHN0YWZmczpbL2JdICcueWVzTm8oJF9QT1NUWydsaWdodHNhYmVycyddKS4nCgkJCQkJCVtiXUlzIHBhcmtpbmcgYXZhaWxhYmxlOlsvYl0gJy55ZXNObygkX1BPU1RbJ3BhcmtpbmcnXSkuJwoJCQkJCQlbYl1JcyB2ZW51ZSBhY2Nlc3NpYmxlIHRvIHRob3NlIHdpdGggbGltaXRlZCBtb2JpbGl0eTpbL2JdICcueWVzTm8oJF9QT1NUWydtb2JpbGl0eSddKS4nCgkJCQkJCVtiXUFtZW5pdGllcyBhdmFpbGFibGUgYXQgdmVudWU6Wy9iXSAnLmlmRW1wdHkoJF9QT1NUWydhbWVuaXRpZXMnXSwgIk5vIGFtZW5pdGllcyBmb3IgdGhpcyBldmVudC4iKS4nCgkJCQkJCVtiXUNvbW1lbnRzOlsvYl0gJy5pZkVtcHR5KCRfUE9TVFsnY29tbWVudHMnXSwgIk5vIGNvbW1lbnRzIGZvciB0aGlzIGV2ZW50LiIpLicKCQkJCQkJW2JdUmVmZXJyZWQgYnk6Wy9iXSAnLmlmRW1wdHkoJF9QT1NUWydyZWZlcnJlZCddLCAiTm90IGF2YWlsYWJsZSIpLicKCgkJCQkJCVtiXVt1XVNpZ24gVXAgLyBFdmVudCBSb3N0ZXI6Wy91XVsvYl0KCgkJCQkJCVt1cmxdaHR0cHM6Ly9mbDUwMXN0LmNvbS90cm9vcC10cmFja2VyL2luZGV4LnBocD9ldmVudD0nIC4gJGV2ZW50SWQgLiAnWy91cmxdJzsKCgkJCQkJCS8vIE9ubHkgY3JlYXRlIHRocmVhZCBpZiB3ZSBjYW4gYW5kIGFkbWluIGFsbG93cwoJCQkJCQlpZigkX1BPU1RbJ3Bvc3RUb0JvYXJkcyddID09IDEgJiYgJF9QT1NUWydzcXVhZG0nXSAhPSAwKQoJCQkJCQl7CgkJCQkJCQkvLyBDcmVhdGUgdGhyZWFkIG9uIGZvcnVtCgkJCQkJCQkkdGhyZWFkID0gY3JlYXRlVGhyZWFkKCRzcXVhZEFycmF5W2ludHZhbCgkX1BPU1RbJ3NxdWFkbSddIC0gMSldWydldmVudEZvcnVtJ10sIGRhdGUoIm0vZC95Iiwgc3RydG90aW1lKCRkYXRlMSkpIC4gIiAiIC4gJF9QT1NUWydldmVudE5hbWUnXSwgJHRocmVhZF9ib2R5KTsKCgkJCQkJCQkvLyBMb2NrIHRoZSB0aHJlYWQKCQkJCQkJCWxvY2tUaHJlYWQoJHRocmVhZFsndGhyZWFkJ11bJ3RocmVhZF9pZCddKTsKCgkJCQkJCQkvLyBVcGRhdGUgZXZlbnQKCQkJCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgdGhyZWFkX2lkID0gJyIuJHRocmVhZFsndGhyZWFkJ11bJ3RocmVhZF9pZCddLiInLCBwb3N0X2lkID0gJyIuJHRocmVhZFsndGhyZWFkJ11bJ2xhc3RfcG9zdF9pZCddLiInIFdIRVJFIGlkID0gJyIuJGxhc3RfaWQuIiciKTsKCQkJCQkJfQoKCQkJCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQkJCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGFkZGVkIGFuIGV2ZW50OiBbIiAuICRsYXN0X2lkIC4gIl1bIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudE5hbWUnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMTMsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIGV2ZW50cyBXSEVSRSBpZCA9ICciLiRsYXN0X2lkLiInIikpOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGFkZGVkIGFuIGV2ZW50OiBbIiAuICRldmVudElkIC4gIl1bIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudE5hbWUnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMTMsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIGV2ZW50cyBXSEVSRSBpZCA9ICciLiRldmVudElkLiInIikpOwoKCQkJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICdzdWNjZXNzJywgJ2RhdGEnID0+ICdFdmVudCBjcmVhdGVkIScpOwoJCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7CgkJfQoJCWVsc2UKCQl7CgkJCSRhcnJheSA9IGFycmF5KCdzdWNjZXNzJyA9PiAnZmFpbGVkJywgJ2RhdGEnID0+ICdTb21lIGZpZWxkcyBhcmUgbWlzc2luZyEnKTsKCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCX0KCX0KfQoKLy8gRWRpdCBFdmVudAppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gImVkaXRldmVudCIgJiYgbG9nZ2VkSW4oKSAmJiBpc0FkbWluKCkpCnsKCS8vIEVkaXQgYSB0cm9vcGVyIGZyb20gcm9zdGVyCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEVkaXRSb3N0ZXInXSkpCgl7CQoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50X3NpZ25fdXAgU0VUIGNvc3R1bWUgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZVZhbFNlbGVjdCcgLiAkX1BPU1RbJ3Ryb29wZXJTZWxlY3RFZGl0J10gLiAnJ10pLiInLCBjb3N0dW1lX2JhY2t1cCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lVmFsJyAuICRfUE9TVFsndHJvb3BlclNlbGVjdEVkaXQnXSAuICcnXSkuIicsIHN0YXR1cyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzdGF0dXNWYWwnIC4gJF9QT1NUWyd0cm9vcGVyU2VsZWN0RWRpdCddIC4gJyddKS4iJyBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BlclNlbGVjdEVkaXQnXSkuIicgQU5EIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyBBTkQgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc2lnbmlkJ10pLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgoJCS8vIElmIHNldCBhcyBhdHRlbmRlZCwgY2hlY2sgdHJvb3BlciBjb3VudHMKCQlpZihjbGVhbklucHV0KCRfUE9TVFsnc3RhdHVzVmFsJyAuICRfUE9TVFsndHJvb3BlclNlbGVjdEVkaXQnXSAuICcnXSkgPT0gMykKCQl7CgkJCS8vIENoZWNrIHRyb29wcyBmb3Igbm90aWZpY2F0aW9uCgkJCXRyb29wQ2hlY2soY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJTZWxlY3RFZGl0J10pKTsKCQl9CgoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGVkaXRlZCBldmVudCBJRDogWyIgLiBjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKSAuICJdIGJ5IHVwZGF0aW5nIHRyb29wZXIgSUQ6IFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJTZWxlY3RFZGl0J10pIC4gIl0uIiwgY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLCAxNCwgY29udmVydERhdGFUb0pTT04oIlNFTEVDVCAqIEZST00gZXZlbnRfc2lnbl91cCBXSEVSRSB0cm9vcGVyaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BlclNlbGVjdEVkaXQnXSkuIicgQU5EIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyBBTkQgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc2lnbmlkJ10pLiInIikpOwoKCQkvLyBTZW5kIGJhY2sgZGF0YQoJCSRhcnJheSA9IGFycmF5KCdzdWNjZXNzJyA9PiAnc3VjY2VzcycsICdpZCcgPT4gJF9TRVNTSU9OWydpZCddKTsKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9CgoJLy8gQWRkIGEgdHJvb3BlciB0byByb3N0ZXIKCWlmKGlzc2V0KCRfUE9TVFsndHJvb3BSb3N0ZXJGb3JtQWRkJ10pKQoJewoJCS8vIERvZXMgdGhpcyB0cm9vcGVyIGFscmVhZHkgZXhpc3QgaW4gcm9zdGVyPwoJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIGV2ZW50X3NpZ25fdXAgV0hFUkUgdHJvb3BlcmlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJTZWxlY3QnXSkuIicgQU5EIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKS4iJyBBTkQgdHJvb3BlcmlkICE9ICIucGxhY2Vob2xkZXIuIiI7CgkJJGkgPSAwOwoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIEluY3JlbWVudAoJCQkJJGkrKzsKCQkJfQoJCX0KCQkKCQkvLyBGaW5hbCBjaGVjayBiZWZvcmUgYWRkaW5nIHRvIHJvc3RlcgoJCWlmKGNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lJ10pICE9ICJudWxsIiAmJiBjbGVhbklucHV0KCRfUE9TVFsnc3RhdHVzJ10pICE9ICJudWxsIiAmJiAkaSA9PSAwKQoJCXsKCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCSRjb25uLT5xdWVyeSgiSU5TRVJUIElOVE8gZXZlbnRfc2lnbl91cCAodHJvb3BlcmlkLCB0cm9vcGlkLCBjb3N0dW1lLCBjb3N0dW1lX2JhY2t1cCwgc3RhdHVzKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0J10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsndHJvb3BpZCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWUnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lYmFja3VwJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3RhdHVzJ10pLiInKSIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQkkbGFzdF9pZCA9ICRjb25uLT5pbnNlcnRfaWQ7CgkJCQoJCQkvLyBJZiBzdGF0dXMgaXMgYXR0ZW5kZWQKCQkJaWYoY2xlYW5JbnB1dCgkX1BPU1RbJ3N0YXR1cyddKSA9PSAzKQoJCQl7CgkJCQkvLyBDaGVjayB0cm9vcHMgZm9yIG5vdGlmaWNhdGlvbgoJCQkJdHJvb3BDaGVjayhjbGVhbklucHV0KCRfUE9TVFsndHJvb3BlclNlbGVjdCddKSk7CgkJCX0KCQkJCgkJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBhZGRlZCB0cm9vcGVyIElEIFsiLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0J10pLiJdIHRvIGV2ZW50IElEIFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29waWQnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMTUsIGNvbnZlcnREYXRhVG9KU09OKCJTRUxFQ1QgKiBGUk9NIGV2ZW50X3NpZ25fdXAgV0hFUkUgaWQgPSAnIi4kbGFzdF9pZC4iJyIpKTsKCQkJCgkJCS8vIFNlbmQgYmFjayBkYXRhCgkJCSRhcnJheSA9IGFycmF5KCdzdWNjZXNzJyA9PiAnc3VjY2VzcycsICdzaWduaWQnID0+ICRsYXN0X2lkKTsKCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCX0KCX0KCgkvLyBFdmVudCBzdWJtaXR0ZWQgZm9yIGRlbGV0aW9uLi4uCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdERlbGV0ZSddKSkKCXsKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBkZWxldGVkIGV2ZW50IElEOiBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDE2LCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSBldmVudHMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyIpKTsKCgkJLy8gR2V0IG51bWJlciBvZiBldmVudHMgd2l0aCBsaW5rCgkJJGdldE51bU9mTGlua3MgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCBpZCBGUk9NIGV2ZW50cyBXSEVSRSBsaW5rID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCQkKCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIGV2ZW50cyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIik7CgoJCS8vIERlbGV0ZSBmcm9tIHNpZ24gdXBzIC0gZXZlbnRfc2lnbl91cAoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gZXZlbnRfc2lnbl91cCBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCgkJLy8gRGVsZXRlIHRocmVhZCBvbiBmb3J1bQoJCWRlbGV0ZVRocmVhZChnZXRFdmVudFRocmVhZElEKGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pKSwgdHJ1ZSk7CgkJCgkJLy8gRGVsZXRlIGZyb20gZXZlbnRfbm90aWZpY2F0aW9ucwoJCSRjb25uLT5xdWVyeSgiREVMRVRFIEZST00gZXZlbnRfbm90aWZpY2F0aW9ucyBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCQkKCQkvLyBEZWxldGUgZnJvbSBub3RpZmljYXRpb25fY2hlY2sKCQkkY29ubi0+cXVlcnkoIkRFTEVURSBGUk9NIG5vdGlmaWNhdGlvbl9jaGVjayBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCQkKCQkvLyBJZiB0aGlzIGV2ZW50IGlzIHRoZSBtYWluIGxpbmsgdG8gb3RoZXJzCgkJaWYoJGdldE51bU9mTGlua3MtPm51bV9yb3dzID4gMCkKCQl7CgkJCS8vIEdldCBsb3dlc3QgZXZlbnQgZm9yIGxpbmsgY2hhbmdlCgkJCSRnZXRMaW5rQ2hhbmdlID0gJGNvbm4tPnF1ZXJ5KCJTRUxFQ1QgaWQgRlJPTSBldmVudHMgV0hFUkUgbGluayA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIE9SREVSIEJZIGlkIEFTQyBMSU1JVCAxIik7CgkJCSRnZXRMaW5rVmFsID0gJGdldExpbmtDaGFuZ2UtPmZldGNoX3JvdygpWzBdOwoJCQkKCQkJLy8gU2V0IGxpbmsgdG8gbmV3IG1haW4gZXZlbnQKCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCBsaW5rID0gJyIuJGdldExpbmtWYWwuIicgV0hFUkUgbGluayA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIik7CgkJCQoJCQkvLyBSZW1vdmUgbGluayBmcm9tIG1haW4gZXZlbnQKCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCBsaW5rID0gJzAnIFdIRVJFIGlkID0gJyIuJGdldExpbmtWYWwuIiciKTsKCQl9Cgl9CgkKCS8vIEV2ZW50IHN1Ym1pdHRlZCBmb3IgbG9jay4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRMb2NrJ10pKQoJewoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgY2xvc2VkID0gJzMnIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCQkKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBsb2NrZWQgZXZlbnQgSUQ6IFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSk7Cgl9CgoJLy8gRXZlbnQgc3VibWl0dGVkIGZvciBjYW5jZWxhdGlvbi4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRDYW5jZWwnXSkpCgl7CgkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCBjbG9zZWQgPSAnMicgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyIpOwoJCQoJCS8vIFByZXBhcmUgbm90aWZpY2F0aW9uCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gZXZlbnRfc2lnbl91cCBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciOwoJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCXsKCQkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJCXsKCQkJCS8vIEluc2VydCBpbnRvIG5vdGlmaWNhdGlvbl9jaGVjawoJCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBub3RpZmljYXRpb25fY2hlY2sgKHRyb29waWQsIHRyb29wZXJpZCwgdHJvb3BzdGF0dXMpIFZBTFVFUyAoJyIuJGRiLT50cm9vcGlkLiInLCAnIi4kZGItPnRyb29wZXJpZC4iJywgMikiKTsKCQkJfQoJCX0KCgkJLy8gRGVsZXRlIGZyb20gc2lnbiB1cHMgLSBldmVudF9zaWduX3VwCgkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSBldmVudF9zaWduX3VwIFdIRVJFIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyIpOwoJCQoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGNhbmNlbGVkIGV2ZW50IElEOiBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkpOwoJfQoKCS8vIEV2ZW50IHN1Ym1pdHRlZCBmb3IgY29tcGxldGlvbi4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRGaW5pc2gnXSkpCgl7CgkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCBjbG9zZWQgPSAnMScgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyIpOwoJCQoJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQlzZW5kTm90aWZpY2F0aW9uKGdldE5hbWUoJF9TRVNTSU9OWydpZCddKSAuICIgaGFzIGZpbmlzaGVkIGV2ZW50IElEOiBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkpOwoJfQoJCgkvLyBFdmVudCBzdWJtaXR0ZWQgZm9yIG9wZW4uLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0T3BlbiddKSkKCXsKCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkkY29ubi0+cXVlcnkoIlVQREFURSBldmVudHMgU0VUIGNsb3NlZCA9ICcwJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIik7CgkJCgkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCXNlbmROb3RpZmljYXRpb24oZ2V0TmFtZSgkX1NFU1NJT05bJ2lkJ10pIC4gIiBoYXMgcmVvcGVuZWQgZXZlbnQgSUQ6IFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSk7Cgl9CgkKCS8vIENoYXJpdHkgc3VibWl0dGVkIGZvciBldmVudC4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRDaGFyaXR5J10pKQoJewoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgbW9uZXlSYWlzZWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY2hhcml0eSddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIik7CgkJCgkJLy8gU2VuZCBub3RpZmljYXRpb24gdG8gY29tbWFuZCBzdGFmZgoJCXNlbmROb3RpZmljYXRpb24oZ2V0TmFtZSgkX1NFU1NJT05bJ2lkJ10pIC4gIiBoYXMgc2V0IGNoYXJpdHkgcmFpc2VkIHRvIFsiLmNsZWFuSW5wdXQoJF9QT1NUWydjaGFyaXR5J10pLiJdIG9uIGV2ZW50IElEOiBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDE3LCBqc29uX2VuY29kZShhcnJheSgiaWQiID0+IGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLCAibW9uZXlSYWlzZWQiID0+IGNsZWFuSW5wdXQoJF9QT1NUWydjaGFyaXR5J10pKSkpOwoJfQoKCS8vIEFkdmFuY2VkIG9wdGlvbnMgc2V0Li4uCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEFkdmFuY2VkJ10pKQoJewoJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgdGhyZWFkX2lkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3RocmVhZElEQSddKS4iJywgcG9zdF9pZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwb3N0SURBJ10pLiInIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuIiciKTsKCQkKCQkvLyBTZW5kIG5vdGlmaWNhdGlvbiB0byBjb21tYW5kIHN0YWZmCgkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBzZXQgdGhyZWFkIElEIHRvIFsiLmNsZWFuSW5wdXQoJF9QT1NUWyd0aHJlYWRJREEnXSkuIl0sIHBvc3QgSUQgdG8gWyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Bvc3RJREEnXSkuIl0gb24gZXZlbnQgSUQ6IFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkgLiAiXSIsIGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgMjYsIGpzb25fZW5jb2RlKGFycmF5KCJpZCIgPT4gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSksICJ0aHJlYWRfaWQiID0+IGNsZWFuSW5wdXQoJF9QT1NUWyd0aHJlYWRJREEnXSksICJwb3N0X2lkIiA9PiBjbGVhbklucHV0KCRfUE9TVFsncG9zdElEQSddKSkpKTsKCX0KCgkvLyBSZW1vdmUgdHJvb3BlciBmcm9tIHJvc3RlcgoJaWYoaXNzZXQoJF9QT1NUWydyZW1vdmV0cm9vcGVyJ10pKQoJewoJCWlmKGlzc2V0KCRfUE9TVFsndHJvb3BlclNlbGVjdEVkaXQnXSkgJiYgJF9QT1NUWyd0cm9vcGVyU2VsZWN0RWRpdCddID49IDApCgkJewoJCQkkYXJyYXkgPSBhcnJheSgnc3VjY2VzcycgPT4gJ3RydWUnLCAnZGF0YScgPT4gJ1Ryb29wZXIgcmVtb3ZlZCEnKTsKCQkJCgkJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyByZW1vdmVkIHRyb29wZXIgSUQgWyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3Ryb29wZXJTZWxlY3RFZGl0J10pLiJdIG9uIGV2ZW50IElEOiBbIiAuIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDE4LCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSBldmVudF9zaWduX3VwIFdIRVJFIHRyb29wZXJpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0RWRpdCddKS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIEFORCBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzaWduaWQnXSkuIiciKSk7CgoJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJJGNvbm4tPnF1ZXJ5KCJERUxFVEUgRlJPTSBldmVudF9zaWduX3VwIFdIRVJFIHRyb29wZXJpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0RWRpdCddKS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIEFORCBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzaWduaWQnXSkuIiciKTsKCQl9CgkJZWxzZQoJCXsKCQkJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICdmYWxzZScsICdkYXRhJyA9PiAnUGxlYXNlIHNlbGVjdCBhIHRyb29wZXIuJyk7CgkJfQoKCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7Cgl9CgoJLy8gUm9zdGVyCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdFJvc3RlciddKSkKCXsKCQkvLyBBcnJheSBvZiBjb3N0dW1lcwoJCSRjb3N0dW1lc05hbWUgPSBhcnJheSgpOwoJCSRjb3N0dW1lc0lEID0gYXJyYXkoKTsKCQkKCQkvLyBEaXNwbGF5IGNvc3R1bWVzCgkJJHF1ZXJ5MiA9ICJTRUxFQ1QgKiBGUk9NIGNvc3R1bWVzIjsKCQkkbGltaXRUb0dldCA9ICRjb25uLT5xdWVyeSgiU0VMRUNUIGxpbWl0VG8gRlJPTSBldmVudHMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCSRsaW1pdFRvR2V0VmFsID0gJGxpbWl0VG9HZXQtPmZldGNoX3JvdygpOwoJCQoJCS8vIElmIGxpbWl0ZWQgdG8gY2VydGFpbiBjb3N0dW1lcywgb25seSBzaG93IGNlcnRhaW4gY29zdHVtZXMuLi4KCQlpZigkbGltaXRUb0dldFZhbFswXSA8IDQpCgkJewoJCQkkcXVlcnkyIC49ICIgV0hFUkUgZXJhID0gJyIuJGxpbWl0VG9HZXRWYWxbMF0uIicgT1IgZXJhID0gJzQnIjsKCQl9CgkJCgkJJHF1ZXJ5MiAuPSAiIE9SREVSIEJZIEZJRUxEKGNvc3R1bWUsICIuJG1haW5Db3N0dW1lcy4iKSBERVNDLCBjb3N0dW1lIjsKCQkKCQlpZiAoJHJlc3VsdDIgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeTIpKQoJCXsKCQkJd2hpbGUgKCRkYjIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQyKSkKCQkJewoJCQkJYXJyYXlfcHVzaCgkY29zdHVtZXNJRCwgJGRiMi0+aWQpOwoJCQkJYXJyYXlfcHVzaCgkY29zdHVtZXNOYW1lLCAkZGIyLT5jb3N0dW1lKTsKCQkJfQoJCX0KCQkKCQkvLyBDb252ZXJ0IHRvIEphdmFTY3JpcHQgYXJyYXkKCQllY2hvICcKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CgoJCQl2YXIgakFycmF5MSA9ICcgLiBqc29uX2VuY29kZSgkY29zdHVtZXNOYW1lKSAuICc7CgkJCXZhciBqQXJyYXkyID0gJyAuIGpzb25fZW5jb2RlKCRjb3N0dW1lc0lEKSAuICc7CgkJPC9zY3JpcHQ+JzsKCQkJCQkJCQoJCS8vIExvYWQgdXNlcnMgYXNzaWduZWQgdG8gZXZlbnQKCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBldmVudF9zaWduX3VwIFdIRVJFIHRyb29waWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZCddKS4iJyBPUkRFUiBCWSBpZCBBU0MiOwoJCSRpID0gMDsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkvLyBGaXJzdCBhZGQgdGhpcyB0byBtYWtlIGEgbGlzdAoJCQkJaWYoJGkgPT0gMCkKCQkJCXsKCQkJCQllY2hvICcKCQkJCQk8Zm9ybSBhY3Rpb249InByb2Nlc3MucGhwP2RvPWVkaXRldmVudCIgbWV0aG9kPSJQT1NUIiBuYW1lPSJ0cm9vcFJvc3RlckZvcm0iIGlkPSJ0cm9vcFJvc3RlckZvcm0iPgoJCQkJCQk8ZGl2IHN0eWxlPSJvdmVyZmxvdy14OiBhdXRvOyI+CgkJCQkJCTx0YWJsZSBib3JkZXI9IjEiIG5hbWU9InJvc3RlclRhYmxlIiBpZD0icm9zdGVyVGFibGUiPgoJCQkJCQkJPHRyPgoJCQkJCQkJCTx0aD5TZWxlY3Rpb248L3RoPgk8dGg+VHJvb3BlciBUS0lEIC8gTmFtZTwvdGQ+CTx0aD5Ucm9vcGVyIENvc3R1bWU8L3RoPgk8dGg+VHJvb3BlciBCYWNrdXAgQ29zdHVtZTwvdGg+CTx0aD5Ucm9vcGVyIFN0YXR1czwvdGg+JzsKCQkJCX0KCgkJCQkvLyBMaXN0IHRyb29wZXJzCgkJCQllY2hvICcKCQkJCTx0ciBuYW1lPSJyb3N0ZXJfJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj4KCQkJCQk8dGQ+CgkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InRraWQiIHNpZ25pZD0iJy4kZGItPmlkLiciIHZhbHVlID0gIicuZ2V0VEtOdW1iZXIoJGRiLT50cm9vcGVyaWQpLiciIC8+CgkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InRyb29wZXJuYW1lIiBzaWduaWQ9IicuJGRiLT5pZC4nIiB2YWx1ZSA9ICInLmdldE5hbWUoY2xlYW5JbnB1dCgkZGItPnRyb29wZXJpZCkpLiciIC8+CgkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImV2ZW50SWQiIHNpZ25pZD0iJy4kZGItPmlkLiciIHZhbHVlID0gIicuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWQnXSkuJyIgLz4KCQkJCQkJPGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJ0cm9vcGVyU2VsZWN0RWRpdCIgc2lnbmlkPSInLiRkYi0+aWQuJyIgdmFsdWU9IicuJGRiLT50cm9vcGVyaWQuJyIgc2lnbmlkPSInLiRkYi0+aWQuJyIgLz4KCQkJCQk8L3RkPgoKCQkJCQk8dGQ+CgkJCQkJCTxkaXYgbmFtZT0idGtudW1iZXIxJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj48YSBocmVmPSJpbmRleC5waHA/cHJvZmlsZT0nLiRkYi0+dHJvb3BlcmlkLiciIHRhcmdldD0iX2JsYW5rIj4nLnJlYWRUS051bWJlcihnZXRUS051bWJlcigkZGItPnRyb29wZXJpZCksIGdldFNxdWFkSUQoJGRiLT50cm9vcGVyaWQpKS4nIC0gJy5nZXROYW1lKCRkYi0+dHJvb3BlcmlkKS4nPC9hPjwvZGl2PgoJCQkJCTwvdGQ+CgoJCQkJCTx0ZD4KCQkJCQkJPGRpdiBuYW1lPSJjb3N0dW1lMScuJGRiLT50cm9vcGVyaWQuJyIgc2lnbmlkPSInLiRkYi0+aWQuJyI+Jy5pZkVtcHR5KGdldENvc3R1bWUoJGRiLT5jb3N0dW1lKSwgIk4vQSIpLic8L2Rpdj4KCQkJCQkJPGRpdiBuYW1lPSJjb3N0dW1lMicuJGRiLT50cm9vcGVyaWQuJyIgc2lnbmlkPSInLiRkYi0+aWQuJyIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgoJCQkJCQkJPHNlbGVjdCBuYW1lPSJjb3N0dW1lVmFsU2VsZWN0Jy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj4nOwoJCQkJCQkJCgkJCQkJCQkvLyBBcnJheSBjb3VudAoJCQkJCQkJJGEgPSAwOwoKCQkJCQkJCS8vIERpc3BsYXkgY29zdHVtZXMJCgkJCQkJCQlmb3JlYWNoKCRjb3N0dW1lc05hbWUgYXMgJGtleSkKCQkJCQkJCXsKCQkJCQkJCQkvLyBTZWxlY3QgdGhlIGNvc3R1bWUgdGhlIHVzZXIgY2hvc2UgdG8gd2VhcgoJCQkJCQkJCWlmKCRkYi0+Y29zdHVtZSA9PSBpbnR2YWwoJGNvc3R1bWVzSURbJGFdKSkKCQkJCQkJCQl7CgkJCQkJCQkJCWVjaG8gJzxvcHRpb24gdmFsdWU9IicuJGNvc3R1bWVzSURbJGFdLiciIFNFTEVDVEVEPicuJGtleS4nPC9vcHRpb24+JzsKCQkJCQkJCQl9CgkJCQkJCQkJZWxzZQoJCQkJCQkJCXsKCQkJCQkJCQkJZWNobyAnPG9wdGlvbiB2YWx1ZT0iJy4kY29zdHVtZXNJRFskYV0uJyI+Jy4ka2V5Lic8L29wdGlvbj4nOwoJCQkJCQkJCX0KCQkJCQkJCQkKCQkJCQkJCQkkYSsrOwoJCQkJCQkJfQoKCQkJCQkJCWVjaG8gJwoJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCTwvZGl2PgoJCQkJCTwvdGQ+CgoJCQkJCTx0ZD4KCQkJCQkJPGRpdiBuYW1lPSJiYWNrdXAxJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj4nLmlmRW1wdHkoZ2V0Q29zdHVtZSgkZGItPmNvc3R1bWVfYmFja3VwKSwgIk4vQSIpLic8L2Rpdj4KCQkJCQkJPGRpdiBuYW1lPSJiYWNrdXAyJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CgoJCQkJCQk8c2VsZWN0IG5hbWU9ImNvc3R1bWVWYWwnLiRkYi0+dHJvb3BlcmlkLiciIHNpZ25pZD0iJy4kZGItPmlkLiciPic7CgoJCQkJCQkvLyBSZXNldAoJCQkJCQkkYSA9IDA7CgkJCQkJCQoJCQkJCQkvLyBDb3VudCBjb3N0dW1lcwoJCQkJCQkkYyA9IDA7CgkJCQkJCQoJCQkJCQkvLyBDb3VudCBwaWNrZWQKCQkJCQkJJHAgPSAwOwoJCQkJCQkKCQkJCQkJLy8gRGlzcGxheSBjb3N0dW1lcwoJCQkJCQlmb3JlYWNoKCRjb3N0dW1lc05hbWUgYXMgJGtleSkKCQkJCQkJewoJCQkJCQkJLy8gU2VsZWN0IHRoZSBjb3N0dW1lIHRoZSB1c2VyIGNob3NlIHRvIHdlYXIKCQkJCQkJCWlmKCRkYi0+Y29zdHVtZV9iYWNrdXAgPT0gaW50dmFsKCRjb3N0dW1lc0lEWyRhXSkpCgkJCQkJCQl7CgkJCQkJCQkJLy8gVGhlIHVzZXJzIGNvc3R1bWUKCQkJCQkJCQllY2hvICc8b3B0aW9uIHZhbHVlPSInLiRjb3N0dW1lc0lEWyRhXS4nIiBTRUxFQ1RFRD4nLiRrZXkuJzwvb3B0aW9uPic7CgkJCQkJCQkJJHArKzsKCQkJCQkJCX0KCQkJCQkJCWVsc2UKCQkJCQkJCXsKCQkJCQkJCQkvLyBEaXNwbGF5IGNvc3R1bWUKCQkJCQkJCQllY2hvICc8b3B0aW9uIHZhbHVlPSInLiRjb3N0dW1lc0lEWyRhXS4nIj4nLiRrZXkuJzwvb3B0aW9uPic7CgkJCQkJCQl9CgoJCQkJCQkJJGMrKzsKCQkJCQkJCSRhKys7CgkJCQkJCX0KCgkJCQkJCWlmKCRjID09IDAgfHwgJHAgPT0gMCkKCQkJCQkJewoJCQkJCQkJZWNobyAnPG9wdGlvbiB2YWx1ZT0iMCIgU0VMRUNURUQ+Tm9uZTwvb3B0aW9uPic7CgkJCQkJCX0KCgkJCQkJCWVjaG8gJwoJCQkJCQk8L3NlbGVjdD4KCgkJCQkJCTwvZGl2PgoJCQkJCTwvdGQ+CgoJCQkJCTx0ZD4KCQkJCQkJPGRpdiBuYW1lPSJzdGF0dXMxJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj4nLmdldFN0YXR1cygkZGItPnN0YXR1cykuJzwvZGl2PgoJCQkJCQk8ZGl2IG5hbWU9InN0YXR1czInLiRkYi0+dHJvb3BlcmlkLiciIHNpZ25pZD0iJy4kZGItPmlkLiciIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij4KCQkJCQkJCTxzZWxlY3QgbmFtZT0ic3RhdHVzVmFsJy4kZGItPnRyb29wZXJpZC4nIiBzaWduaWQ9IicuJGRiLT5pZC4nIj4KCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIwIiAnLmVjaG9TZWxlY3QoMCwgJGRiLT5zdGF0dXMpLic+R29pbmc8L29wdGlvbj4KCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIxIiAnLmVjaG9TZWxlY3QoMSwgJGRiLT5zdGF0dXMpLic+U3RhbmQgQnk8L29wdGlvbj4KCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyIiAnLmVjaG9TZWxlY3QoMiwgJGRiLT5zdGF0dXMpLic+VGVudGF0aXZlPC9vcHRpb24+CgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMyIgJy5lY2hvU2VsZWN0KDMsICRkYi0+c3RhdHVzKS4nPkF0dGVuZGVkPC9vcHRpb24+CgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNCIgJy5lY2hvU2VsZWN0KDQsICRkYi0+c3RhdHVzKS4nPkNhbmNlbGVkPC9vcHRpb24+CgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNSIgJy5lY2hvU2VsZWN0KDUsICRkYi0+c3RhdHVzKS4nPlBlbmRpbmc8L29wdGlvbj4KCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSI2IiAnLmVjaG9TZWxlY3QoNiwgJGRiLT5zdGF0dXMpLic+Tm90IFBpY2tlZDwvb3B0aW9uPgoJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCTwvZGl2PgoJCQkJCTwvdGQ+CgkJCQk8L3RyPic7CgoJCQkJJGkrKzsKCQkJfQoJCX0KCgkJLy8gSWYgbm90IHVzZXJzIGFzc2lnbmVkCgkJaWYoJGkgPT0gMCkKCQl7CgkJCWVjaG8gJwoJCQk8Zm9ybSBhY3Rpb249InByb2Nlc3MucGhwP2RvPWVkaXRldmVudCIgbWV0aG9kPSJQT1NUIiBuYW1lPSJ0cm9vcFJvc3RlckZvcm0iIGlkPSJ0cm9vcFJvc3RlckZvcm0iIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CgkJCQk8ZGl2IHN0eWxlPSJvdmVyZmxvdy14OiBhdXRvOyI+CgkJCQk8dGFibGUgYm9yZGVyPSIxIiBuYW1lPSJyb3N0ZXJUYWJsZSIgaWQ9InJvc3RlclRhYmxlIj4KCQkJCQk8dHI+CgkJCQkJCTx0aD5TZWxlY3Rpb248L3RoPgk8dGg+VHJvb3BlciBUS0lEIC8gTmFtZTwvdGQ+CTx0aD5Ucm9vcGVyIENvc3R1bWU8L3RoPgk8dGg+VHJvb3BlciBCYWNrdXAgQ29zdHVtZTwvdGg+CTx0aD5Ucm9vcGVyIFN0YXR1czwvdGg+CgkJCQkJPC90cj4KCQkJCTwvdGFibGU+CgkJCQk8L2Rpdj4KCQkJCQoJCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0icmVtb3ZldHJvb3BlciIgaWQ9InJlbW92ZXRyb29wZXIiIHZhbHVlPSJSZW1vdmUgVHJvb3BlciIgLz4JPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iZWRpdHRyb29wZXIiIGlkPSJlZGl0dHJvb3BlciIgdmFsdWU9IkVkaXQgVHJvb3BlciIgLz4KCQkJPC9mb3JtPic7CgkJfQoJCWVsc2UKCQl7CgkJCWVjaG8gJwoJCQkJPC90YWJsZT4KCQkJCTwvZGl2PgoKCQkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InJlbW92ZXRyb29wZXIiIGlkPSJyZW1vdmV0cm9vcGVyIiB2YWx1ZT0iUmVtb3ZlIFRyb29wZXIiIC8+CTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9ImVkaXR0cm9vcGVyIiBpZD0iZWRpdHRyb29wZXIiIHZhbHVlPSJFZGl0IFRyb29wZXIiIC8+CgkJCTwvZm9ybT4nOwoKCQl9CgoJCS8vIExvYWQgYWxsIHVzZXJzCgkJJHF1ZXJ5ID0gIlNFTEVDVCB0cm9vcGVycy5pZCBBUyB0cm9vcGlkYSwgdHJvb3BlcnMubmFtZSBBUyB0cm9vcGVybmFtZSwgdHJvb3BlcnMudGtpZCwgdHJvb3BlcnMuc3F1YWQgRlJPTSB0cm9vcGVycyBXSEVSRSBOT1QgRVhJU1RTIChTRUxFQ1QgZXZlbnRfc2lnbl91cC50cm9vcGVyaWQgRlJPTSBldmVudF9zaWduX3VwIFdIRVJFIGV2ZW50X3NpZ25fdXAudHJvb3BlcmlkID0gdHJvb3BlcnMuaWQgQU5EIGV2ZW50X3NpZ25fdXAudHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIEFORCBldmVudF9zaWduX3VwLnRyb29wZXJpZCAhPSAiLnBsYWNlaG9sZGVyLiIpIE9SREVSIEJZIHRyb29wZXJzLm5hbWUiOwoKCQkkaSA9IDA7CgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkgb3IgZGllKCRjb25uLT5lcnJvcikpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJLy8gRmlyc3QgYWRkIHRoaXMgdG8gbWFrZSBhIGxpc3QKCQkJCWlmKCRpID09IDApCgkJCQl7CgkJCQkJZWNobyAnCgkJCQkJPGZvcm0gYWN0aW9uPSJwcm9jZXNzLnBocD9kbz1lZGl0ZXZlbnQiIG1ldGhvZD0iUE9TVCIgbmFtZT0idHJvb3BSb3N0ZXJGb3JtQWRkIiBpZD0idHJvb3BSb3N0ZXJGb3JtQWRkIj4KCQkJCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idHJvb3BpZCIgaWQ9InRyb29waWQiIHZhbHVlPSInLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiciIC8+CgoJCQkJCQk8cD5TZWxlY3QgYSB0cm9vcGVyIHRvIGFkZDo8L3A+CgkJCQkJCTxzZWxlY3QgbmFtZT0idHJvb3BlclNlbGVjdCIgaWQ9InRyb29wZXJTZWxlY3QiPic7CgkJCQl9CgkJCQkKCQkJCS8vIEdldCBUS0lECgkJCQkkdGtpZCA9IHJlYWRUS051bWJlcigkZGItPnRraWQsICRkYi0+c3F1YWQpOwoKCQkJCS8vIExpc3QgdHJvb3BlcnMKCQkJCWVjaG8gJwoJCQkJPG9wdGlvbiB2YWx1ZT0iJy4kZGItPnRyb29waWRhLiciIHRraWQ9IicuJHRraWQuJyIgdHJvb3Blcm5hbWU9IicuJGRiLT50cm9vcGVybmFtZS4nIj4nLiRkYi0+dHJvb3Blcm5hbWUuJyAtICcuJHRraWQuJzwvb3B0aW9uPic7CgkJCQkkaSsrOwoJCQl9CgkJfQoKCQkvLyBJZiBubyB0cm9vcGVycwoJCWlmKCRpID09IDApCgkJewoJCQllY2hvICdObyB0cm9vcGVycyB0byBhZGQuJzsKCQl9CgkJZWxzZQoJCXsKCQkJZWNobyAnCgkJCQk8L3NlbGVjdD4KCgkJCQk8cD5XaGF0IGNvc3R1bWUgYXJlIHRoZXkgd2VhcmluZz88L3A+CgkJCQk8c2VsZWN0IG5hbWU9ImNvc3R1bWUiIGlkPSJjb3N0dW1lIj4KCQkJCQk8b3B0aW9uIHZhbHVlPSJudWxsIiBTRUxFQ1RFRD5QbGVhc2UgY2hvb3NlIGFuIG9wdGlvbi4uLjwvb3B0aW9uPic7CgkJCQkJCgkJCQkvLyBSZXNldAoJCQkJJGEgPSAwOwoJCQkJCQoJCQkJLy8gRGlzcGxheSBjb3N0dW1lcwoJCQkJZm9yZWFjaCgkY29zdHVtZXNOYW1lIGFzICRrZXkpCgkJCQl7CgkJCQkJZWNobyAnCgkJCQkJPG9wdGlvbiB2YWx1ZT0iJy4gJGNvc3R1bWVzSURbJGFdIC4nIj4nLiRrZXkuJzwvb3B0aW9uPic7CgkJCQkJCgkJCQkJJGErKzsKCQkJCX0KCgkJCWVjaG8gJwoJCQkJPC9zZWxlY3Q+CgoJCQkJPHA+V2hhdCBpcyB0aGVyZSBiYWNrdXAgY29zdHVtZSBpZiBhcHBsaWNhYmxlOjwvcD4KCgkJCQk8c2VsZWN0IG5hbWU9ImNvc3R1bWViYWNrdXAiIGlkPSJjb3N0dW1lYmFja3VwIj4nOwoJCQkJCgkJCQkvLyBSZXNldAoJCQkJJGEgPSAwOwoJCQkJCgkJCQkvLyBBbW91bnQgb2YgY29zdHVtZXMKCQkJCSRjID0gMDsKCQkJCQoJCQkJLy8gRGlzcGxheSBjb3N0dW1lcwoJCQkJZm9yZWFjaCgkY29zdHVtZXNOYW1lIGFzICRrZXkpCgkJCQl7CgkJCQkJLy8gSWYgZmlyc3Qgc2VsZWN0IG9wdGlvbgoJCQkJCWlmKCRjID09IDApCgkJCQkJewoJCQkJCQllY2hvICc8b3B0aW9uIHZhbHVlPSIwIiBTRUxFQ1RFRD5TZWxlY3QgYSBjb3N0dW1lLi4uPC9vcHRpb24+JzsKCQkJCQl9CgkJCQkJCgkJCQkJLy8gQWRkIGNvc3R1bWUKCQkJCQllY2hvICc8b3B0aW9uIHZhbHVlPSInLiRjb3N0dW1lc0lEWyRhXS4nIj4nLiRrZXkuJzwvb3B0aW9uPic7CgkJCQkJCgkJCQkJJGErKzsKCQkJCQkkYysrOwoJCQkJfQoKCQkJCWVjaG8gJwoJCQkJPC9zZWxlY3Q+CgoJCQkJPHA+U3RhdHVzPC9wPgoJCQkJPHNlbGVjdCBuYW1lPSJzdGF0dXMiIGlkPSJzdGF0dXMiPgoJCQkJCTxvcHRpb24gdmFsdWU9Im51bGwiIFNFTEVDVEVEPlBsZWFzZSBjaG9vc2UgYW4gb3B0aW9uPC9vcHRpb24+CgkJCQkJPG9wdGlvbiB2YWx1ZT0iMCI+R29pbmc8L29wdGlvbj4KCQkJCQk8b3B0aW9uIHZhbHVlPSIxIj5TdGFuZCBCeTwvb3B0aW9uPgoJCQkJCTxvcHRpb24gdmFsdWU9IjIiPlRlbnRhdGl2ZTwvb3B0aW9uPgoJCQkJCTxvcHRpb24gdmFsdWU9IjMiPkF0dGVuZGVkPC9vcHRpb24+CgkJCQkJPG9wdGlvbiB2YWx1ZT0iNCI+Q2FuY2VsZWQ8L29wdGlvbj4KCQkJCQk8b3B0aW9uIHZhbHVlPSI1Ij5QZW5kaW5nPC9vcHRpb24+CgkJCQk8L3NlbGVjdD4KCgkJCQk8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXRBZGRPbiIgaWQ9InN1Ym1pdEFkZE9uIiB2YWx1ZT0iQWRkISIgLz4KCQkJPC9mb3JtPic7CgkJfQoJfQoKCS8vIEV2ZW50IHN1Ym1pdHRlZCBmb3IgZWRpdC4uLgoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRFZGl0J10pKQoJewoJCS8vIExvYWQgZXZlbnQgaW5mbwoJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIGV2ZW50cyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkJ10pLiInIjsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgkJCQkkYXJyYXkgPSBhcnJheSgnaWQnID0+ICRkYi0+aWQsICduYW1lJyA9PiAkZGItPm5hbWUsICd2ZW51ZScgPT4gJGRiLT52ZW51ZSwgJ2RhdGVTdGFydCcgPT4gJGRiLT5kYXRlU3RhcnQsICdkYXRlRW5kJyA9PiAkZGItPmRhdGVFbmQsICd3ZWJzaXRlJyA9PiAkZGItPndlYnNpdGUsICdudW1iZXJPZkF0dGVuZCcgPT4gJGRiLT5udW1iZXJPZkF0dGVuZCwgJ3JlcXVlc3RlZE51bWJlcicgPT4gJGRiLT5yZXF1ZXN0ZWROdW1iZXIsICdyZXF1ZXN0ZWRDaGFyYWN0ZXInID0+ICRkYi0+cmVxdWVzdGVkQ2hhcmFjdGVyLCAnc2VjdXJlQ2hhbmdpbmcnID0+ICRkYi0+c2VjdXJlQ2hhbmdpbmcsICdibGFzdGVycycgPT4gJGRiLT5ibGFzdGVycywgJ2xpZ2h0c2FiZXJzJyA9PiAkZGItPmxpZ2h0c2FiZXJzLCAncGFya2luZycgPT4gJGRiLT5wYXJraW5nLCAnbW9iaWxpdHknID0+ICRkYi0+bW9iaWxpdHksICdhbWVuaXRpZXMnID0+ICRkYi0+YW1lbml0aWVzLCAncmVmZXJyZWQnID0+ICRkYi0+cmVmZXJyZWQsICdjb21tZW50cycgPT4gJGRiLT5jb21tZW50cywgJ2xvY2F0aW9uJyA9PiAkZGItPmxvY2F0aW9uLCAnc3F1YWQnID0+ICRkYi0+c3F1YWQsICdsYWJlbCcgPT4gJGRiLT5sYWJlbCwgJ3Bvc3RDb21tZW50JyA9PiAkZGItPnBvc3RDb21tZW50LCAnbm90ZXMnID0+ICRkYi0+bm90ZXMsICdsaW1pdGVkRXZlbnQnID0+ICRkYi0+bGltaXRlZEV2ZW50LCAnbGltaXRUbycgPT4gJGRiLT5saW1pdFRvLCAnbGltaXQ1MDFzdCcgPT4gJGRiLT5saW1pdDUwMXN0LCAnbGltaXRUb3RhbFRyb29wZXJzJyA9PiAkZGItPmxpbWl0VG90YWxUcm9vcGVycywgJ2Nsb3NlZCcgPT4gJGRiLT5jbG9zZWQsICdtb25leVJhaXNlZCcgPT4gJGRiLT5tb25leVJhaXNlZCwgJ2V2ZW50TGluaycgPT4gJGRiLT5saW5rLCAndGhyZWFkX2lkJyA9PiAkZGItPnRocmVhZF9pZCwgJ3Bvc3RfaWQnID0+ICRkYi0+cG9zdF9pZCk7CgoJCQkJLy8gTG9vcCB0aHJvdWdoIGNsdWJzCgkJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCQl7CgkJCQkJLy8gQWRkCgkJCQkJJGFycmF5WyRjbHViX3ZhbHVlWydkYkxpbWl0J11dID0gJGRiLT57JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX07CgkJCQl9CgoJCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoJCQl9CgkJfQoJfQoKCS8vIEV2ZW50IGVkaXQgc3VibWl0dGVkCglpZihpc3NldCgkX1BPU1RbJ3N1Ym1pdEV2ZW50RWRpdCddKSkKCXsKCQkvLyBDaGVjayB3ZSBoYXZlIGFsbCB0aGUgZGF0YSB3ZSBuZWVkIHNlcnZlciBzaWRlLiBKUXVlcnkgc2hvdWxkIGRvIHRoaXMsIGJ1dCB0aGlzIGlzIGEgYmFja3VwCgkJaWYoJF9QT1NUWydldmVudE5hbWUnXSAhPSAiIiAmJiAkX1BPU1RbJ2V2ZW50VmVudWUnXSAhPSAiIiAmJiAkX1BPU1RbJ2xvY2F0aW9uJ10gIT0gIiIgJiYgJF9QT1NUWydkYXRlU3RhcnQnXSAhPSAiIiAmJiAkX1BPU1RbJ2RhdGVFbmQnXSAhPSAiIiAmJiAkX1BPU1RbJ251bWJlck9mQXR0ZW5kJ10gIT0gIiIgJiYgJF9QT1NUWydyZXF1ZXN0ZWROdW1iZXInXSAhPSAiIiAmJiAkX1BPU1RbJ3NlY3VyZSddICE9ICIiICYmICRfUE9TVFsnYmxhc3RlcnMnXSAhPSAiIiAmJiAkX1BPU1RbJ2xpZ2h0c2FiZXJzJ10gIT0gIiIgJiYgJF9QT1NUWydwYXJraW5nJ10gIT0gIm51bGwiICYmICRfUE9TVFsnbW9iaWxpdHknXSAhPSAibnVsbCIgJiYgJF9QT1NUWydsYWJlbCddICE9ICJudWxsIiAmJiAkX1BPU1RbJ2xpbWl0ZWRFdmVudCddICE9ICJudWxsIikKCQl7CgkJCS8vIENvbnZlcnQgZGF0ZQoJCQkkZGF0ZTEgPSBkYXRlKCdZLW0tZCBIOmk6cycsIHN0cnRvdGltZSgkX1BPU1RbJ2RhdGVTdGFydCddKSk7CgkJCSRkYXRlMiA9IGRhdGUoJ1ktbS1kIEg6aTpzJywgc3RydG90aW1lKCRfUE9TVFsnZGF0ZUVuZCddKSk7CgkJCQoJCQkvLyBHZXQgbnVtYmVyIG9mIGV2ZW50cyB3aXRoIGxpbmsKCQkJJGdldE51bU9mTGlua3MgPSAkY29ubi0+cXVlcnkoIlNFTEVDVCBpZCBGUk9NIGV2ZW50cyBXSEVSRSBsaW5rID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWRFJ10pLiInIik7CgoJCQkvLyBNYWtlIHRocmVhZCBib2R5CgkJCSR0aHJlYWRfYm9keSA9ICcKCQkJW2JdRXZlbnQgTmFtZTpbL2JdICcuJF9QT1NUWydldmVudE5hbWUnXS4nCgkJCVtiXVZlbnVlOlsvYl0gJy4kX1BPU1RbJ2V2ZW50VmVudWUnXS4nCgkJCVtiXVZlbnVlIGFkZHJlc3M6Wy9iXSAnLiRfUE9TVFsnbG9jYXRpb24nXS4nCgkJCVtiXUV2ZW50IFN0YXJ0OlsvYl0gJy5kYXRlKCJtL2QveSBoOmkgQSIsIHN0cnRvdGltZSgkZGF0ZTEpKS4nCgkJCVtiXUV2ZW50IEVuZDpbL2JdICcuZGF0ZSgibS9kL3kgaDppIEEiLCBzdHJ0b3RpbWUoJGRhdGUyKSkuJwoJCQlbYl1FdmVudCBXZWJzaXRlOlsvYl0gJy4kX1BPU1RbJ3dlYnNpdGUnXS4nCgkJCVtiXUV4cGVjdGVkIG51bWJlciBvZiBhdHRlbmRlZXM6Wy9iXSAnLiRfUE9TVFsnbnVtYmVyT2ZBdHRlbmQnXS4nCgkJCVtiXVJlcXVlc3RlZCBudW1iZXIgb2YgY2hhcmFjdGVyczpbL2JdICcuJF9QT1NUWydyZXF1ZXN0ZWROdW1iZXInXS4nCgkJCVtiXVJlcXVlc3RlZCBjaGFyYWN0ZXIgdHlwZXM6Wy9iXSAnLiRfUE9TVFsncmVxdWVzdGVkQ2hhcmFjdGVyJ10uJwoJCQlbYl1TZWN1cmUgY2hhbmdpbmcvc3RhZ2luZyBhcmVhOlsvYl0gJy55ZXNObygkX1BPU1RbJ3NlY3VyZSddKS4nCgkJCVtiXUNhbiB0cm9vcGVycyBjYXJyeSBibGFzdGVyczpbL2JdICcueWVzTm8oJF9QT1NUWydibGFzdGVycyddKS4nCgkJCVtiXUNhbiB0cm9vcGVycyBjYXJyeS9icmluZyBwcm9wcyBsaWtlIGxpZ2h0c2FiZXJzIGFuZCBzdGFmZnM6Wy9iXSAnLnllc05vKCRfUE9TVFsnbGlnaHRzYWJlcnMnXSkuJwoJCQlbYl1JcyBwYXJraW5nIGF2YWlsYWJsZTpbL2JdICcueWVzTm8oJF9QT1NUWydwYXJraW5nJ10pLicKCQkJW2JdSXMgdmVudWUgYWNjZXNzaWJsZSB0byB0aG9zZSB3aXRoIGxpbWl0ZWQgbW9iaWxpdHk6Wy9iXSAnLnllc05vKCRfUE9TVFsnbW9iaWxpdHknXSkuJwoJCQlbYl1BbWVuaXRpZXMgYXZhaWxhYmxlIGF0IHZlbnVlOlsvYl0gJy5pZkVtcHR5KCRfUE9TVFsnYW1lbml0aWVzJ10sICJObyBhbWVuaXRpZXMgZm9yIHRoaXMgZXZlbnQuIikuJwoJCQlbYl1Db21tZW50czpbL2JdICcuaWZFbXB0eSgkX1BPU1RbJ2NvbW1lbnRzJ10sICJObyBjb21tZW50cyBmb3IgdGhpcyBldmVudC4iKS4nCgkJCVtiXVJlZmVycmVkIGJ5OlsvYl0gJy5pZkVtcHR5KCRfUE9TVFsncmVmZXJyZWQnXSwgIk5vdCBhdmFpbGFibGUiKS4nCgoJCQlbYl1bdV1TaWduIFVwIC8gRXZlbnQgUm9zdGVyOlsvdV1bL2JdJzsKCQkJCgkJCS8vIFNldCB1cCBhZGQgdG8gcXVlcnkKCQkJJGFkZFRvUXVlcnkgPSAiIjsKCQkJCgkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCXsKCQkJCS8vIEFkZAoJCQkJJGFkZFRvUXVlcnkgLj0gIiIgLiAkY2x1Yl92YWx1ZVsnZGJMaW1pdCddIC4gIiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWyRjbHViX3ZhbHVlWydkYkxpbWl0J11dKS4iJywgIjsKCQkJfQoJCQkKCQkJLy8gSWYgZXZlbnQgaXMgbGlua2VkCgkJCWlmKCRfUE9TVFsnZXZlbnRMaW5rJ10gPiAwKQoJCQl7CgkJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UgLSBsaW5rZWQKCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgbmFtZSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudE5hbWUnXSkuIicsIHZlbnVlID0gICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudFZlbnVlJ10pLiInLCB3ZWJzaXRlID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3dlYnNpdGUnXSkuIicsIG51bWJlck9mQXR0ZW5kID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ251bWJlck9mQXR0ZW5kJ10pLiInLCByZXF1ZXN0ZWROdW1iZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10pLiInLCByZXF1ZXN0ZWRDaGFyYWN0ZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkQ2hhcmFjdGVyJ10pLiInLCBzZWN1cmVDaGFuZ2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzZWN1cmUnXSkuIicsIGJsYXN0ZXJzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2JsYXN0ZXJzJ10pLiInLCBsaWdodHNhYmVycyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaWdodHNhYmVycyddKS4iJywgcGFya2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwYXJraW5nJ10pLiInLCBtb2JpbGl0eSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydtb2JpbGl0eSddKS4iJywgYW1lbml0aWVzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2FtZW5pdGllcyddKS4iJywgcmVmZXJyZWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVmZXJyZWQnXSkuIicsIGNvbW1lbnRzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnRzJ10pLiInLCBsb2NhdGlvbiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsb2NhdGlvbiddKS4iJywgc3F1YWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3F1YWRtJ10pLiInLCBsYWJlbCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsYWJlbCddKS4iJywgbGltaXRlZEV2ZW50ID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0ZWRFdmVudCddKS4iJywgbGltaXRUbyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlcmEnXSkuIicsICIuJGFkZFRvUXVlcnkuIiBsaW1pdDUwMXN0ID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0NTAxc3QnXSkuIicsIGxpbWl0VG90YWxUcm9vcGVycyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaW1pdFRvdGFsVHJvb3BlcnMnXSkuIicgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkuIicgT1IgbGluayA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudExpbmsnXSkuIicgT1IgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRMaW5rJ10pLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgoJCQkJLy8gVXBkYXRlIGlmIGxpbWl0ZWQgZXZlbnQKCQkJCXJlc2V0VHJvb3BlclN0YXR1cyhjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSksIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudExpbmsnXSkpOwoJCQkJcmVzZXRUcm9vcGVyU3RhdHVzKGNsZWFuSW5wdXQoJF9QT1NUWydldmVudExpbmsnXSkpOwoJCQkJCgkJCQkvLyBVcGRhdGUgZGF0ZQoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRzIFNFVCBkYXRlU3RhcnQgPSAnIi5jbGVhbklucHV0KCRkYXRlMSkuIicsIGRhdGVFbmQgPSAnIi5jbGVhbklucHV0KCRkYXRlMikuIicgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkuIiciKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCgkJCQkvLyBRdWVyeSBkYXRhYmFzZSBmb3IgZXZlbnQgaW5mbyBmcm9tIGFib3ZlCgkJCQkkcXVlcnkgPSAiU0VMRUNUICogRlJPTSBldmVudHMgV0hFUkUgdGhyZWFkX2JvZHkgIT0gMCBBTkQgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkuIicgT1IgbGluayA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudExpbmsnXSkuIicgT1IgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRMaW5rJ10pLiInIjsKCQkJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCQkJewoJCQkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQkJCXsKCQkJCQkJLy8gQWRkIHRvIHRocmVhZCBib2R5CgkJCQkJCSR0aHJlYWRfYm9keSAuPSAnCgoJCQkJCQlbdXJsXWh0dHBzOi8vZmw1MDFzdC5jb20vdHJvb3AtdHJhY2tlci9pbmRleC5waHA/ZXZlbnQ9JyAuICRkYi0+aWQgLiAnWy91cmxdJzsKCgkJCQkJCS8vIFVwZGF0ZSB0aHJlYWQKCQkJCQkJZWRpdFBvc3QoJGRiLT5wb3N0X2lkLCAkdGhyZWFkX2JvZHkpOwoJCQkJCQltb3ZlVGhyZWFkKCRkYi0+dGhyZWFkX2lkLCAkc3F1YWRBcnJheVtpbnR2YWwoY2xlYW5JbnB1dCgkX1BPU1RbJ3NxdWFkbSddKSAtIDEpXVsnZXZlbnRGb3J1bSddKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQkJZWxzZSBpZigkZ2V0TnVtT2ZMaW5rcy0+bnVtX3Jvd3MgPiAwKQoJCQl7CgkJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UgLSBsaW5rZWQKCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50cyBTRVQgbmFtZSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudE5hbWUnXSkuIicsIHZlbnVlID0gICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudFZlbnVlJ10pLiInLCB3ZWJzaXRlID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3dlYnNpdGUnXSkuIicsIG51bWJlck9mQXR0ZW5kID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ251bWJlck9mQXR0ZW5kJ10pLiInLCByZXF1ZXN0ZWROdW1iZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10pLiInLCByZXF1ZXN0ZWRDaGFyYWN0ZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkQ2hhcmFjdGVyJ10pLiInLCBzZWN1cmVDaGFuZ2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzZWN1cmUnXSkuIicsIGJsYXN0ZXJzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2JsYXN0ZXJzJ10pLiInLCBsaWdodHNhYmVycyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaWdodHNhYmVycyddKS4iJywgcGFya2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwYXJraW5nJ10pLiInLCBtb2JpbGl0eSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydtb2JpbGl0eSddKS4iJywgYW1lbml0aWVzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2FtZW5pdGllcyddKS4iJywgcmVmZXJyZWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVmZXJyZWQnXSkuIicsIGNvbW1lbnRzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnRzJ10pLiInLCBsb2NhdGlvbiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsb2NhdGlvbiddKS4iJywgc3F1YWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3F1YWRtJ10pLiInLCBsYWJlbCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsYWJlbCddKS4iJywgbGltaXRlZEV2ZW50ID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0ZWRFdmVudCddKS4iJywgbGltaXRUbyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlcmEnXSkuIicsICIuJGFkZFRvUXVlcnkuImxpbWl0NTAxc3QgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGltaXQ1MDFzdCddKS4iJywgbGltaXRUb3RhbFRyb29wZXJzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0VG90YWxUcm9vcGVycyddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKS4iJyBPUiBsaW5rID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWRFJ10pLiInIikgb3IgZGllKCRjb25uLT5lcnJvcik7CgoJCQkJLy8gVXBkYXRlIGlmIGxpbWl0ZWQgZXZlbnQKCQkJCXJlc2V0VHJvb3BlclN0YXR1cyhjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSksIGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKSk7CgkJCQkKCQkJCS8vIFVwZGF0ZSBkYXRlCgkJCQkkY29ubi0+cXVlcnkoIlVQREFURSBldmVudHMgU0VUIGRhdGVTdGFydCA9ICciLmNsZWFuSW5wdXQoJGRhdGUxKS4iJywgZGF0ZUVuZCA9ICciLmNsZWFuSW5wdXQoJGRhdGUyKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKS4iJyIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoKCQkJCS8vIFF1ZXJ5IGRhdGFiYXNlIGZvciBldmVudCBpbmZvIGZyb20gYWJvdmUKCQkJCSRxdWVyeSA9ICJTRUxFQ1QgKiBGUk9NIGV2ZW50cyBXSEVSRSB0aHJlYWRfYm9keSAhPSAwIEFORCBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKS4iJyBPUiBsaW5rID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWRFJ10pLiInIjsKCQkJCWlmICgkcmVzdWx0ID0gbXlzcWxpX3F1ZXJ5KCRjb25uLCAkcXVlcnkpKQoJCQkJewoJCQkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQkJCXsKCQkJCQkJLy8gQWRkIHRvIHRocmVhZCBib2R5CgkJCQkJCSR0aHJlYWRfYm9keSAuPSAnCgoJCQkJCQlbdXJsXWh0dHBzOi8vZmw1MDFzdC5jb20vdHJvb3AtdHJhY2tlci9pbmRleC5waHA/ZXZlbnQ9JyAuICRkYi0+aWQgLiAnWy91cmxdJzsKCgkJCQkJCS8vIFVwZGF0ZSB0aHJlYWQKCQkJCQkJZWRpdFBvc3QoJGRiLT5wb3N0X2lkLCAkdGhyZWFkX2JvZHkpOwoJCQkJCQltb3ZlVGhyZWFkKCRkYi0+dGhyZWFkX2lkLCAkc3F1YWRBcnJheVtpbnR2YWwoY2xlYW5JbnB1dCgkX1BPU1RbJ3NxdWFkbSddKSAtIDEpXVsnZXZlbnRGb3J1bSddKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQkJZWxzZQoJCQl7CgkJCQkvLyBBZGQgdG8gdGhyZWFkIGJvZHkKCQkJCSR0aHJlYWRfYm9keSAuPSAnCgoJCQkJW3VybF1odHRwczovL2ZsNTAxc3QuY29tL3Ryb29wLXRyYWNrZXIvaW5kZXgucGhwP2V2ZW50PScgLiBjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkgLiAnWy91cmxdJzsKCgkJCQkvLyBVcGRhdGUgdGhyZWFkCgkJCQllZGl0UG9zdChnZXRFdmVudFBvc3RJRChjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkpLCAkdGhyZWFkX2JvZHkpOwoJCQkJbW92ZVRocmVhZChnZXRFdmVudFRocmVhZElEKGNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKSksICRzcXVhZEFycmF5W2ludHZhbChjbGVhbklucHV0KCRfUE9TVFsnc3F1YWRtJ10pIC0gMSldWydldmVudEZvcnVtJ10pOwoJCQkJCgkJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UgLSBpZiBub3QgbGlua2VkCgkJCQkkY29ubi0+cXVlcnkoIlVQREFURSBldmVudHMgU0VUIG5hbWUgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnROYW1lJ10pLiInLCB2ZW51ZSA9ICAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRWZW51ZSddKS4iJywgZGF0ZVN0YXJ0ID0gJyIuY2xlYW5JbnB1dCgkZGF0ZTEpLiInLCBkYXRlRW5kID0gJyIuY2xlYW5JbnB1dCgkZGF0ZTIpLiInLCB3ZWJzaXRlID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3dlYnNpdGUnXSkuIicsIG51bWJlck9mQXR0ZW5kID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ251bWJlck9mQXR0ZW5kJ10pLiInLCByZXF1ZXN0ZWROdW1iZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkTnVtYmVyJ10pLiInLCByZXF1ZXN0ZWRDaGFyYWN0ZXIgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVxdWVzdGVkQ2hhcmFjdGVyJ10pLiInLCBzZWN1cmVDaGFuZ2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydzZWN1cmUnXSkuIicsIGJsYXN0ZXJzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2JsYXN0ZXJzJ10pLiInLCBsaWdodHNhYmVycyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaWdodHNhYmVycyddKS4iJywgcGFya2luZyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydwYXJraW5nJ10pLiInLCBtb2JpbGl0eSA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydtb2JpbGl0eSddKS4iJywgYW1lbml0aWVzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2FtZW5pdGllcyddKS4iJywgcmVmZXJyZWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsncmVmZXJyZWQnXSkuIicsIGNvbW1lbnRzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnRzJ10pLiInLCBsb2NhdGlvbiA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsb2NhdGlvbiddKS4iJywgc3F1YWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnc3F1YWRtJ10pLiInLCBsYWJlbCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydsYWJlbCddKS4iJywgbGltaXRlZEV2ZW50ID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0ZWRFdmVudCddKS4iJywgbGltaXRUbyA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydlcmEnXSkuIicsICIuJGFkZFRvUXVlcnkuImxpbWl0NTAxc3QgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGltaXQ1MDFzdCddKS4iJywgbGltaXRUb3RhbFRyb29wZXJzID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0VG90YWxUcm9vcGVycyddKS4iJyBXSEVSRSBpZCA9ICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudElkRSddKS4iJyIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoKCQkJCS8vIFVwZGF0ZSBpZiBsaW1pdGVkIGV2ZW50CgkJCQlyZXNldFRyb29wZXJTdGF0dXMoY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWRFJ10pKTsKCQkJfQoJCQkKCQkJLy8gU2V0IHVwIGlmIHdlIHNob3VsZCBzZW5kIG5vdGlmaWNhdGlvbgoJCQkkc2VuZE5vdGlmaWNhdGlvbkNoZWNrID0gdHJ1ZTsKCQkJCgkJCS8vIExvb3AgdGhyb3VnaCBzaGlmdHMgLSBpZiBleGlzdAoJCQlmb3JlYWNoKCRfUE9TVCBhcyAka2V5ID0+ICR2YWx1ZSkKCQkJewoJCQkJLy8gQ2hlY2sgaWYgY29udGFpbnMgInNoaWZ0cG9zdCIKCQkJCWlmKHN0cnN0cigka2V5LCAnc2hpZnRwb3N0JykpCgkJCQl7CgkJCQkJLy8gR2V0IHBhaXIgdmFsdWUgZnJvbSBzaGlmdHBvc3QKCQkJCQkkcGFpciA9ICR2YWx1ZTsKCQkJCQkKCQkJCQkvLyBTZXQgdXAgbGluayB2YWx1ZQoJCQkJCSRsaW5rID0gLTE7CgkJCQkJCgkJCQkJLy8gSWYgdGhpcyBpcyBhIGxpbmtlZCBldmVudCBhbmQgbm90IG1haW4KCQkJCQlpZigkX1BPU1RbJ2V2ZW50TGluayddID4gMCkKCQkJCQl7CgkJCQkJCSRsaW5rID0gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50TGluayddKTsKCQkJCQl9CgkJCQkJZWxzZQoJCQkJCXsKCQkJCQkJJGxpbmsgPSBjbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSk7CgkJCQkJfQoJCQkJCQoJCQkJCS8vIFZlcmlmeSB0aGVyZSBpcyBhIHZhbHVlIGluIGJvdGggZGF0ZXMgYmVmb3JlIGluc2VydGluZyBkYXRhCgkJCQkJaWYoY2xlYW5JbnB1dCgkX1BPU1RbJ2FkZGRhdGVTdGFydCcgLiAkcGFpcl0pICE9ICIiICYmIGNsZWFuSW5wdXQoJF9QT1NUWydhZGRkYXRlRW5kJyAuICRwYWlyXSkgIT0gIiIpCgkJCQkJewoJCQkJCQkvLyBDbGVhbiBkYXRlIGlucHV0CgkJCQkJCSRkYXRlMSA9IGRhdGUoJ1ktbS1kIEg6aTpzJywgc3RydG90aW1lKGNsZWFuSW5wdXQoJF9QT1NUWydhZGRkYXRlU3RhcnQnIC4gJHBhaXJdKSkpOwoJCQkJCQkkZGF0ZTIgPSBkYXRlKCdZLW0tZCBIOmk6cycsIHN0cnRvdGltZShjbGVhbklucHV0KCRfUE9TVFsnYWRkZGF0ZUVuZCcgLiAkcGFpcl0pKSk7CgoJCQkJCQkvLyBTZXQgdXAgYWRkIHRvIHF1ZXJ5CgkJCQkJCSRhZGRUb1F1ZXJ5MSA9ICIiOwoJCQkJCQkkYWRkVG9RdWVyeTIgPSAiIjsKCgkJCQkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQkJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCQkJCXsKCQkJCQkJCS8vIEFkZAoJCQkJCQkJJGFkZFRvUXVlcnkxIC49ICInIi5jbGVhbklucHV0KCRfUE9TVFskY2x1Yl92YWx1ZVsnZGJMaW1pdCddXSkuIicsICI7CgkJCQkJCQkkYWRkVG9RdWVyeTIgLj0gIiIgLiAkY2x1Yl92YWx1ZVsnZGJMaW1pdCddIC4gIiwgIjsKCQkJCQkJfQoJCQkJCQoJCQkJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBldmVudHMgKG5hbWUsIHZlbnVlLCBkYXRlU3RhcnQsIGRhdGVFbmQsIHdlYnNpdGUsIG51bWJlck9mQXR0ZW5kLCByZXF1ZXN0ZWROdW1iZXIsIHJlcXVlc3RlZENoYXJhY3Rlciwgc2VjdXJlQ2hhbmdpbmcsIGJsYXN0ZXJzLCBsaWdodHNhYmVycywgcGFya2luZywgbW9iaWxpdHksIGFtZW5pdGllcywgcmVmZXJyZWQsIGNvbW1lbnRzLCBsb2NhdGlvbiwgbGFiZWwsIGxpbWl0ZWRFdmVudCwgbGltaXRUbywgbGltaXQ1MDFzdCwgbGltaXRUb3RhbFRyb29wZXJzLCAiLiRhZGRUb1F1ZXJ5Mi4iIHNxdWFkLCBsaW5rKSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudE5hbWUnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudFZlbnVlJ10pLiInLCAnIi4kZGF0ZTEuIicsICciLiRkYXRlMi4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3dlYnNpdGUnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydudW1iZXJPZkF0dGVuZCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3JlcXVlc3RlZE51bWJlciddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3JlcXVlc3RlZENoYXJhY3RlciddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ3NlY3VyZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2JsYXN0ZXJzJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbGlnaHRzYWJlcnMnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydwYXJraW5nJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbW9iaWxpdHknXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydhbWVuaXRpZXMnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydyZWZlcnJlZCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2NvbW1lbnRzJ10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnbG9jYXRpb24nXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsYWJlbCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0ZWRFdmVudCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2VyYSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2xpbWl0NTAxc3QnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydsaW1pdFRvdGFsVHJvb3BlcnMnXSkuIicsICIuJGFkZFRvUXVlcnkxLiInIi5jbGVhbklucHV0KCRfUE9TVFsnc3F1YWRtJ10pLiInLCAnIi4kbGluay4iJykiKSBvciBkaWUoJGNvbm4tPmVycm9yKTsKCgkJCQkJCSRsYXN0X2lkID0gJGNvbm4tPmluc2VydF9pZDsKCQkJCQkJCgkJCQkJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYKCQkJCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBhZGRlZCBhIHNoaWZ0OiBbIiAuICRsaW5rIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDE5LCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSBldmVudHMgV0hFUkUgaWQgPSAnIi4kbGFzdF9pZC4iJyIpKTsKCQkJCQkJCgkJCQkJCS8vIFdlIGp1c3Qgc2VudCBhIG5vdGlmaWNhdGlvbiwgZG9uJ3Qgc2VuZCBhbm90aGVyIGJlbG93CgkJCQkJCSRzZW5kTm90aWZpY2F0aW9uQ2hlY2sgPSBmYWxzZTsKCQkJCQl9CgkJCQl9CgkJCX0KCQkJCgkJCS8vIFNlbmQgbm90aWZpY2F0aW9uIHRvIGNvbW1hbmQgc3RhZmYsIGlmIHdlIGhhdmUgbm90IGFscmVhZHkKCQkJaWYoJHNlbmROb3RpZmljYXRpb25DaGVjaykKCQkJewoJCQkJc2VuZE5vdGlmaWNhdGlvbihnZXROYW1lKCRfU0VTU0lPTlsnaWQnXSkgLiAiIGhhcyBlZGl0ZWQgZXZlbnQgSUQ6IFsiIC4gY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50SWRFJ10pIC4gIl0iLCBjbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSksIDE0LCBjb252ZXJ0RGF0YVRvSlNPTigiU0VMRUNUICogRlJPTSBldmVudHMgV0hFUkUgaWQgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnRJZEUnXSkuIiciKSk7CgkJCX0KCgkJCS8vIEZvciB1cGRhdGluZyB0aXRsZSwgc2VuZCBkYXRlIGJhY2sKCQkJJG5ld0RhdGUgPSAiWyIgLiBkYXRlKCJsIiwgc3RydG90aW1lKCRkYXRlMSkpIC4gIiA6ICIgLiBkYXRlKCJtL2QgLSBoOmkgQSIsIHN0cnRvdGltZSgkZGF0ZTEpKSAuICIgLSAiIC4gZGF0ZSgiaDppIEEiLCBzdHJ0b3RpbWUoJGRhdGUyKSkgLiAiXSAiOwoKCQkJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICd0cnVlJywgJ2RhdGEnID0+ICdFdmVudCBoYXMgYmVlbiB1cGRhdGVkIScsICduZXdkYXRlJyA9PiAkbmV3RGF0ZSk7CgkJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCQl9CgkJZWxzZQoJCXsKCQkJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICdmYWlsZWQnLCAnZGF0YScgPT4gJycpOwoJCQllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7CgkJfQoJfQp9CgppZihpc3NldCgkX0dFVFsnZG8nXSkgJiYgJF9HRVRbJ2RvJ10gPT0gInNpZ251cCIpCnsKCS8vIFdoZW4gd2UgcmVjZWl2ZSBhIHN1Ym1pc3Npb24gZm9yIGFuIGV2ZW50IHNpZ24gdXAuLi4KCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0U2lnblVwJ10pKQoJewoJCS8vIFNldCB0cm9vcGVyIElECgkJJHRyb29wZXJJRCA9IDA7CgoJCS8vIENoZWNrIGlmIHRoaXMgaXMgYWRkIGZyaWVuZAoJCWlmKGlzc2V0KCRfUE9TVFsnYWRkZnJpZW5kJ10pKQoJCXsKCQkJLy8gUHJldmVudCBidWcgb2YgZ2V0dGluZyBzaWduZWQgdXAgdHdpY2UKCQkJJGV2ZW50Q2hlY2sgPSBpbkV2ZW50KGNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0J10pLCBjbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkpOwoKCQkJLy8gU2V0CgkJCSR0cm9vcGVySUQgPSBjbGVhbklucHV0KCRfUE9TVFsndHJvb3BlclNlbGVjdCddKTsKCQl9CgkJZWxzZQoJCXsKCQkJLy8gUHJldmVudCBidWcgb2YgZ2V0dGluZyBzaWduZWQgdXAgdHdpY2UKCQkJJGV2ZW50Q2hlY2sgPSBpbkV2ZW50KGNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKSwgY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pKTsKCgkJCS8vIFNldAoJCQkkdHJvb3BlcklEID0gY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pOwoJCX0KCgkJLy8gQ2hlY2sgaWYgYWxyZWFkeSBpbiB0cm9vcCBhbmQgZXhjbHVkZSBwbGFjZWhvbGRlciBhY2NvdW50CgkJaWYoJGV2ZW50Q2hlY2tbJ2luVHJvb3AnXSA9PSAxICYmICR0cm9vcGVySUQgIT0gcGxhY2Vob2xkZXIpCgkJewoJCQlkaWUoIkFMUkVBRFkgSU4gVEhJUyBUUk9PUCEiKTsKCQl9CgoJCS8vIEVuZCBwcmV2ZW50IGJ1ZyBvZiBnZXR0aW5nIHNpZ25lZCB1cCB0d2ljZQoJCQoJCS8vIENoZWNrIHRvIHNlZSBpZiB0aGlzIGV2ZW50IGlzIGxpbWl0ZWQgdG8gYW4gZXJhCgkJaWYoZXJhQ2hlY2soY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pLCBjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKSkpCgkJewoJCQkvLyBNZXNzYWdlIHRvIHVzZXJzCgkJCSRkYXRhID0gIlRoaXMgY29zdHVtZSBpcyBub3QgYWxsb3dlZCBmb3IgdGhpcyBldmVudC4iOwoKCQkJLy8gU2VuZCBiYWNrIGRhdGEKCQkJJGFycmF5ID0gYXJyYXkoJ3N1Y2Nlc3MnID0+ICdmYWlsZWQnLCAnZGF0YScgPT4gJGRhdGEsICdpZCcgPT4gJF9TRVNTSU9OWydpZCddKTsKCQkJZWNobyBqc29uX2VuY29kZSgkYXJyYXkpOwoKCQkJLy8gRE8gTk9UIENPTlRJTlVFCgkJCWRpZSgiIik7CgkJfQoKCQkvLyBHZXQgc3RhdHVzIHBvc3QgdmFyaWFibGUKCQkkc3RhdHVzID0gY2xlYW5JbnB1dCgkX1BPU1RbJ3N0YXR1cyddKTsKCgkJLy8gQ2hlY2sgdG8gc2VlIGlmIHRoaXMgZXZlbnQgaXMgZnVsbAoKCQkvLyBTZXQgdXAgbGltaXRzCgkJJGxpbWl0NTAxc3QgPSAiIjsKCgkJLy8gU2V0IHVwIGxpbWl0IHRvdGFsCgkJJGxpbWl0NTAxc3RUb3RhbCA9IGV2ZW50Q2x1YkNvdW50KGNsZWFuSW5wdXQoJF9QT1NUWydldmVudCddKSwgMCk7CgoJCS8vIFNldCB1cCBjbHViIGNvdW50CgkJJGNsdWJDb3VudCA9IDE7CgoJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCWZvcmVhY2goJGNsdWJBcnJheSBhcyAkY2x1YiA9PiAkY2x1Yl92YWx1ZSkKCQl7CgkJCS8vIFNldCB1cCBsaW1pdHMKCQkJJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfSA9ICIiOwoKCQkJLy8gU2V0IHVwIGxpbWl0IHRvdGFscwoJCQkkeyRjbHViX3ZhbHVlWydkYkxpbWl0J10gLiAiVG90YWwifSA9IGV2ZW50Q2x1YkNvdW50KGNsZWFuSW5wdXQoJF9QT1NUWydldmVudCddKSwgJGNsdWJDb3VudCk7CgoJCQkvLyBJbmNyZW1lbnQgY2x1YiBjb3VudAoJCQkkY2x1YkNvdW50Kys7CgkJfQoKCQkvLyBRdWVyeSB0byBnZXQgbGltaXRzCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gZXZlbnRzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pLiInIjsKCgkJLy8gU2V0IGxpbWl0IHRvdGFsCgkJJGxpbWl0VG90YWwgPSAwOwoKCQkvLyBJcyB0aGlzIGEgdG90YWwgdHJvb3BlciBldmVudD8KCQkkdG90YWxUcm9vcGVyRXZlbnQgPSBmYWxzZTsKCgkJLy8gT3V0cHV0CgkJaWYgKCRyZXN1bHQgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeSkpCgkJewoJCQl3aGlsZSAoJGRiID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0KSkKCQkJewoJCQkJLy8gU2V0IDUwMQoJCQkJJGxpbWl0NTAxc3QgPSAkZGItPmxpbWl0NTAxc3Q7CgoJCQkJLy8gQWRkCgkJCQkkbGltaXRUb3RhbCArPSAkZGItPmxpbWl0NTAxc3Q7CgoKCQkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQkJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJCQkJewoJCQkJCS8vIFNldAoJCQkJCSR7JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX0gPSAkZGItPnskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfTsKCgkJCQkJLy8gQWRkCgkJCQkJJGxpbWl0VG90YWwgKz0gJGRiLT57JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX07CgkJCQl9CgoJCQkJLy8gQ2hlY2sgZm9yIHRvdGFsIGxpbWl0IHNldCwgaWYgaXQgaXMsIHJlcGxhY2UgbGltaXQgd2l0aCBpdAoJCQkJaWYoJGRiLT5saW1pdFRvdGFsVHJvb3BlcnMgPiA1MDAgfHwgJGRiLT5saW1pdFRvdGFsVHJvb3BlcnMgPCA1MDApCgkJCQl7CgkJCQkJJGxpbWl0VG90YWwgPSAkZGItPmxpbWl0VG90YWxUcm9vcGVyczsKCQkJCQkkdG90YWxUcm9vcGVyRXZlbnQgPSB0cnVlOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBTZXQgdHJvb3AgZnVsbCAtIG5vdCB1c2VkIGF0IHRoZSBtb21lbnQsIGJ1dCB3aWxsIGtlZXAgaXQgaGVyZSBmb3Igbm93CgkJJHRyb29wRnVsbCA9IGZhbHNlOwoKCQlpZigkdG90YWxUcm9vcGVyRXZlbnQpCgkJewoJCQkvKiBUT1RBTCBUUk9PUEVSUyAqLwoJCQkKCQkJaWYoJGxpbWl0VG90YWwgLSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSksICJhbGwiKSA8PSAwICYmICRzdGF0dXMgIT0gNCkKCQkJewoJCQkJLy8gVHJvb3AgaXMgZnVsbCwgc2V0IHRvIHN0YW5kIGJ5CgkJCQkkc3RhdHVzID0gMTsKCgkJCQkvLyBTZXQgdHJvb3AgZnVsbAoJCQkJJHRyb29wRnVsbCA9IHRydWU7CgkJCX0KCQl9CgkJZWxzZQoJCXsKCQkJLyogQ0hFQ0sgSUYgU1FVQURTIC8gQ0xVQiBBUkUgRlVMTCAqLwoKCQkJLy8gNTAxCgkJCWlmKChnZXRDb3N0dW1lQ2x1YihjbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKSkgPT0gMCAmJiAoJGxpbWl0NTAxc3QgLSBldmVudENsdWJDb3VudChjbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSksIDApKSA8PSAwKSAmJiAkc3RhdHVzICE9IDQpCgkJCXsKCQkJCS8vIFRyb29wIGlzIGZ1bGwsIHNldCB0byBzdGFuZCBieQoJCQkJJHN0YXR1cyA9IDE7CgoJCQkJLy8gU2V0IHRyb29wIGZ1bGwKCQkJCSR0cm9vcEZ1bGwgPSB0cnVlOwoJCQl9CgoJCQkvLyBMb29wIHRocm91Z2ggY2x1YnMKCQkJZm9yZWFjaCgkY2x1YkFycmF5IGFzICRjbHViID0+ICRjbHViX3ZhbHVlKQoJCQl7CgkJCQkvLyBMb29wIHRocm91Z2ggY29zdHVtZXMKCQkJCWZvcmVhY2goJGNsdWJfdmFsdWVbJ2Nvc3R1bWVzJ10gYXMgJGNvc3R1bWUpCgkJCQl7CgkJCQkJLy8gTWFrZSBzdXJlIG5vdCBhIGR1YWwgY29zdHVtZQoJCQkJCWlmKCRjb3N0dW1lICE9ICRkdWFsQ29zdHVtZSkKCQkJCQl7CgkJCQkJCS8vIENoZWNrIGNsdWIKCQkJCQkJaWYoKGdldENvc3R1bWVDbHViKGNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lJ10pKSA9PSAkY29zdHVtZSAmJiAoJHskY2x1Yl92YWx1ZVsnZGJMaW1pdCddfSAtIGV2ZW50Q2x1YkNvdW50KGNsZWFuSW5wdXQoJF9QT1NUWydldmVudCddKSwgJGNvc3R1bWUpKSA8PSAwKSAmJiAkc3RhdHVzICE9IDQpCgkJCQkJCXsKCQkJCQkJCS8vIFRyb29wIGlzIGZ1bGwsIHNldCB0byBzdGFuZCBieQoJCQkJCQkJJHN0YXR1cyA9IDE7CgoJCQkJCQkJLy8gU2V0IHRyb29wIGZ1bGwKCQkJCQkJCSR0cm9vcEZ1bGwgPSB0cnVlOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQkvLyBFbmQgb2YgY2hlY2sgdG8gc2VlIGlmIHRoaXMgZXZlbnQgaXMgZnVsbAoJCQoJCS8vIENoZWNrIGlmIHRoaXMgaXMgYWRkIGZyaWVuZAoJCWlmKGlzc2V0KCRfUE9TVFsnYWRkZnJpZW5kJ10pKQoJCXsKCQkJLy8gUXVlcnkgdGhlIGRhdGFiYXNlCgkJCSRjb25uLT5xdWVyeSgiSU5TRVJUIElOVE8gZXZlbnRfc2lnbl91cCAodHJvb3BlcmlkLCB0cm9vcGlkLCBjb3N0dW1lLCBzdGF0dXMsIGNvc3R1bWVfYmFja3VwLCBhZGRlZGJ5KSBWQUxVRVMgKCciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0J10pLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydjb3N0dW1lJ10pLiInLCAnIi4kc3RhdHVzLiInLCAnIi5jbGVhbklucHV0KCRfUE9TVFsnYmFja3VwY29zdHVtZSddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1NFU1NJT05bJ2lkJ10pLiInKSIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQkKCQkJLy8gU2VuZCB0byBkYXRhYmFzZSB0byBzZW5kIG91dCBub3RpZmljdGlvbnMgbGF0ZXIKCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBub3RpZmljYXRpb25fY2hlY2sgKHRyb29waWQsIHRyb29wZXJpZCwgdHJvb3BlcnN0YXR1cykgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWyd0cm9vcGVyU2VsZWN0J10pLiInLCAnMScpIik7CgkJfQoJCWVsc2UKCQl7CgkJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCQkkY29ubi0+cXVlcnkoIklOU0VSVCBJTlRPIGV2ZW50X3NpZ25fdXAgKHRyb29wZXJpZCwgdHJvb3BpZCwgY29zdHVtZSwgc3RhdHVzLCBjb3N0dW1lX2JhY2t1cCkgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydldmVudCddKS4iJywgJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2Nvc3R1bWUnXSkuIicsICciLiRzdGF0dXMuIicsICciLmNsZWFuSW5wdXQoJF9QT1NUWydiYWNrdXBjb3N0dW1lJ10pLiInKSIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQkKCQkJLy8gU2VuZCB0byBkYXRhYmFzZSB0byBzZW5kIG91dCBub3RpZmljdGlvbnMgbGF0ZXIKCQkJJGNvbm4tPnF1ZXJ5KCJJTlNFUlQgSU5UTyBub3RpZmljYXRpb25fY2hlY2sgKHRyb29waWQsIHRyb29wZXJpZCwgdHJvb3BlcnN0YXR1cykgVkFMVUVTICgnIi5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuIicsICciLmNsZWFuSW5wdXQoJF9TRVNTSU9OWydpZCddKS4iJywgJzEnKSIpOwoJCX0KCgkJLy8gRGVmaW5lIGRhdGEgdmFyaWFibGUgZm9yIGJlbG93IGNvZGUKCQkkZGF0YSA9ICIiOwoKCQkvLyBHZXQgZGF0YSB0byBzZW5kIGJhY2sgLSBxdWVyeSB0aGUgZXZlbnQgZGF0YSBmb3IgdGhlIGluZm9ybWF0aW9uCgoJCS8vIFF1ZXJ5IGRhdGFiYXNlIGZvciBldmVudCBpbmZvCgkJJHF1ZXJ5ID0gIlNFTEVDVCAqIEZST00gZXZlbnRzIFdIRVJFIGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pLiInIjsKCQlpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCQl7CgkJCXdoaWxlICgkZGIgPSBteXNxbGlfZmV0Y2hfb2JqZWN0KCRyZXN1bHQpKQoJCQl7CgoJCQkJLy8gUXVlcnkgZGF0YWJhc2UgZm9yIHJvc3RlciBpbmZvCgkJCQkkcXVlcnkyID0gIlNFTEVDVCBldmVudF9zaWduX3VwLmlkIEFTIHNpZ25JZCwgZXZlbnRfc2lnbl91cC5jb3N0dW1lX2JhY2t1cCwgZXZlbnRfc2lnbl91cC5jb3N0dW1lLCBldmVudF9zaWduX3VwLnN0YXR1cywgZXZlbnRfc2lnbl91cC50cm9vcGlkLCBldmVudF9zaWduX3VwLmFkZGVkYnksIGV2ZW50X3NpZ25fdXAuc3RhdHVzLCBldmVudF9zaWduX3VwLnNpZ251cHRpbWUsIHRyb29wZXJzLmlkIEFTIHRyb29wZXJJZCwgdHJvb3BlcnMubmFtZSwgdHJvb3BlcnMudGtpZCwgdHJvb3BlcnMuc3F1YWQgRlJPTSBldmVudF9zaWduX3VwIEpPSU4gdHJvb3BlcnMgT04gdHJvb3BlcnMuaWQgPSBldmVudF9zaWduX3VwLnRyb29wZXJpZCBXSEVSRSB0cm9vcGlkID0gJyIuY2xlYW5JbnB1dCgkX1BPU1RbJ2V2ZW50J10pLiInIE9SREVSIEJZIGV2ZW50X3NpZ25fdXAuaWQgQVNDIjsKCQkJCSRpID0gMDsKCgkJCQlpZiAoJHJlc3VsdDIgPSBteXNxbGlfcXVlcnkoJGNvbm4sICRxdWVyeTIpKQoJCQkJewoJCQkJCXdoaWxlICgkZGIyID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0MikpCgkJCQkJewoJCQkJCQkvLyBVc2UgdGhpcyBmb3IgbGF0ZXIgdG8gZGV0ZXJtaW5lIHdoaWNoIHNlbGVjdCBib3ggdG8gc2hvdy4uLgoJCQkJCQkkc3RhdHVzID0gJGRiMi0+c3RhdHVzOwoKCQkJCQkJLy8gSWYgbm8gZXZlbnRzIHRvIHNob3cuLi4KCQkJCQkJaWYoJGkgPT0gMCkKCQkJCQkJewoJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJPGZvcm0gYWN0aW9uPSJwcm9jZXNzLnBocD9kbz1tb2RpZnlzaWdudXAiIG1ldGhvZD0iUE9TVCIgbmFtZT0ibW9kaWZ5c2lnbnVwRm9ybSIgaWQ9Im1vZGlmeXNpZ251cEZvcm0iPgoJCQkJCQkJCgkJCQkJCQk8IS0tIEhpZGRlbiB2YXJpYWJsZXMgLS0+CgkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJtb2RpZnlzaWdudXBUcm9vcElkRm9ybSIgaWQ9Im1vZGlmeXNpZ251cFRyb29wSWRGb3JtIiB2YWx1ZT0iJy4kZGItPmlkLiciIC8+CgkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJsaW1pdGVkRXZlbnRDYW5jZWwiIGlkPSJsaW1pdGVkRXZlbnRDYW5jZWwiIHZhbHVlPSInLiRkYi0+bGltaXRlZEV2ZW50LiciIC8+CgkJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0cm9vcGlkQyIgaWQ9InRyb29waWRDIiB2YWx1ZT0iJy5jbGVhbklucHV0KCRfUE9TVFsnZXZlbnQnXSkuJyIgLz4KCQkJCQkJCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Im15SWQiIGlkPSJteUlkIiB2YWx1ZT0iJy5jbGVhbklucHV0KCRfU0VTU0lPTlsnaWQnXSkuJyIgLz4KCgkJCQkJCQk8ZGl2IHN0eWxlPSJvdmVyZmxvdy14OiBhdXRvOyI+CgkJCQkJCQk8dGFibGUgYm9yZGVyPSIxIj4KCQkJCQkJCTx0cj4KCQkJCQkJCQk8dGg+VHJvb3BlciBOYW1lPC90aD4JPHRoPlRLSUQ8L3RoPgk8dGg+Q29zdHVtZTwvdGg+CTx0aD5CYWNrdXAgQ29zdHVtZTwvdGg+CTx0aD5TdGF0dXM8L3RoPgoJCQkJCQkJPC90cj4nOwoJCQkJCQl9CgoJCQkJCQkvLyBBbGxvdyBmb3IgdXNlcnMgdG8gZWRpdCB0aGVpciBzdGF0dXMgZnJvbSB0aGUgZXZlbnQsIGFuZCBtYWtlIHN1cmUgdGhlIGV2ZW50IGlzIG5vdCBjbG9zZWQsIGFuZCB0aGUgdXNlciBkaWQgbm90IGNhbmNlbAoJCQkJCQlpZihsb2dnZWRJbigpICYmICgkZGIyLT50cm9vcGVySWQgPT0gJF9TRVNTSU9OWydpZCddIHx8ICRfU0VTU0lPTlsnaWQnXSA9PSAkZGIyLT5hZGRlZGJ5KSAmJiAkZGItPmNsb3NlZCA9PSAwICYmICRkYjItPnN0YXR1cyAhPSA0KQoJCQkJCQl7CgkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQk8dHI+CgkJCQkJCQkJPHRkPgoJCQkJCQkJCQknLmRyYXdTdXBwb3J0QmFkZ2UoJGRiMi0+dHJvb3BlcklkKS4nCgkJCQkJCQkJCTxhIGhyZWY9ImluZGV4LnBocD9wcm9maWxlPScuJGRiMi0+dHJvb3BlcklkLiciPicuJGRiMi0+bmFtZS4nPC9hPic7CgoJCQkJCQkJCQkvLyBTaG93IHdobyBhZGRlZCB0aGUgdHJvb3BlcgoJCQkJCQkJCQlpZigkZGIyLT5hZGRlZGJ5ICE9IDApCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCTxiciAvPjxzbWFsbD5BZGRlZCBieTo8YnIgLz4nIC4gZ2V0TmFtZSgkZGIyLT5hZGRlZGJ5KSAuICc8L3NtYWxsPic7CgkJCQkJCQkJCX0KCgkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCQoJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJJy5yZWFkVEtOdW1iZXIoJGRiMi0+dGtpZCwgJGRiMi0+c3F1YWQpLicKCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQoJCQkJCQkJCTx0ZCBuYW1lPSJ0cm9vcGVyUm9zdGVyQ29zdHVtZSIgaWQ9InRyb29wZXJSb3N0ZXJDb3N0dW1lIj4KCQkJCQkJCQkJPHNlbGVjdCBuYW1lPSJtb2RpZnlzaWdudXBGb3JtQ29zdHVtZSIgdHJvb3BlcmlkPSInLiRkYjItPnRyb29wZXJJZC4nIiBzaWduaWQ9IicuJGRiMi0+c2lnbklkLiciPic7CgoJCQkJCQkJCQkvLyBEaXNwbGF5IGNvc3R1bWVzCgkJCQkJCQkJCSRxdWVyeTMgPSAiU0VMRUNUICogRlJPTSBjb3N0dW1lcyBXSEVSRSAiOwoJCQkJCQkJCQkKCQkJCQkJCQkJLy8gSWYgbGltaXRlZCB0byBjZXJ0YWluIGNvc3R1bWVzLCBvbmx5IHNob3cgY2VydGFpbiBjb3N0dW1lcy4uLgoJCQkJCQkJCQlpZigkZGItPmxpbWl0VG8gPCA0KQoJCQkJCQkJCQl7CgkJCQkJCQkJCQkkcXVlcnkzIC49ICIgZXJhID0gJyIuJGRiLT5saW1pdFRvLiInIE9SIGVyYSA9ICc0JyBBTkQgIjsKCQkJCQkJCQkJfQoJCQkJCQkJCQkKCQkJCQkJCQkJJHF1ZXJ5MyAuPSBjb3N0dW1lX3Jlc3RyaWN0X3F1ZXJ5KCkgLiAiIE9SREVSIEJZIEZJRUxEKGNvc3R1bWUsICIuJG1haW5Db3N0dW1lcy4iIi5nZXRNeUNvc3R1bWVzKGdldFRLTnVtYmVyKCRkYjItPnRyb29wZXJJZCksIGdldFRyb29wZXJTcXVhZCgkZGIyLT50cm9vcGVySWQpKS4iKSBERVNDLCBjb3N0dW1lIjsKCQkJCQkJCQkJCgkJCQkJCQkJCWlmICgkcmVzdWx0MyA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5MykpCgkJCQkJCQkJCXsKCQkJCQkJCQkJCXdoaWxlICgkZGIzID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0MykpCgkJCQkJCQkJCQl7CgkJCQkJCQkJCQkJaWYoJGRiMi0+Y29zdHVtZSA9PSAkZGIzLT5pZCkKCQkJCQkJCQkJCQl7CgkJCQkJCQkJCQkJCS8vIElmIHRoaXMgaXMgdGhlIHNlbGVjdGVkIGNvc3R1bWUsIG1ha2UgaXQgc2VsZWN0ZWQKCQkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSInLiAkZGIzLT5pZCAuJyIgU0VMRUNURUQ+Jy4kZGIzLT5jb3N0dW1lLic8L29wdGlvbj4nOwoJCQkJCQkJCQkJCX0KCQkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJewoJCQkJCQkJCQkJCQkvLyBEZWZhdWx0CgkJCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iJy4gJGRiMy0+aWQgLiciPicuJGRiMy0+Y29zdHVtZS4nPC9vcHRpb24+JzsKCQkJCQkJCQkJCQl9CgkJCQkJCQkJCQl9CgkJCQkJCQkJCX0KCgkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJPC9zZWxlY3Q+CgkJCQkJCQkJPC90ZD4KCQkJCQkJCQkKCQkJCQkJCQk8dGQgbmFtZT0idHJvb3BlclJvc3RlckJhY2t1cCIgaWQ9InRyb29wZXJSb3N0ZXJCYWNrdXAiPgoJCQkJCQkJCQk8c2VsZWN0IG5hbWU9Im1vZGlmdHliYWNrdXBjb3N0dW1lRm9ybSIgdHJvb3BlcmlkPSInLiRkYjItPnRyb29wZXJJZC4nIiBzaWduaWQ9IicuJGRiMi0+c2lnbklkLiciPic7CgoJCQkJCQkJCQkvLyBEaXNwbGF5IGNvc3R1bWVzCgkJCQkJCQkJCSRxdWVyeTMgPSAiU0VMRUNUICogRlJPTSBjb3N0dW1lcyBXSEVSRSAiOwoJCQkJCQkJCQkKCQkJCQkJCQkJLy8gSWYgbGltaXRlZCB0byBjZXJ0YWluIGNvc3R1bWVzLCBvbmx5IHNob3cgY2VydGFpbiBjb3N0dW1lcy4uLgoJCQkJCQkJCQlpZigkZGItPmxpbWl0VG8gPCA0KQoJCQkJCQkJCQl7CgkJCQkJCQkJCQkkcXVlcnkzIC49ICIgZXJhID0gJyIuJGRiLT5saW1pdFRvLiInIE9SIGVyYSA9ICc0JyBBTkQgIjsKCQkJCQkJCQkJfQoJCQkJCQkJCQkKCQkJCQkJCQkJJHF1ZXJ5MyAuPSBjb3N0dW1lX3Jlc3RyaWN0X3F1ZXJ5KCkgLiAiIE9SREVSIEJZIEZJRUxEKGNvc3R1bWUsICIuJG1haW5Db3N0dW1lcy4iIi5nZXRNeUNvc3R1bWVzKGdldFRLTnVtYmVyKCRkYjItPnRyb29wZXJJZCksIGdldFRyb29wZXJTcXVhZCgkZGIyLT50cm9vcGVySWQpKS4iKSBERVNDLCBjb3N0dW1lIjsKCQkJCQkJCQkJCgkJCQkJCQkJCS8vIENvdW50IHJlc3VsdHMKCQkJCQkJCQkJJGMgPSAwOwoJCQkJCQkJCQkKCQkJCQkJCQkJLy8gQW1vdW50IG9mIGNvc3R1bWVzCgkJCQkJCQkJCWlmICgkcmVzdWx0MyA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5MykpCgkJCQkJCQkJCXsKCQkJCQkJCQkJCXdoaWxlICgkZGIzID0gbXlzcWxpX2ZldGNoX29iamVjdCgkcmVzdWx0MykpCgkJCQkJCQkJCQl7CgkJCQkJCQkJCQkJLy8gSWYgY29zdHVtZSBzZXQgdG8gYmFja3VwIGFuZCBmaXJzdCByZXN1bHQKCQkJCQkJCQkJCQlpZigkZGIyLT5jb3N0dW1lX2JhY2t1cCA9PSAwICYmICRjID09IDApCgkJCQkJCQkJCQkJewoJCQkJCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjAiIFNFTEVDVEVEPk4vQTwvb3B0aW9uPic7CgkJCQkJCQkJCQkJfQoJCQkJCQkJCQkJCS8vIE1ha2Ugc3VyZSB0aGlzIGlzIGEgZmlyc3QgcmVzdWx0IG90aGVyd2lzZQoJCQkJCQkJCQkJCWVsc2UgaWYoJGMgPT0gMCkKCQkJCQkJCQkJCQl7CgkJCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMCI+Ti9BPC9vcHRpb24+JzsKCQkJCQkJCQkJCQl9CgkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJLy8gSWYgYSBjb3N0dW1lIG1hdGNoZXMKCQkJCQkJCQkJCQlpZigkZGIyLT5jb3N0dW1lX2JhY2t1cCA9PSAkZGIzLT5pZCkKCQkJCQkJCQkJCQl7CgkJCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iJy4kZGIzLT5pZC4nIiBTRUxFQ1RFRD4nLiRkYjMtPmNvc3R1bWUuJzwvb3B0aW9uPic7CgkJCQkJCQkJCQkJfQoJCQkJCQkJCQkJCS8vIFN0YXJ0IHNob3dpbmcgY29zdHVtZXMKCQkJCQkJCQkJCQllbHNlCgkJCQkJCQkJCQkJewoJCQkJCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IicuJGRiMy0+aWQuJyI+Jy4kZGIzLT5jb3N0dW1lLic8L29wdGlvbj4nOwoJCQkJCQkJCQkJCX0KCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkvLyBJbmNyZW1lbnQKCQkJCQkJCQkJCQkkYysrOwoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9CgoJCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJCTwvc2VsZWN0PgoJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCgkJCQkJCQkJPHRkIGlkPSInLiRkYjItPnRyb29wZXJJZC4nU3RhdHVzIiBhcmlhLWxhYmVsPSInLmRhdGUoIkYgaiwgWSwgZzppOnMgYSIsIHN0cnRvdGltZSgkZGIyLT5zaWdudXB0aW1lKSkuJyIgZGF0YS1iYWxsb29uLXBvcz0idXAiPgoJCQkJCQkJCTxkaXYgbmFtZT0idHJvb3BlclJvc3RlclN0YXR1cyI+JzsKCQkJCQkJCQkKCQkJCQkJCQkJaWYoJGRiLT5saW1pdGVkRXZlbnQgIT0gMSkKCQkJCQkJCQkJewoJCQkJCQkJCQkJLy8gSWYgb24gc3RhbmQgYnkKCQkJCQkJCQkJCWlmKCRkYjItPnN0YXR1cyA9PSAxKQoJCQkJCQkJCQkJewoJCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCQk8c2VsZWN0IG5hbWU9Im1vZGlmeXNpZ251cFN0YXR1c0Zvcm0iIGlkPSJtb2RpZnlzaWdudXBTdGF0dXNGb3JtIiB0cm9vcGVyaWQ9IicuJGRiMi0+dHJvb3BlcklkLiciIHNpZ25pZD0iJy4kZGIyLT5zaWduSWQuJyI+CgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjAiICcuZWNob1NlbGVjdCgxLCAkZGIyLT5zdGF0dXMpLic+U3RhbmQgQnk8L29wdGlvbj4KCQkJCQkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iNCIgJy5lY2hvU2VsZWN0KDQsICRkYjItPnN0YXR1cykuJz5DYW5jZWw8L29wdGlvbj4KCQkJCQkJCQkJCQk8L3NlbGVjdD4nOwoJCQkJCQkJCQkJfQoJCQkJCQkJCQkJLy8gUmVndWxhcgoJCQkJCQkJCQkJZWxzZQoJCQkJCQkJCQkJewoJCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCQk8c2VsZWN0IG5hbWU9Im1vZGlmeXNpZ251cFN0YXR1c0Zvcm0iIGlkPSJtb2RpZnlzaWdudXBTdGF0dXNGb3JtIiB0cm9vcGVyaWQ9IicuJGRiMi0+dHJvb3BlcklkLiciIHNpZ25pZD0iJy4kZGIyLT5zaWduSWQuJyI+CgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjAiICcuZWNob1NlbGVjdCgwLCAkZGIyLT5zdGF0dXMpLic+SVwnbGwgYmUgdGhlcmUhPC9vcHRpb24+CgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIiICcuZWNob1NlbGVjdCgyLCAkZGIyLT5zdGF0dXMpLic+VGVudGF0aXZlPC9vcHRpb24+CgkJCQkJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjQiICcuZWNob1NlbGVjdCg0LCAkZGIyLT5zdGF0dXMpLic+Q2FuY2VsPC9vcHRpb24+CgkJCQkJCQkJCQkJPC9zZWxlY3Q+JzsKCQkJCQkJCQkJCX0KCQkJCQkJCQkJfQoJCQkJCQkJCQllbHNlCgkJCQkJCQkJCXsKCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCTxkaXYgbmFtZT0iY2hhbmdlc3RhdHVzYXJlYSIgdHJvb3BlcmlkPSInLiRkYjItPnRyb29wZXJJZC4nIiBzaWduaWQ9IicuJGRiMi0+c2lnbklkLiciPgoJCQkJCQkJCQkJKFBlbmRpbmcgQ29tbWFuZCBTdGFmZiBBcHByb3ZhbCknOwoKCQkJCQkJCQkJCS8vIElmIGlzIGFkbWluIGFuZCBsaW1pdGVkIGV2ZW50CgkJCQkJCQkJCQlpZihpc0FkbWluKCkgJiYgJGRiLT5saW1pdGVkRXZlbnQgPT0gMSkKCQkJCQkJCQkJCXsKCQkJCQkJCQkJCQkvLyBTZXQgc3RhdHVzCgkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCTxiciAvPgoJCQkJCQkJCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGIyLT50cm9vcGVySWQuJyIgc2lnbmlkPSInLiRkYjItPnNpZ25JZC4nIiBidXR0b25pZD0iMSI+QXBwcm92ZTwvYT4KCQkJCQkJCQkJCQk8YnIgLz4KCQkJCQkJCQkJCQk8YSBocmVmPSIjLyIgY2xhc3M9ImJ1dHRvbiIgbmFtZT0iY2hhbmdlc3RhdHVzIiB0cm9vcGVyaWQ9IicuJGRiMi0+dHJvb3BlcklkLiciIHNpZ25pZD0iJy4kZGIyLT5zaWduSWQuJyIgYnV0dG9uaWQ9IjAiPlJlamVjdDwvYT4nOwoJCQkJCQkJCQkJfQoKCQkJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQkJCTwvZGl2Pic7CQkJCQkJCQkKCQkJCQkJCQkJfQoKCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJPC90ZD4KCQkJCQkJCTwvdHI+JzsKCQkJCQkJfQoJCQkJCQkvLyBJZiB0aGlzIGlzIHRoZSB1c2VyLCBhbmQgdGhlIHVzZXIgY2FuY2VsZWQsIGFsbG93IHRvIGJlIGVkaXRlZAoJCQkJCQllbHNlIGlmKGxvZ2dlZEluKCkgJiYgKCRkYjItPnRyb29wZXJJZCA9PSAkX1NFU1NJT05bJ2lkJ10gfHwgJF9TRVNTSU9OWydpZCddID09ICRkYjItPmFkZGVkYnkpICYmICRkYi0+Y2xvc2VkID09IDAgJiYgJGRiMi0+c3RhdHVzID09IDQpCgkJCQkJCXsKCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCTx0cj4KCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCScuZHJhd1N1cHBvcnRCYWRnZSgkZGIyLT50cm9vcGVySWQpLicKCQkJCQkJCQkJPGEgaHJlZj0iaW5kZXgucGhwP3Byb2ZpbGU9Jy4kZGIyLT50cm9vcGVySWQuJyI+Jy4kZGIyLT5uYW1lLic8L2E+JzsKCgkJCQkJCQkJCS8vIFNob3cgd2hvIGFkZGVkIHRoZSB0cm9vcGVyCgkJCQkJCQkJCWlmKCRkYjItPmFkZGVkYnkgIT0gMCkKCQkJCQkJCQkJewoJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJPGJyIC8+PHNtYWxsPkFkZGVkIGJ5OjxiciAvPicgLiBnZXROYW1lKCRkYjItPmFkZGVkYnkpIC4gJzwvc21hbGw+JzsKCQkJCQkJCQkJfQoKCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJPC90ZD4KCQkJCQkJCQkJCgkJCQkJCQkJPHRkPgoJCQkJCQkJCQknLnJlYWRUS051bWJlcigkZGIyLT50a2lkLCAkZGIyLT5zcXVhZCkuJwoJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCgkJCQkJCQkJPHRkIG5hbWU9InRyb29wZXJSb3N0ZXJDb3N0dW1lIj4KCQkJCQkJCQkJJy5nZXRDb3N0dW1lKCRkYjItPmNvc3R1bWUpLicKCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQoJCQkJCQkJCTx0ZCBuYW1lPSJ0cm9vcGVyUm9zdGVyQmFja3VwIj4KCQkJCQkJCQkJJy5pZkVtcHR5KGdldENvc3R1bWUoJGRiMi0+Y29zdHVtZV9iYWNrdXApLCAiTi9BIikuJwoJCQkJCQkJCTwvdGQ+CgkJCQkJCQkJCgkJCQkJCQkJPHRkIGlkPSInLiRkYjItPnRyb29wZXJJZC4nU3RhdHVzIiBhcmlhLWxhYmVsPSInLmRhdGUoIkYgaiwgWSwgZzppOnMgYSIsIHN0cnRvdGltZSgkZGIyLT5zaWdudXB0aW1lKSkuJyIgZGF0YS1iYWxsb29uLXBvcz0idXAiPgoJCQkJCQkJCTxkaXYgbmFtZT0idHJvb3BlclJvc3RlclN0YXR1cyI+CgkJCQkJCQkJPGRpdiBuYW1lPSJjaGFuZ2VzdGF0dXNhcmVhIiB0cm9vcGVyaWQ9IicuJGRiMi0+dHJvb3BlcklkLiciIHNpZ25pZD0iJy4kZGIyLT5zaWduSWQuJyI+CgkJCQkJCQkJCScuZ2V0U3RhdHVzKCRkYjItPnN0YXR1cyk7CgoJCQkJCQkJCQkvLyBJZiBpcyBhZG1pbiBhbmQgbGltaXRlZCBldmVudAoJCQkJCQkJCQlpZihpc0FkbWluKCkgJiYgJGRiLT5saW1pdGVkRXZlbnQgPT0gMSkKCQkJCQkJCQkJewoJCQkJCQkJCQkJLy8gSWYgc2V0IHRvIGdvaW5nCgkJCQkJCQkJCQlpZigkZGIyLT5zdGF0dXMgPT0gMCkKCQkJCQkJCQkJCXsKCQkJCQkJCQkJCQkvLyBTZXQgc3RhdHVzCgkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCTxiciAvPgoJCQkJCQkJCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGIyLT50cm9vcGVySWQuJyIgc2lnbmlkPSInLiRkYjItPnNpZ25JZC4nIiBidXR0b25pZD0iMCI+UmVqZWN0PC9hPic7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQkvLyBJZiBzZXQgdG8gbm90IHBpY2tlZAoJCQkJCQkJCQkJZWxzZSBpZigkZGIyLT5zdGF0dXMgPT0gNikKCQkJCQkJCQkJCXsKCQkJCQkJCQkJCQkvLyBTZXQgc3RhdHVzCgkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCTxiciAvPgoJCQkJCQkJCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGIyLT50cm9vcGVySWQuJyIgc2lnbmlkPSInLiRkYjItPnNpZ25JZC4nIiBidXR0b25pZD0iMSI+QXBwcm92ZTwvYT4nOwoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9CgoJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L3RkPgoJCQkJCQkJPC90cj4nOwoJCQkJCQl9CgkJCQkJCWVsc2UKCQkJCQkJewoJCQkJCQkJLy8gSWYgYSB1c2VyIG90aGVyIHRoYW4gdGhlIGN1cnJlbnQgdXNlcgoJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJPHRyPgoJCQkJCQkJCTx0ZD4KCQkJCQkJCQkJJy5kcmF3U3VwcG9ydEJhZGdlKCRkYjItPnRyb29wZXJJZCkuJwoJCQkJCQkJCQk8YSBocmVmPSJpbmRleC5waHA/cHJvZmlsZT0nLiRkYjItPnRyb29wZXJJZC4nIj4nLiRkYjItPm5hbWUuJzwvYT4nOwoKCQkJCQkJCQkJLy8gU2hvdyB3aG8gYWRkZWQgdGhlIHRyb29wZXIKCQkJCQkJCQkJaWYoJGRiMi0+YWRkZWRieSAhPSAwKQoJCQkJCQkJCQl7CgkJCQkJCQkJCQkkZGF0YSAuPSAnCgkJCQkJCQkJCQk8YnIgLz48c21hbGw+QWRkZWQgYnk6PGJyIC8+JyAuIGdldE5hbWUoJGRiMi0+YWRkZWRieSkgLiAnPC9zbWFsbD4nOwoJCQkJCQkJCQl9CgoJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQkKCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCScucmVhZFRLTnVtYmVyKCRkYjItPnRraWQsICRkYjItPnNxdWFkKS4nCgkJCQkJCQkJPC90ZD4KCQkJCQkJCQkKCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCScuZ2V0Q29zdHVtZSgkZGIyLT5jb3N0dW1lKS4nCgkJCQkJCQkJPC90ZD4KCQkJCQkJCQkKCQkJCQkJCQk8dGQ+CgkJCQkJCQkJCScuaWZFbXB0eShnZXRDb3N0dW1lKCRkYjItPmNvc3R1bWVfYmFja3VwKSwgIk4vQSIpLicKCQkJCQkJCQk8L3RkPgoJCQkJCQkJCQoJCQkJCQkJCTx0ZCBpZD0iJy4kZGIyLT50cm9vcGVySWQuJ1N0YXR1cyIgYXJpYS1sYWJlbD0iJy5kYXRlKCJGIGosIFksIGc6aTpzIGEiLCBzdHJ0b3RpbWUoJGRiMi0+c2lnbnVwdGltZSkpLiciIGRhdGEtYmFsbG9vbi1wb3M9InVwIj4KCQkJCQkJCQkJPGRpdiBuYW1lPSJjaGFuZ2VzdGF0dXNhcmVhIiB0cm9vcGVyaWQ9IicuJGRiMi0+dHJvb3BlcklkLiciIHNpZ25pZD0iJy4kZGIyLT5zaWduSWQuJyI+CgkJCQkJCQkJCScuZ2V0U3RhdHVzKCRkYjItPnN0YXR1cyk7CgoJCQkJCQkJCQkvLyBJZiBpcyBhZG1pbiBhbmQgbGltaXRlZCBldmVudAoJCQkJCQkJCQlpZihpc0FkbWluKCkgJiYgJGRiLT5saW1pdGVkRXZlbnQgPT0gMSkKCQkJCQkJCQkJewoJCQkJCQkJCQkJLy8gSWYgc2V0IHRvIGdvaW5nCgkJCQkJCQkJCQlpZigkZGIyLT5zdGF0dXMgPT0gMCkKCQkJCQkJCQkJCXsKCQkJCQkJCQkJCQkvLyBTZXQgc3RhdHVzCgkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCTxiciAvPgoJCQkJCQkJCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGIyLT50cm9vcGVySWQuJyIgc2lnbmlkPSInLiRkYjItPnNpZ25JZC4nIiBidXR0b25pZD0iMCI+UmVqZWN0PC9hPic7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQkvLyBJZiBzZXQgdG8gbm90IHBpY2tlZAoJCQkJCQkJCQkJZWxzZSBpZigkZGIyLT5zdGF0dXMgPT0gNikKCQkJCQkJCQkJCXsKCQkJCQkJCQkJCQkvLyBTZXQgc3RhdHVzCgkJCQkJCQkJCQkJJGRhdGEgLj0gJwoJCQkJCQkJCQkJCTxiciAvPgoJCQkJCQkJCQkJCTxhIGhyZWY9IiMvIiBjbGFzcz0iYnV0dG9uIiBuYW1lPSJjaGFuZ2VzdGF0dXMiIHRyb29wZXJpZD0iJy4kZGIyLT50cm9vcGVySWQuJyIgc2lnbmlkPSInLiRkYjItPnNpZ25JZC4nIiBidXR0b25pZD0iMSI+QXBwcm92ZTwvYT4nOwoJCQkJCQkJCQkJfQoJCQkJCQkJCQl9CgoJCQkJCQkJCSRkYXRhIC49ICcKCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQk8L3RkPgoJCQkJCQkJPC90cj4nOwoJCQkJCQl9CgoJCQkJCQkvLyBJbmNyZW1lbnQgdHJvb3BlciBjb3VudAoJCQkJCQkkaSsrOwoJCQkJCX0KCQkJCX0KCgkJCQlpZigkaSA9PSAwKQoJCQkJewoJCQkJCSRkYXRhIC49ICcKCQkJCQk8Yj5ObyB0cm9vcGVycyBoYXZlIHNpZ25lZCB1cCBmb3IgdGhpcyBldmVudCE8L2I+CgkJCQkJPGJyIC8+CgkJCQkJPGJyIC8+JzsKCQkJCX0KCQkJCWVsc2UKCQkJCXsKCQkJCQkkZGF0YSAuPSAnPC90YWJsZT4KCQkJCQk8L2Rpdj4KCQkJCQk8L2Zvcm0+JzsKCQkJCX0KCgkJCQlpZighaXNzZXQoJF9QT1NUWydhZGRmcmllbmQnXSkpCgkJCQl7CgkJCQkJJGRhdGEgLj0gJwoJCQkJCTxociAvPgoJCQkJCTxkaXYgbmFtZT0ic2lnbmVkdXBhcmVhIiBpZD0ic2lnbmVkdXBhcmVhIj4KCQkJCQkJPHA+PGI+WW91IGFyZSBzaWduZWQgdXAgZm9yIHRoaXMgdHJvb3AhPC9iPjwvcD4KCQkJCQk8L2Rpdj4nOwoJCQkJfQoKCQkJCS8vIFVwZGF0ZSB0cm9vcGVycyByZW1haW5pbmcKCQkJCSRkYXRhMiA9ICcKCQkJCTx1bD4KCQkJCQk8bGk+VGhpcyBldmVudCBpcyBsaW1pdGVkIHRvICcuJGxpbWl0VG90YWwuJyB0cm9vcGVycy4gJzsKCgkJCQkJLy8gQ2hlY2sgZm9yIHRvdGFsIGxpbWl0IHNldCwgaWYgaXQgaXMsIGFkZCByZW1haW5pbmcgdHJvb3BlcnMKCQkJCQlpZigkdG90YWxUcm9vcGVyRXZlbnQpCgkJCQkJewoJCQkJCQkkZGF0YTIgLj0gJwoJCQkJCQknIC4gdHJvb3BlcnNSZW1haW5pbmcoJGxpbWl0VG90YWwsIGV2ZW50Q2x1YkNvdW50KCRkYi0+aWQsICJhbGwiKSkgLiAnPC9saT4nOwoJCQkJCX0KCQkJCQllbHNlCgkJCQkJewoJCQkJCQkkZGF0YTIgLj0gJwoJCQkJCQk8bGk+VGhpcyBldmVudCBpcyBsaW1pdGVkIHRvICcuJGRiLT5saW1pdDUwMXN0LicgNTAxc3QgdHJvb3BlcnMuICcudHJvb3BlcnNSZW1haW5pbmcoJGRiLT5saW1pdDUwMXN0LCBldmVudENsdWJDb3VudCgkZGItPmlkLCAwKSkuJyA8L2xpPic7CgoJCQkJCQkvLyBTZXQgdXAgY2x1YiBjb3VudAoJCQkJCQkkY2x1YkNvdW50ID0gMTsKCgkJCQkJCS8vIExvb3AgdGhyb3VnaCBjbHVicwoJCQkJCQlmb3JlYWNoKCRjbHViQXJyYXkgYXMgJGNsdWIgPT4gJGNsdWJfdmFsdWUpCgkJCQkJCXsKCQkJCQkJCSRkYXRhMiAuPSAnCgkJCQkJCQk8bGk+VGhpcyBldmVudCBpcyBsaW1pdGVkIHRvICcuJGRiLT57JGNsdWJfdmFsdWVbJ2RiTGltaXQnXX0uJyAnLiAkY2x1Yl92YWx1ZVsnbmFtZSddIC4nIHRyb29wZXJzLiAnLnRyb29wZXJzUmVtYWluaW5nKCRkYi0+eyRjbHViX3ZhbHVlWydkYkxpbWl0J119LCBldmVudENsdWJDb3VudCgkZGItPmlkLCAkY2x1YkNvdW50KSkuJzwvbGk+JzsKCgkJCQkJCQkvLyBJbmNyZW1lbnQgY2x1YiBjb3VudAoJCQkJCQkJJGNsdWJDb3VudCsrOwoJCQkJCQl9CgkJCQkJfQoKCQkJCSRkYXRhMiAuPSAnCgkJCQk8L3VsPic7CgoJCQkJLy8gU2VuZCBiYWNrIGRhdGEKCQkJCSRhcnJheSA9IGFycmF5KCdzdWNjZXNzJyA9PiAnc3VjY2VzcycsICdkYXRhJyA9PiAkZGF0YSwgJ2lkJyA9PiAkX1NFU1NJT05bJ2lkJ10sICd0cm9vcGVyc1JlbWFpbmluZycgPT4gJGRhdGEyKTsKCQkJCWVjaG8ganNvbl9lbmNvZGUoJGFycmF5KTsKCQkJfQoJCX0KCX0KfQoKaWYoaXNzZXQoJF9HRVRbJ2RvJ10pICYmICRfR0VUWydkbyddID09ICJjb25maXJtTGlzdCIpCnsKCS8vIENvbmZpcm0gZnJvbSBjb25maXJtIGxpc3QKCWlmKGlzc2V0KCRfUE9TVFsnc3VibWl0Q29uZmlybUxpc3QnXSkpCgl7CgkJLy8gQ3JlYXRlIGFycmF5cwoJCSRsaXN0ID0gW107CgoJCS8vIElmIHNldCB0byBhdm9pZCBlcnJvcgoJCWlmKGlzc2V0KCRfUE9TVFsnY29uZmlybUxpc3QnXSkpCgkJewoJCQkkbGlzdCA9ICRfUE9TVFsnY29uZmlybUxpc3QnXTsKCQl9CgoJCS8vIE1ha2Ugc3VyZSB0cm9vcCBsaXN0IGFuZCBjb3N0dW1lIGlzIG5vdCBibGFuawoJCWlmKCFlbXB0eSgkbGlzdCkgJiYgJF9QT1NUWydjb3N0dW1lJ10gIT0gIiIpIAoJCXsKCQkJJG4gPSBjb3VudCgkbGlzdCk7CgoJCQlmb3IoJGkgPSAwOyAkaSA8ICRuOyAkaSsrKQoJCQl7CgkJCQkvLyBRdWVyeSB0aGUgZGF0YWJhc2UKCQkJCSRjb25uLT5xdWVyeSgiVVBEQVRFIGV2ZW50X3NpZ25fdXAgU0VUIGNvc3R1bWUgPSAnIi5jbGVhbklucHV0KCRfUE9TVFsnY29zdHVtZSddKS4iJywgc3RhdHVzID0gJzMnIFdIRVJFIHRyb29wZXJpZCA9ICciLiRfU0VTU0lPTlsnaWQnXS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJGxpc3RbJGldKS4iJyIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQl9CgkJCQoJCQkvLyBDaGVjayB0cm9vcHMgZm9yIG5vdGlmaWNhdGlvbgoJCQl0cm9vcENoZWNrKCRfU0VTU0lPTlsnaWQnXSk7CgkJfQoJfQoKCS8vIERlbGV0ZSBmcm9tIGNvbmZpcm0gbGlzdAoJaWYoaXNzZXQoJF9QT1NUWydzdWJtaXRDb25maXJtTGlzdERlbGV0ZSddKSkKCXsKCQkvLyBDcmVhdGUgYXJyYXlzCgkJJGxpc3QgPSBbXTsKCgkJLy8gSWYgc2V0IHRvIGF2b2lkIGVycm9yCgkJaWYoaXNzZXQoJF9QT1NUWydjb25maXJtTGlzdCddKSkKCQl7CgkJCSRsaXN0ID0gJF9QT1NUWydjb25maXJtTGlzdCddOwoJCX0KCgkJaWYoIWVtcHR5KCRsaXN0KSkgCgkJewoJCQkkbiA9IGNvdW50KCRsaXN0KTsKCgkJCWZvcigkaSA9IDA7ICRpIDwgJG47ICRpKyspCgkJCXsKCQkJCS8vIFF1ZXJ5IHRoZSBkYXRhYmFzZQoJCQkJJGNvbm4tPnF1ZXJ5KCJVUERBVEUgZXZlbnRfc2lnbl91cCBTRVQgc3RhdHVzID0gJzQnIFdIRVJFIHRyb29wZXJpZCA9ICciLiRfU0VTU0lPTlsnaWQnXS4iJyBBTkQgdHJvb3BpZCA9ICciLmNsZWFuSW5wdXQoJGxpc3RbJGldKS4iJyIpIG9yIGRpZSgkY29ubi0+ZXJyb3IpOwoJCQl9CgkJfQoJfQoKCS8vIFNlbmQgYmFjayBBSkFYIGRhdGEKCgkvLyBXaGF0IHdlIGFyZSBnb2luZyB0byBzZW5kIGJhY2sKCSRkYXRhTWFpbiA9ICIiOwoKCS8vIExvYWQgZXZlbnRzIHRoYXQgbmVlZCBjb25maXJtYXRpb24KCSRxdWVyeSA9ICJTRUxFQ1QgZXZlbnRzLmlkIEFTIGV2ZW50SWQsIGV2ZW50cy5uYW1lLCBldmVudHMuZGF0ZVN0YXJ0LCBldmVudHMuZGF0ZUVuZCwgZXZlbnRfc2lnbl91cC5pZCBBUyBzaWdudXBJZCwgZXZlbnRfc2lnbl91cC50cm9vcGlkLCBldmVudF9zaWduX3VwLnRyb29wZXJpZCBGUk9NIGV2ZW50cyBMRUZUIEpPSU4gZXZlbnRfc2lnbl91cCBPTiBldmVudF9zaWduX3VwLnRyb29waWQgPSBldmVudHMuaWQgV0hFUkUgZXZlbnRfc2lnbl91cC50cm9vcGVyaWQgPSAnIi4kX1NFU1NJT05bJ2lkJ10uIicgQU5EIGV2ZW50cy5kYXRlRW5kIDwgTk9XKCkgQU5EIHN0YXR1cyA8IDMgQU5EIGV2ZW50cy5jbG9zZWQgPSAxIjsKCglpZiAoJHJlc3VsdCA9IG15c3FsaV9xdWVyeSgkY29ubiwgJHF1ZXJ5KSkKCXsKCQkvLyBOdW1iZXIgb2YgcmVzdWx0cyB0b3RhbAoJCSRpID0gMDsKCgkJd2hpbGUgKCRkYiA9IG15c3FsaV9mZXRjaF9vYmplY3QoJHJlc3VsdCkpCgkJewoJCQkvLyBJZiBhIHNoaWZ0IGV4aXN0cyB0byBhdHRlc3QgdG8KCQkJJGkrKzsKCgkJCS8vIFNob3cgY29uZmlybQoJCQkkZGF0YU1haW4gLj0gJwoJCQk8ZGl2IG5hbWU9ImNvbmZpcm1MaXN0Qm94XycuJGRiLT5ldmVudElkLiciIGlkPSJjb25maXJtTGlzdEJveF8nLiRkYi0+ZXZlbnRJZC4nIj4KCQkJCTxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iY29uZmlybUxpc3RbXSIgaWQ9ImNvbmZpcm1MaXN0XycuJGRiLT5ldmVudElkLiciIHZhbHVlPSInLiRkYi0+ZXZlbnRJZC4nIiAvPiAnLiRkYi0+bmFtZS4nPGJyIC8+PGJyIC8+JzsKCgkJCSRkYXRhTWFpbiAuPSAnCgkJCTwvZGl2Pic7CgkJfQoJfQoKCS8vIFNlbmQgYmFjayBkYXRhCgkkYXJyYXkgPSBhcnJheSgnc3VjY2VzcycgPT4gJ3N1Y2Nlc3MnLCAnZGF0YScgPT4gJGRhdGFNYWluLCAnaWQnID0+ICRfU0VTU0lPTlsnaWQnXSk7CgllY2hvIGpzb25fZW5jb2RlKCRhcnJheSk7CgoJLy8gRW5kIHNlbmQgYmFjayBBSkFYIGRhdGEKfQoKPz4KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";